### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.AnalyticsClientMeta
  commentId: T:LiveKit.Proto.AnalyticsClientMeta
  id: AnalyticsClientMeta
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.AnalyticsClientMeta.#ctor
  - LiveKit.Proto.AnalyticsClientMeta.#ctor(LiveKit.Proto.AnalyticsClientMeta)
  - LiveKit.Proto.AnalyticsClientMeta.CalculateSize
  - LiveKit.Proto.AnalyticsClientMeta.ClearCountry
  - LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash
  - LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn
  - LiveKit.Proto.AnalyticsClientMeta.ClientAddr
  - LiveKit.Proto.AnalyticsClientMeta.ClientAddrFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime
  - LiveKit.Proto.AnalyticsClientMeta.ClientConnectTimeFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.Clone
  - LiveKit.Proto.AnalyticsClientMeta.ConnectionType
  - LiveKit.Proto.AnalyticsClientMeta.ConnectionTypeFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.Country
  - LiveKit.Proto.AnalyticsClientMeta.CountryFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.Descriptor
  - LiveKit.Proto.AnalyticsClientMeta.Equals(LiveKit.Proto.AnalyticsClientMeta)
  - LiveKit.Proto.AnalyticsClientMeta.Equals(System.Object)
  - LiveKit.Proto.AnalyticsClientMeta.GeoHash
  - LiveKit.Proto.AnalyticsClientMeta.GeoHashFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.GetHashCode
  - LiveKit.Proto.AnalyticsClientMeta.HasCountry
  - LiveKit.Proto.AnalyticsClientMeta.HasGeoHash
  - LiveKit.Proto.AnalyticsClientMeta.HasIspAsn
  - LiveKit.Proto.AnalyticsClientMeta.IspAsn
  - LiveKit.Proto.AnalyticsClientMeta.IspAsnFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.AnalyticsClientMeta.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  - LiveKit.Proto.AnalyticsClientMeta.Node
  - LiveKit.Proto.AnalyticsClientMeta.NodeFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.Parser
  - LiveKit.Proto.AnalyticsClientMeta.ReconnectReason
  - LiveKit.Proto.AnalyticsClientMeta.ReconnectReasonFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.Region
  - LiveKit.Proto.AnalyticsClientMeta.RegionFieldNumber
  - LiveKit.Proto.AnalyticsClientMeta.ToString
  - LiveKit.Proto.AnalyticsClientMeta.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: AnalyticsClientMeta
  nameWithType: AnalyticsClientMeta
  fullName: LiveKit.Proto.AnalyticsClientMeta
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AnalyticsClientMeta
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2265
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: 'public sealed class AnalyticsClientMeta : IMessage<AnalyticsClientMeta>, IEquatable<AnalyticsClientMeta>, IDeepCloneable<AnalyticsClientMeta>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class AnalyticsClientMeta Implements IMessage(Of AnalyticsClientMeta), IEquatable(Of AnalyticsClientMeta), IDeepCloneable(Of AnalyticsClientMeta), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}
  - System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.AnalyticsClientMeta.Parser
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.Parser
  id: Parser
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: AnalyticsClientMeta.Parser
  fullName: LiveKit.Proto.AnalyticsClientMeta.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2274
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<AnalyticsClientMeta> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.AnalyticsClientMeta}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of AnalyticsClientMeta)
  overload: LiveKit.Proto.AnalyticsClientMeta.Parser*
- uid: LiveKit.Proto.AnalyticsClientMeta.Descriptor
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: AnalyticsClientMeta.Descriptor
  fullName: LiveKit.Proto.AnalyticsClientMeta.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2278
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.AnalyticsClientMeta.Descriptor*
- uid: LiveKit.Proto.AnalyticsClientMeta.#ctor
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: AnalyticsClientMeta()
  nameWithType: AnalyticsClientMeta.AnalyticsClientMeta()
  fullName: LiveKit.Proto.AnalyticsClientMeta.AnalyticsClientMeta()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2290
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public AnalyticsClientMeta()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.AnalyticsClientMeta.#ctor*
  nameWithType.vb: AnalyticsClientMeta.New()
  fullName.vb: LiveKit.Proto.AnalyticsClientMeta.New()
  name.vb: New()
- uid: LiveKit.Proto.AnalyticsClientMeta.#ctor(LiveKit.Proto.AnalyticsClientMeta)
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.#ctor(LiveKit.Proto.AnalyticsClientMeta)
  id: '#ctor(LiveKit.Proto.AnalyticsClientMeta)'
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: AnalyticsClientMeta(AnalyticsClientMeta)
  nameWithType: AnalyticsClientMeta.AnalyticsClientMeta(AnalyticsClientMeta)
  fullName: LiveKit.Proto.AnalyticsClientMeta.AnalyticsClientMeta(LiveKit.Proto.AnalyticsClientMeta)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2298
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public AnalyticsClientMeta(AnalyticsClientMeta other)
    parameters:
    - id: other
      type: LiveKit.Proto.AnalyticsClientMeta
    content.vb: Public Sub New(other As AnalyticsClientMeta)
  overload: LiveKit.Proto.AnalyticsClientMeta.#ctor*
  nameWithType.vb: AnalyticsClientMeta.New(AnalyticsClientMeta)
  fullName.vb: LiveKit.Proto.AnalyticsClientMeta.New(LiveKit.Proto.AnalyticsClientMeta)
  name.vb: New(AnalyticsClientMeta)
- uid: LiveKit.Proto.AnalyticsClientMeta.Clone
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.Clone
  id: Clone
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AnalyticsClientMeta.Clone()
  fullName: LiveKit.Proto.AnalyticsClientMeta.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2314
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public AnalyticsClientMeta Clone()
    return:
      type: LiveKit.Proto.AnalyticsClientMeta
      description: A deep clone of this object.
    content.vb: Public Function Clone() As AnalyticsClientMeta
  overload: LiveKit.Proto.AnalyticsClientMeta.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}.Clone
- uid: LiveKit.Proto.AnalyticsClientMeta.RegionFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.RegionFieldNumber
  id: RegionFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: RegionFieldNumber
  nameWithType: AnalyticsClientMeta.RegionFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.RegionFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RegionFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2321
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "region" field.
  example: []
  syntax:
    content: public const int RegionFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RegionFieldNumber As Integer = 1
- uid: LiveKit.Proto.AnalyticsClientMeta.Region
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.Region
  id: Region
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: AnalyticsClientMeta.Region
  fullName: LiveKit.Proto.AnalyticsClientMeta.Region
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Region
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2323
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Region { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Region As String
  overload: LiveKit.Proto.AnalyticsClientMeta.Region*
- uid: LiveKit.Proto.AnalyticsClientMeta.NodeFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.NodeFieldNumber
  id: NodeFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: NodeFieldNumber
  nameWithType: AnalyticsClientMeta.NodeFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.NodeFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NodeFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2333
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "node" field.
  example: []
  syntax:
    content: public const int NodeFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const NodeFieldNumber As Integer = 2
- uid: LiveKit.Proto.AnalyticsClientMeta.Node
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.Node
  id: Node
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: AnalyticsClientMeta.Node
  fullName: LiveKit.Proto.AnalyticsClientMeta.Node
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Node
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2335
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Node { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Node As String
  overload: LiveKit.Proto.AnalyticsClientMeta.Node*
- uid: LiveKit.Proto.AnalyticsClientMeta.ClientAddrFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.ClientAddrFieldNumber
  id: ClientAddrFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ClientAddrFieldNumber
  nameWithType: AnalyticsClientMeta.ClientAddrFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClientAddrFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClientAddrFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2345
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "client_addr" field.
  example: []
  syntax:
    content: public const int ClientAddrFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ClientAddrFieldNumber As Integer = 3
- uid: LiveKit.Proto.AnalyticsClientMeta.ClientAddr
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.ClientAddr
  id: ClientAddr
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ClientAddr
  nameWithType: AnalyticsClientMeta.ClientAddr
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClientAddr
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClientAddr
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2347
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string ClientAddr { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientAddr As String
  overload: LiveKit.Proto.AnalyticsClientMeta.ClientAddr*
- uid: LiveKit.Proto.AnalyticsClientMeta.ClientConnectTimeFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.ClientConnectTimeFieldNumber
  id: ClientConnectTimeFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ClientConnectTimeFieldNumber
  nameWithType: AnalyticsClientMeta.ClientConnectTimeFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClientConnectTimeFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClientConnectTimeFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2357
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "client_connect_time" field.
  example: []
  syntax:
    content: public const int ClientConnectTimeFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const ClientConnectTimeFieldNumber As Integer = 4
- uid: LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime
  id: ClientConnectTime
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ClientConnectTime
  nameWithType: AnalyticsClientMeta.ClientConnectTime
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClientConnectTime
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2359
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public uint ClientConnectTime { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property ClientConnectTime As UInteger
  overload: LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime*
- uid: LiveKit.Proto.AnalyticsClientMeta.ConnectionTypeFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.ConnectionTypeFieldNumber
  id: ConnectionTypeFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ConnectionTypeFieldNumber
  nameWithType: AnalyticsClientMeta.ConnectionTypeFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.ConnectionTypeFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ConnectionTypeFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2369
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "connection_type" field.
  example: []
  syntax:
    content: public const int ConnectionTypeFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const ConnectionTypeFieldNumber As Integer = 5
- uid: LiveKit.Proto.AnalyticsClientMeta.ConnectionType
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.ConnectionType
  id: ConnectionType
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ConnectionType
  nameWithType: AnalyticsClientMeta.ConnectionType
  fullName: LiveKit.Proto.AnalyticsClientMeta.ConnectionType
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ConnectionType
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2374
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: udp, tcp, turn
  example: []
  syntax:
    content: public string ConnectionType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConnectionType As String
  overload: LiveKit.Proto.AnalyticsClientMeta.ConnectionType*
- uid: LiveKit.Proto.AnalyticsClientMeta.ReconnectReasonFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.ReconnectReasonFieldNumber
  id: ReconnectReasonFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ReconnectReasonFieldNumber
  nameWithType: AnalyticsClientMeta.ReconnectReasonFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.ReconnectReasonFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ReconnectReasonFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2384
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "reconnect_reason" field.
  example: []
  syntax:
    content: public const int ReconnectReasonFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const ReconnectReasonFieldNumber As Integer = 6
- uid: LiveKit.Proto.AnalyticsClientMeta.ReconnectReason
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.ReconnectReason
  id: ReconnectReason
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ReconnectReason
  nameWithType: AnalyticsClientMeta.ReconnectReason
  fullName: LiveKit.Proto.AnalyticsClientMeta.ReconnectReason
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ReconnectReason
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2386
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ReconnectReason ReconnectReason { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.ReconnectReason
    content.vb: Public Property ReconnectReason As ReconnectReason
  overload: LiveKit.Proto.AnalyticsClientMeta.ReconnectReason*
- uid: LiveKit.Proto.AnalyticsClientMeta.GeoHashFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.GeoHashFieldNumber
  id: GeoHashFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: GeoHashFieldNumber
  nameWithType: AnalyticsClientMeta.GeoHashFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.GeoHashFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GeoHashFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2396
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "geo_hash" field.
  example: []
  syntax:
    content: public const int GeoHashFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const GeoHashFieldNumber As Integer = 7
- uid: LiveKit.Proto.AnalyticsClientMeta.GeoHash
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.GeoHash
  id: GeoHash
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: GeoHash
  nameWithType: AnalyticsClientMeta.GeoHash
  fullName: LiveKit.Proto.AnalyticsClientMeta.GeoHash
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GeoHash
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2400
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string GeoHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GeoHash As String
  overload: LiveKit.Proto.AnalyticsClientMeta.GeoHash*
- uid: LiveKit.Proto.AnalyticsClientMeta.HasGeoHash
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.HasGeoHash
  id: HasGeoHash
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: HasGeoHash
  nameWithType: AnalyticsClientMeta.HasGeoHash
  fullName: LiveKit.Proto.AnalyticsClientMeta.HasGeoHash
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HasGeoHash
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2409
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Gets whether the "geo_hash" field is set
  example: []
  syntax:
    content: public bool HasGeoHash { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasGeoHash As Boolean
  overload: LiveKit.Proto.AnalyticsClientMeta.HasGeoHash*
- uid: LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash
  id: ClearGeoHash
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ClearGeoHash()
  nameWithType: AnalyticsClientMeta.ClearGeoHash()
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearGeoHash
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2415
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Clears the value of the "geo_hash" field
  example: []
  syntax:
    content: public void ClearGeoHash()
    content.vb: Public Sub ClearGeoHash()
  overload: LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash*
- uid: LiveKit.Proto.AnalyticsClientMeta.CountryFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.CountryFieldNumber
  id: CountryFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: CountryFieldNumber
  nameWithType: AnalyticsClientMeta.CountryFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.CountryFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CountryFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2422
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "country" field.
  example: []
  syntax:
    content: public const int CountryFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const CountryFieldNumber As Integer = 8
- uid: LiveKit.Proto.AnalyticsClientMeta.Country
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.Country
  id: Country
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: AnalyticsClientMeta.Country
  fullName: LiveKit.Proto.AnalyticsClientMeta.Country
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Country
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2426
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Country As String
  overload: LiveKit.Proto.AnalyticsClientMeta.Country*
- uid: LiveKit.Proto.AnalyticsClientMeta.HasCountry
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.HasCountry
  id: HasCountry
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: HasCountry
  nameWithType: AnalyticsClientMeta.HasCountry
  fullName: LiveKit.Proto.AnalyticsClientMeta.HasCountry
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HasCountry
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2435
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Gets whether the "country" field is set
  example: []
  syntax:
    content: public bool HasCountry { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasCountry As Boolean
  overload: LiveKit.Proto.AnalyticsClientMeta.HasCountry*
- uid: LiveKit.Proto.AnalyticsClientMeta.ClearCountry
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.ClearCountry
  id: ClearCountry
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ClearCountry()
  nameWithType: AnalyticsClientMeta.ClearCountry()
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClearCountry()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearCountry
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2441
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Clears the value of the "country" field
  example: []
  syntax:
    content: public void ClearCountry()
    content.vb: Public Sub ClearCountry()
  overload: LiveKit.Proto.AnalyticsClientMeta.ClearCountry*
- uid: LiveKit.Proto.AnalyticsClientMeta.IspAsnFieldNumber
  commentId: F:LiveKit.Proto.AnalyticsClientMeta.IspAsnFieldNumber
  id: IspAsnFieldNumber
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: IspAsnFieldNumber
  nameWithType: AnalyticsClientMeta.IspAsnFieldNumber
  fullName: LiveKit.Proto.AnalyticsClientMeta.IspAsnFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IspAsnFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2448
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "isp_asn" field.
  example: []
  syntax:
    content: public const int IspAsnFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const IspAsnFieldNumber As Integer = 9
- uid: LiveKit.Proto.AnalyticsClientMeta.IspAsn
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.IspAsn
  id: IspAsn
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: IspAsn
  nameWithType: AnalyticsClientMeta.IspAsn
  fullName: LiveKit.Proto.AnalyticsClientMeta.IspAsn
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IspAsn
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2452
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public uint IspAsn { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property IspAsn As UInteger
  overload: LiveKit.Proto.AnalyticsClientMeta.IspAsn*
- uid: LiveKit.Proto.AnalyticsClientMeta.HasIspAsn
  commentId: P:LiveKit.Proto.AnalyticsClientMeta.HasIspAsn
  id: HasIspAsn
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: HasIspAsn
  nameWithType: AnalyticsClientMeta.HasIspAsn
  fullName: LiveKit.Proto.AnalyticsClientMeta.HasIspAsn
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HasIspAsn
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2462
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Gets whether the "isp_asn" field is set
  example: []
  syntax:
    content: public bool HasIspAsn { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasIspAsn As Boolean
  overload: LiveKit.Proto.AnalyticsClientMeta.HasIspAsn*
- uid: LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn
  id: ClearIspAsn
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ClearIspAsn()
  nameWithType: AnalyticsClientMeta.ClearIspAsn()
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearIspAsn
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2468
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Clears the value of the "isp_asn" field
  example: []
  syntax:
    content: public void ClearIspAsn()
    content.vb: Public Sub ClearIspAsn()
  overload: LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn*
- uid: LiveKit.Proto.AnalyticsClientMeta.Equals(System.Object)
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: AnalyticsClientMeta.Equals(object)
  fullName: LiveKit.Proto.AnalyticsClientMeta.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2474
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.AnalyticsClientMeta.Equals*
  nameWithType.vb: AnalyticsClientMeta.Equals(Object)
  fullName.vb: LiveKit.Proto.AnalyticsClientMeta.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.AnalyticsClientMeta.Equals(LiveKit.Proto.AnalyticsClientMeta)
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.Equals(LiveKit.Proto.AnalyticsClientMeta)
  id: Equals(LiveKit.Proto.AnalyticsClientMeta)
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: Equals(AnalyticsClientMeta)
  nameWithType: AnalyticsClientMeta.Equals(AnalyticsClientMeta)
  fullName: LiveKit.Proto.AnalyticsClientMeta.Equals(LiveKit.Proto.AnalyticsClientMeta)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2480
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(AnalyticsClientMeta other)
    parameters:
    - id: other
      type: LiveKit.Proto.AnalyticsClientMeta
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AnalyticsClientMeta) As Boolean
  overload: LiveKit.Proto.AnalyticsClientMeta.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}.Equals(LiveKit.Proto.AnalyticsClientMeta)
- uid: LiveKit.Proto.AnalyticsClientMeta.GetHashCode
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AnalyticsClientMeta.GetHashCode()
  fullName: LiveKit.Proto.AnalyticsClientMeta.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2501
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.AnalyticsClientMeta.GetHashCode*
- uid: LiveKit.Proto.AnalyticsClientMeta.ToString
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.ToString
  id: ToString
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AnalyticsClientMeta.ToString()
  fullName: LiveKit.Proto.AnalyticsClientMeta.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2520
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.AnalyticsClientMeta.ToString*
- uid: LiveKit.Proto.AnalyticsClientMeta.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: AnalyticsClientMeta.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.AnalyticsClientMeta.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2526
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.AnalyticsClientMeta.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.AnalyticsClientMeta.CalculateSize
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: AnalyticsClientMeta.CalculateSize()
  fullName: LiveKit.Proto.AnalyticsClientMeta.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2620
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.AnalyticsClientMeta.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.AnalyticsClientMeta.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  id: MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: MergeFrom(AnalyticsClientMeta)
  nameWithType: AnalyticsClientMeta.MergeFrom(AnalyticsClientMeta)
  fullName: LiveKit.Proto.AnalyticsClientMeta.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2657
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(AnalyticsClientMeta other)
    parameters:
    - id: other
      type: LiveKit.Proto.AnalyticsClientMeta
    content.vb: Public Sub MergeFrom(other As AnalyticsClientMeta)
  overload: LiveKit.Proto.AnalyticsClientMeta.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
- uid: LiveKit.Proto.AnalyticsClientMeta.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.AnalyticsClientMeta.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.AnalyticsClientMeta
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: AnalyticsClientMeta.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.AnalyticsClientMeta.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAnalytics.cs
    startLine: 2693
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.AnalyticsClientMeta.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.AnalyticsClientMeta.html
  name: IMessage<AnalyticsClientMeta>
  nameWithType: IMessage<AnalyticsClientMeta>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.AnalyticsClientMeta>
  nameWithType.vb: IMessage(Of AnalyticsClientMeta)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.AnalyticsClientMeta)
  name.vb: IMessage(Of AnalyticsClientMeta)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}
  commentId: T:System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<AnalyticsClientMeta>
  nameWithType: IEquatable<AnalyticsClientMeta>
  fullName: System.IEquatable<LiveKit.Proto.AnalyticsClientMeta>
  nameWithType.vb: IEquatable(Of AnalyticsClientMeta)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.AnalyticsClientMeta)
  name.vb: IEquatable(Of AnalyticsClientMeta)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.AnalyticsClientMeta.html
  name: IDeepCloneable<AnalyticsClientMeta>
  nameWithType: IDeepCloneable<AnalyticsClientMeta>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.AnalyticsClientMeta>
  nameWithType.vb: IDeepCloneable(Of AnalyticsClientMeta)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.AnalyticsClientMeta)
  name.vb: IDeepCloneable(Of AnalyticsClientMeta)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.AnalyticsClientMeta.Parser*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.Parser
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_Parser
  name: Parser
  nameWithType: AnalyticsClientMeta.Parser
  fullName: LiveKit.Proto.AnalyticsClientMeta.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.AnalyticsClientMeta}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.AnalyticsClientMeta}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.AnalyticsClientMeta.html
  name: MessageParser<AnalyticsClientMeta>
  nameWithType: MessageParser<AnalyticsClientMeta>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.AnalyticsClientMeta>
  nameWithType.vb: MessageParser(Of AnalyticsClientMeta)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.AnalyticsClientMeta)
  name.vb: MessageParser(Of AnalyticsClientMeta)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.AnalyticsClientMeta.Descriptor*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.Descriptor
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_Descriptor
  name: Descriptor
  nameWithType: AnalyticsClientMeta.Descriptor
  fullName: LiveKit.Proto.AnalyticsClientMeta.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.AnalyticsClientMeta.#ctor*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.#ctor
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta__ctor
  name: AnalyticsClientMeta
  nameWithType: AnalyticsClientMeta.AnalyticsClientMeta
  fullName: LiveKit.Proto.AnalyticsClientMeta.AnalyticsClientMeta
  nameWithType.vb: AnalyticsClientMeta.New
  fullName.vb: LiveKit.Proto.AnalyticsClientMeta.New
  name.vb: New
- uid: LiveKit.Proto.AnalyticsClientMeta
  commentId: T:LiveKit.Proto.AnalyticsClientMeta
  parent: LiveKit.Proto
  href: LiveKit.Proto.AnalyticsClientMeta.html
  name: AnalyticsClientMeta
  nameWithType: AnalyticsClientMeta
  fullName: LiveKit.Proto.AnalyticsClientMeta
- uid: LiveKit.Proto.AnalyticsClientMeta.Clone*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.Clone
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_Clone
  name: Clone
  nameWithType: AnalyticsClientMeta.Clone
  fullName: LiveKit.Proto.AnalyticsClientMeta.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<AnalyticsClientMeta>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.AnalyticsClientMeta>.Clone()
  nameWithType.vb: IDeepCloneable(Of AnalyticsClientMeta).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.AnalyticsClientMeta).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.AnalyticsClientMeta}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.AnalyticsClientMeta.Region*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.Region
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_Region
  name: Region
  nameWithType: AnalyticsClientMeta.Region
  fullName: LiveKit.Proto.AnalyticsClientMeta.Region
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.AnalyticsClientMeta.Node*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.Node
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_Node
  name: Node
  nameWithType: AnalyticsClientMeta.Node
  fullName: LiveKit.Proto.AnalyticsClientMeta.Node
- uid: LiveKit.Proto.AnalyticsClientMeta.ClientAddr*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ClientAddr
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ClientAddr
  name: ClientAddr
  nameWithType: AnalyticsClientMeta.ClientAddr
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClientAddr
- uid: LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ClientConnectTime
  name: ClientConnectTime
  nameWithType: AnalyticsClientMeta.ClientConnectTime
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClientConnectTime
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: LiveKit.Proto.AnalyticsClientMeta.ConnectionType*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ConnectionType
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ConnectionType
  name: ConnectionType
  nameWithType: AnalyticsClientMeta.ConnectionType
  fullName: LiveKit.Proto.AnalyticsClientMeta.ConnectionType
- uid: LiveKit.Proto.AnalyticsClientMeta.ReconnectReason*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ReconnectReason
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ReconnectReason
  name: ReconnectReason
  nameWithType: AnalyticsClientMeta.ReconnectReason
  fullName: LiveKit.Proto.AnalyticsClientMeta.ReconnectReason
- uid: LiveKit.Proto.ReconnectReason
  commentId: T:LiveKit.Proto.ReconnectReason
  parent: LiveKit.Proto
  href: LiveKit.Proto.ReconnectReason.html
  name: ReconnectReason
  nameWithType: ReconnectReason
  fullName: LiveKit.Proto.ReconnectReason
- uid: LiveKit.Proto.AnalyticsClientMeta.GeoHash*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.GeoHash
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_GeoHash
  name: GeoHash
  nameWithType: AnalyticsClientMeta.GeoHash
  fullName: LiveKit.Proto.AnalyticsClientMeta.GeoHash
- uid: LiveKit.Proto.AnalyticsClientMeta.HasGeoHash*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.HasGeoHash
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_HasGeoHash
  name: HasGeoHash
  nameWithType: AnalyticsClientMeta.HasGeoHash
  fullName: LiveKit.Proto.AnalyticsClientMeta.HasGeoHash
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ClearGeoHash
  name: ClearGeoHash
  nameWithType: AnalyticsClientMeta.ClearGeoHash
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClearGeoHash
- uid: LiveKit.Proto.AnalyticsClientMeta.Country*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.Country
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_Country
  name: Country
  nameWithType: AnalyticsClientMeta.Country
  fullName: LiveKit.Proto.AnalyticsClientMeta.Country
- uid: LiveKit.Proto.AnalyticsClientMeta.HasCountry*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.HasCountry
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_HasCountry
  name: HasCountry
  nameWithType: AnalyticsClientMeta.HasCountry
  fullName: LiveKit.Proto.AnalyticsClientMeta.HasCountry
- uid: LiveKit.Proto.AnalyticsClientMeta.ClearCountry*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ClearCountry
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ClearCountry
  name: ClearCountry
  nameWithType: AnalyticsClientMeta.ClearCountry
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClearCountry
- uid: LiveKit.Proto.AnalyticsClientMeta.IspAsn*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.IspAsn
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_IspAsn
  name: IspAsn
  nameWithType: AnalyticsClientMeta.IspAsn
  fullName: LiveKit.Proto.AnalyticsClientMeta.IspAsn
- uid: LiveKit.Proto.AnalyticsClientMeta.HasIspAsn*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.HasIspAsn
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_HasIspAsn
  name: HasIspAsn
  nameWithType: AnalyticsClientMeta.HasIspAsn
  fullName: LiveKit.Proto.AnalyticsClientMeta.HasIspAsn
- uid: LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ClearIspAsn
  name: ClearIspAsn
  nameWithType: AnalyticsClientMeta.ClearIspAsn
  fullName: LiveKit.Proto.AnalyticsClientMeta.ClearIspAsn
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.AnalyticsClientMeta.Equals*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.Equals
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_Equals_System_Object_
  name: Equals
  nameWithType: AnalyticsClientMeta.Equals
  fullName: LiveKit.Proto.AnalyticsClientMeta.Equals
- uid: System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}.Equals(LiveKit.Proto.AnalyticsClientMeta)
  commentId: M:System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}.Equals(LiveKit.Proto.AnalyticsClientMeta)
  parent: System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(AnalyticsClientMeta)
  nameWithType: IEquatable<AnalyticsClientMeta>.Equals(AnalyticsClientMeta)
  fullName: System.IEquatable<LiveKit.Proto.AnalyticsClientMeta>.Equals(LiveKit.Proto.AnalyticsClientMeta)
  nameWithType.vb: IEquatable(Of AnalyticsClientMeta).Equals(AnalyticsClientMeta)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.AnalyticsClientMeta).Equals(LiveKit.Proto.AnalyticsClientMeta)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}.Equals(LiveKit.Proto.AnalyticsClientMeta)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.AnalyticsClientMeta}.Equals(LiveKit.Proto.AnalyticsClientMeta)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.AnalyticsClientMeta.GetHashCode*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.GetHashCode
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_GetHashCode
  name: GetHashCode
  nameWithType: AnalyticsClientMeta.GetHashCode
  fullName: LiveKit.Proto.AnalyticsClientMeta.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.AnalyticsClientMeta.ToString*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.ToString
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_ToString
  name: ToString
  nameWithType: AnalyticsClientMeta.ToString
  fullName: LiveKit.Proto.AnalyticsClientMeta.ToString
- uid: LiveKit.Proto.AnalyticsClientMeta.WriteTo*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.WriteTo
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: AnalyticsClientMeta.WriteTo
  fullName: LiveKit.Proto.AnalyticsClientMeta.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.AnalyticsClientMeta.CalculateSize*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.CalculateSize
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_CalculateSize
  name: CalculateSize
  nameWithType: AnalyticsClientMeta.CalculateSize
  fullName: LiveKit.Proto.AnalyticsClientMeta.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.AnalyticsClientMeta.MergeFrom*
  commentId: Overload:LiveKit.Proto.AnalyticsClientMeta.MergeFrom
  href: LiveKit.Proto.AnalyticsClientMeta.html#LiveKit_Proto_AnalyticsClientMeta_MergeFrom_LiveKit_Proto_AnalyticsClientMeta_
  name: MergeFrom
  nameWithType: AnalyticsClientMeta.MergeFrom
  fullName: LiveKit.Proto.AnalyticsClientMeta.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.AnalyticsClientMeta.html
  name: MergeFrom(AnalyticsClientMeta)
  nameWithType: IMessage<AnalyticsClientMeta>.MergeFrom(AnalyticsClientMeta)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.AnalyticsClientMeta>.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  nameWithType.vb: IMessage(Of AnalyticsClientMeta).MergeFrom(AnalyticsClientMeta)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.AnalyticsClientMeta).MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.AnalyticsClientMeta}.MergeFrom(LiveKit.Proto.AnalyticsClientMeta)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.AnalyticsClientMeta
    name: AnalyticsClientMeta
    href: LiveKit.Proto.AnalyticsClientMeta.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
