### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.ServerMessage
  commentId: T:LiveKit.Proto.ServerMessage
  id: ServerMessage
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.ServerMessage.#ctor
  - LiveKit.Proto.ServerMessage.#ctor(LiveKit.Proto.ServerMessage)
  - LiveKit.Proto.ServerMessage.Assignment
  - LiveKit.Proto.ServerMessage.AssignmentFieldNumber
  - LiveKit.Proto.ServerMessage.Availability
  - LiveKit.Proto.ServerMessage.AvailabilityFieldNumber
  - LiveKit.Proto.ServerMessage.CalculateSize
  - LiveKit.Proto.ServerMessage.ClearMessage
  - LiveKit.Proto.ServerMessage.Clone
  - LiveKit.Proto.ServerMessage.Descriptor
  - LiveKit.Proto.ServerMessage.Equals(LiveKit.Proto.ServerMessage)
  - LiveKit.Proto.ServerMessage.Equals(System.Object)
  - LiveKit.Proto.ServerMessage.GetHashCode
  - LiveKit.Proto.ServerMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.ServerMessage.MergeFrom(LiveKit.Proto.ServerMessage)
  - LiveKit.Proto.ServerMessage.MessageCase
  - LiveKit.Proto.ServerMessage.Parser
  - LiveKit.Proto.ServerMessage.Pong
  - LiveKit.Proto.ServerMessage.PongFieldNumber
  - LiveKit.Proto.ServerMessage.Register
  - LiveKit.Proto.ServerMessage.RegisterFieldNumber
  - LiveKit.Proto.ServerMessage.Termination
  - LiveKit.Proto.ServerMessage.TerminationFieldNumber
  - LiveKit.Proto.ServerMessage.ToString
  - LiveKit.Proto.ServerMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: ServerMessage
  nameWithType: ServerMessage
  fullName: LiveKit.Proto.ServerMessage
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ServerMessage
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1726
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: from Server to Worker
  example: []
  syntax:
    content: 'public sealed class ServerMessage : IMessage<ServerMessage>, IEquatable<ServerMessage>, IDeepCloneable<ServerMessage>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class ServerMessage Implements IMessage(Of ServerMessage), IEquatable(Of ServerMessage), IDeepCloneable(Of ServerMessage), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}
  - System.IEquatable{LiveKit.Proto.ServerMessage}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.ServerMessage.Parser
  commentId: P:LiveKit.Proto.ServerMessage.Parser
  id: Parser
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: ServerMessage.Parser
  fullName: LiveKit.Proto.ServerMessage.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1734
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<ServerMessage> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.ServerMessage}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of ServerMessage)
  overload: LiveKit.Proto.ServerMessage.Parser*
- uid: LiveKit.Proto.ServerMessage.Descriptor
  commentId: P:LiveKit.Proto.ServerMessage.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: ServerMessage.Descriptor
  fullName: LiveKit.Proto.ServerMessage.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1738
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.ServerMessage.Descriptor*
- uid: LiveKit.Proto.ServerMessage.#ctor
  commentId: M:LiveKit.Proto.ServerMessage.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: ServerMessage()
  nameWithType: ServerMessage.ServerMessage()
  fullName: LiveKit.Proto.ServerMessage.ServerMessage()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1750
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ServerMessage()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.ServerMessage.#ctor*
  nameWithType.vb: ServerMessage.New()
  fullName.vb: LiveKit.Proto.ServerMessage.New()
  name.vb: New()
- uid: LiveKit.Proto.ServerMessage.#ctor(LiveKit.Proto.ServerMessage)
  commentId: M:LiveKit.Proto.ServerMessage.#ctor(LiveKit.Proto.ServerMessage)
  id: '#ctor(LiveKit.Proto.ServerMessage)'
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: ServerMessage(ServerMessage)
  nameWithType: ServerMessage.ServerMessage(ServerMessage)
  fullName: LiveKit.Proto.ServerMessage.ServerMessage(LiveKit.Proto.ServerMessage)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1758
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ServerMessage(ServerMessage other)
    parameters:
    - id: other
      type: LiveKit.Proto.ServerMessage
    content.vb: Public Sub New(other As ServerMessage)
  overload: LiveKit.Proto.ServerMessage.#ctor*
  nameWithType.vb: ServerMessage.New(ServerMessage)
  fullName.vb: LiveKit.Proto.ServerMessage.New(LiveKit.Proto.ServerMessage)
  name.vb: New(ServerMessage)
- uid: LiveKit.Proto.ServerMessage.Clone
  commentId: M:LiveKit.Proto.ServerMessage.Clone
  id: Clone
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ServerMessage.Clone()
  fullName: LiveKit.Proto.ServerMessage.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1782
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public ServerMessage Clone()
    return:
      type: LiveKit.Proto.ServerMessage
      description: A deep clone of this object.
    content.vb: Public Function Clone() As ServerMessage
  overload: LiveKit.Proto.ServerMessage.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}.Clone
- uid: LiveKit.Proto.ServerMessage.RegisterFieldNumber
  commentId: F:LiveKit.Proto.ServerMessage.RegisterFieldNumber
  id: RegisterFieldNumber
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: RegisterFieldNumber
  nameWithType: ServerMessage.RegisterFieldNumber
  fullName: LiveKit.Proto.ServerMessage.RegisterFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RegisterFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1789
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "register" field.
  example: []
  syntax:
    content: public const int RegisterFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RegisterFieldNumber As Integer = 1
- uid: LiveKit.Proto.ServerMessage.Register
  commentId: P:LiveKit.Proto.ServerMessage.Register
  id: Register
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Register
  nameWithType: ServerMessage.Register
  fullName: LiveKit.Proto.ServerMessage.Register
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Register
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1793
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: server confirms the registration, from this moment on, the worker is considered active
  example: []
  syntax:
    content: public RegisterWorkerResponse Register { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.RegisterWorkerResponse
    content.vb: Public Property Register As RegisterWorkerResponse
  overload: LiveKit.Proto.ServerMessage.Register*
- uid: LiveKit.Proto.ServerMessage.AvailabilityFieldNumber
  commentId: F:LiveKit.Proto.ServerMessage.AvailabilityFieldNumber
  id: AvailabilityFieldNumber
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: AvailabilityFieldNumber
  nameWithType: ServerMessage.AvailabilityFieldNumber
  fullName: LiveKit.Proto.ServerMessage.AvailabilityFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AvailabilityFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1804
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "availability" field.
  example: []
  syntax:
    content: public const int AvailabilityFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const AvailabilityFieldNumber As Integer = 2
- uid: LiveKit.Proto.ServerMessage.Availability
  commentId: P:LiveKit.Proto.ServerMessage.Availability
  id: Availability
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Availability
  nameWithType: ServerMessage.Availability
  fullName: LiveKit.Proto.ServerMessage.Availability
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Availability
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1808
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: server asks worker to confirm availability for a job
  example: []
  syntax:
    content: public AvailabilityRequest Availability { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.AvailabilityRequest
    content.vb: Public Property Availability As AvailabilityRequest
  overload: LiveKit.Proto.ServerMessage.Availability*
- uid: LiveKit.Proto.ServerMessage.AssignmentFieldNumber
  commentId: F:LiveKit.Proto.ServerMessage.AssignmentFieldNumber
  id: AssignmentFieldNumber
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: AssignmentFieldNumber
  nameWithType: ServerMessage.AssignmentFieldNumber
  fullName: LiveKit.Proto.ServerMessage.AssignmentFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AssignmentFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1819
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "assignment" field.
  example: []
  syntax:
    content: public const int AssignmentFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const AssignmentFieldNumber As Integer = 3
- uid: LiveKit.Proto.ServerMessage.Assignment
  commentId: P:LiveKit.Proto.ServerMessage.Assignment
  id: Assignment
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Assignment
  nameWithType: ServerMessage.Assignment
  fullName: LiveKit.Proto.ServerMessage.Assignment
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Assignment
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1820
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public JobAssignment Assignment { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.JobAssignment
    content.vb: Public Property Assignment As JobAssignment
  overload: LiveKit.Proto.ServerMessage.Assignment*
- uid: LiveKit.Proto.ServerMessage.TerminationFieldNumber
  commentId: F:LiveKit.Proto.ServerMessage.TerminationFieldNumber
  id: TerminationFieldNumber
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: TerminationFieldNumber
  nameWithType: ServerMessage.TerminationFieldNumber
  fullName: LiveKit.Proto.ServerMessage.TerminationFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: TerminationFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1831
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "termination" field.
  example: []
  syntax:
    content: public const int TerminationFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const TerminationFieldNumber As Integer = 5
- uid: LiveKit.Proto.ServerMessage.Termination
  commentId: P:LiveKit.Proto.ServerMessage.Termination
  id: Termination
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Termination
  nameWithType: ServerMessage.Termination
  fullName: LiveKit.Proto.ServerMessage.Termination
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Termination
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1832
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public JobTermination Termination { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.JobTermination
    content.vb: Public Property Termination As JobTermination
  overload: LiveKit.Proto.ServerMessage.Termination*
- uid: LiveKit.Proto.ServerMessage.PongFieldNumber
  commentId: F:LiveKit.Proto.ServerMessage.PongFieldNumber
  id: PongFieldNumber
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: PongFieldNumber
  nameWithType: ServerMessage.PongFieldNumber
  fullName: LiveKit.Proto.ServerMessage.PongFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PongFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1843
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "pong" field.
  example: []
  syntax:
    content: public const int PongFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const PongFieldNumber As Integer = 4
- uid: LiveKit.Proto.ServerMessage.Pong
  commentId: P:LiveKit.Proto.ServerMessage.Pong
  id: Pong
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Pong
  nameWithType: ServerMessage.Pong
  fullName: LiveKit.Proto.ServerMessage.Pong
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Pong
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1844
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public WorkerPong Pong { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.WorkerPong
    content.vb: Public Property Pong As WorkerPong
  overload: LiveKit.Proto.ServerMessage.Pong*
- uid: LiveKit.Proto.ServerMessage.MessageCase
  commentId: P:LiveKit.Proto.ServerMessage.MessageCase
  id: MessageCase
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: MessageCase
  nameWithType: ServerMessage.MessageCase
  fullName: LiveKit.Proto.ServerMessage.MessageCase
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MessageCase
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1865
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ServerMessage.MessageOneofCase MessageCase { get; }
    parameters: []
    return:
      type: LiveKit.Proto.ServerMessage.MessageOneofCase
    content.vb: Public ReadOnly Property MessageCase As ServerMessage.MessageOneofCase
  overload: LiveKit.Proto.ServerMessage.MessageCase*
- uid: LiveKit.Proto.ServerMessage.ClearMessage
  commentId: M:LiveKit.Proto.ServerMessage.ClearMessage
  id: ClearMessage
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: ClearMessage()
  nameWithType: ServerMessage.ClearMessage()
  fullName: LiveKit.Proto.ServerMessage.ClearMessage()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearMessage
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1871
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public void ClearMessage()
    content.vb: Public Sub ClearMessage()
  overload: LiveKit.Proto.ServerMessage.ClearMessage*
- uid: LiveKit.Proto.ServerMessage.Equals(System.Object)
  commentId: M:LiveKit.Proto.ServerMessage.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: ServerMessage.Equals(object)
  fullName: LiveKit.Proto.ServerMessage.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1878
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.ServerMessage.Equals*
  nameWithType.vb: ServerMessage.Equals(Object)
  fullName.vb: LiveKit.Proto.ServerMessage.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.ServerMessage.Equals(LiveKit.Proto.ServerMessage)
  commentId: M:LiveKit.Proto.ServerMessage.Equals(LiveKit.Proto.ServerMessage)
  id: Equals(LiveKit.Proto.ServerMessage)
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: Equals(ServerMessage)
  nameWithType: ServerMessage.Equals(ServerMessage)
  fullName: LiveKit.Proto.ServerMessage.Equals(LiveKit.Proto.ServerMessage)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1884
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(ServerMessage other)
    parameters:
    - id: other
      type: LiveKit.Proto.ServerMessage
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ServerMessage) As Boolean
  overload: LiveKit.Proto.ServerMessage.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.ServerMessage}.Equals(LiveKit.Proto.ServerMessage)
- uid: LiveKit.Proto.ServerMessage.GetHashCode
  commentId: M:LiveKit.Proto.ServerMessage.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ServerMessage.GetHashCode()
  fullName: LiveKit.Proto.ServerMessage.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1902
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.ServerMessage.GetHashCode*
- uid: LiveKit.Proto.ServerMessage.ToString
  commentId: M:LiveKit.Proto.ServerMessage.ToString
  id: ToString
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServerMessage.ToString()
  fullName: LiveKit.Proto.ServerMessage.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1918
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.ServerMessage.ToString*
- uid: LiveKit.Proto.ServerMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.ServerMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: ServerMessage.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.ServerMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1924
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.ServerMessage.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.ServerMessage.CalculateSize
  commentId: M:LiveKit.Proto.ServerMessage.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: ServerMessage.CalculateSize()
  fullName: LiveKit.Proto.ServerMessage.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 1986
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.ServerMessage.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.ServerMessage.MergeFrom(LiveKit.Proto.ServerMessage)
  commentId: M:LiveKit.Proto.ServerMessage.MergeFrom(LiveKit.Proto.ServerMessage)
  id: MergeFrom(LiveKit.Proto.ServerMessage)
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: MergeFrom(ServerMessage)
  nameWithType: ServerMessage.MergeFrom(ServerMessage)
  fullName: LiveKit.Proto.ServerMessage.MergeFrom(LiveKit.Proto.ServerMessage)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2011
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(ServerMessage other)
    parameters:
    - id: other
      type: LiveKit.Proto.ServerMessage
    content.vb: Public Sub MergeFrom(other As ServerMessage)
  overload: LiveKit.Proto.ServerMessage.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}.MergeFrom(LiveKit.Proto.ServerMessage)
- uid: LiveKit.Proto.ServerMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.ServerMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.ServerMessage
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: ServerMessage.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.ServerMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2053
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.ServerMessage.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.ServerMessage.html
  name: IMessage<ServerMessage>
  nameWithType: IMessage<ServerMessage>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.ServerMessage>
  nameWithType.vb: IMessage(Of ServerMessage)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.ServerMessage)
  name.vb: IMessage(Of ServerMessage)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.ServerMessage}
  commentId: T:System.IEquatable{LiveKit.Proto.ServerMessage}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ServerMessage>
  nameWithType: IEquatable<ServerMessage>
  fullName: System.IEquatable<LiveKit.Proto.ServerMessage>
  nameWithType.vb: IEquatable(Of ServerMessage)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.ServerMessage)
  name.vb: IEquatable(Of ServerMessage)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.ServerMessage.html
  name: IDeepCloneable<ServerMessage>
  nameWithType: IDeepCloneable<ServerMessage>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.ServerMessage>
  nameWithType.vb: IDeepCloneable(Of ServerMessage)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.ServerMessage)
  name.vb: IDeepCloneable(Of ServerMessage)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.ServerMessage.Parser*
  commentId: Overload:LiveKit.Proto.ServerMessage.Parser
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Parser
  name: Parser
  nameWithType: ServerMessage.Parser
  fullName: LiveKit.Proto.ServerMessage.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.ServerMessage}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.ServerMessage}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.ServerMessage.html
  name: MessageParser<ServerMessage>
  nameWithType: MessageParser<ServerMessage>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.ServerMessage>
  nameWithType.vb: MessageParser(Of ServerMessage)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.ServerMessage)
  name.vb: MessageParser(Of ServerMessage)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.ServerMessage.Descriptor*
  commentId: Overload:LiveKit.Proto.ServerMessage.Descriptor
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Descriptor
  name: Descriptor
  nameWithType: ServerMessage.Descriptor
  fullName: LiveKit.Proto.ServerMessage.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.ServerMessage.#ctor*
  commentId: Overload:LiveKit.Proto.ServerMessage.#ctor
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage__ctor
  name: ServerMessage
  nameWithType: ServerMessage.ServerMessage
  fullName: LiveKit.Proto.ServerMessage.ServerMessage
  nameWithType.vb: ServerMessage.New
  fullName.vb: LiveKit.Proto.ServerMessage.New
  name.vb: New
- uid: LiveKit.Proto.ServerMessage
  commentId: T:LiveKit.Proto.ServerMessage
  parent: LiveKit.Proto
  href: LiveKit.Proto.ServerMessage.html
  name: ServerMessage
  nameWithType: ServerMessage
  fullName: LiveKit.Proto.ServerMessage
- uid: LiveKit.Proto.ServerMessage.Clone*
  commentId: Overload:LiveKit.Proto.ServerMessage.Clone
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Clone
  name: Clone
  nameWithType: ServerMessage.Clone
  fullName: LiveKit.Proto.ServerMessage.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<ServerMessage>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.ServerMessage>.Clone()
  nameWithType.vb: IDeepCloneable(Of ServerMessage).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.ServerMessage).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.ServerMessage}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.ServerMessage.Register*
  commentId: Overload:LiveKit.Proto.ServerMessage.Register
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Register
  name: Register
  nameWithType: ServerMessage.Register
  fullName: LiveKit.Proto.ServerMessage.Register
- uid: LiveKit.Proto.RegisterWorkerResponse
  commentId: T:LiveKit.Proto.RegisterWorkerResponse
  parent: LiveKit.Proto
  href: LiveKit.Proto.RegisterWorkerResponse.html
  name: RegisterWorkerResponse
  nameWithType: RegisterWorkerResponse
  fullName: LiveKit.Proto.RegisterWorkerResponse
- uid: LiveKit.Proto.ServerMessage.Availability*
  commentId: Overload:LiveKit.Proto.ServerMessage.Availability
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Availability
  name: Availability
  nameWithType: ServerMessage.Availability
  fullName: LiveKit.Proto.ServerMessage.Availability
- uid: LiveKit.Proto.AvailabilityRequest
  commentId: T:LiveKit.Proto.AvailabilityRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.AvailabilityRequest.html
  name: AvailabilityRequest
  nameWithType: AvailabilityRequest
  fullName: LiveKit.Proto.AvailabilityRequest
- uid: LiveKit.Proto.ServerMessage.Assignment*
  commentId: Overload:LiveKit.Proto.ServerMessage.Assignment
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Assignment
  name: Assignment
  nameWithType: ServerMessage.Assignment
  fullName: LiveKit.Proto.ServerMessage.Assignment
- uid: LiveKit.Proto.JobAssignment
  commentId: T:LiveKit.Proto.JobAssignment
  parent: LiveKit.Proto
  href: LiveKit.Proto.JobAssignment.html
  name: JobAssignment
  nameWithType: JobAssignment
  fullName: LiveKit.Proto.JobAssignment
- uid: LiveKit.Proto.ServerMessage.Termination*
  commentId: Overload:LiveKit.Proto.ServerMessage.Termination
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Termination
  name: Termination
  nameWithType: ServerMessage.Termination
  fullName: LiveKit.Proto.ServerMessage.Termination
- uid: LiveKit.Proto.JobTermination
  commentId: T:LiveKit.Proto.JobTermination
  parent: LiveKit.Proto
  href: LiveKit.Proto.JobTermination.html
  name: JobTermination
  nameWithType: JobTermination
  fullName: LiveKit.Proto.JobTermination
- uid: LiveKit.Proto.ServerMessage.Pong*
  commentId: Overload:LiveKit.Proto.ServerMessage.Pong
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Pong
  name: Pong
  nameWithType: ServerMessage.Pong
  fullName: LiveKit.Proto.ServerMessage.Pong
- uid: LiveKit.Proto.WorkerPong
  commentId: T:LiveKit.Proto.WorkerPong
  parent: LiveKit.Proto
  href: LiveKit.Proto.WorkerPong.html
  name: WorkerPong
  nameWithType: WorkerPong
  fullName: LiveKit.Proto.WorkerPong
- uid: LiveKit.Proto.ServerMessage.MessageCase*
  commentId: Overload:LiveKit.Proto.ServerMessage.MessageCase
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_MessageCase
  name: MessageCase
  nameWithType: ServerMessage.MessageCase
  fullName: LiveKit.Proto.ServerMessage.MessageCase
- uid: LiveKit.Proto.ServerMessage.MessageOneofCase
  commentId: T:LiveKit.Proto.ServerMessage.MessageOneofCase
  parent: LiveKit.Proto
  href: LiveKit.Proto.ServerMessage.html
  name: ServerMessage.MessageOneofCase
  nameWithType: ServerMessage.MessageOneofCase
  fullName: LiveKit.Proto.ServerMessage.MessageOneofCase
  spec.csharp:
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: .
  - uid: LiveKit.Proto.ServerMessage.MessageOneofCase
    name: MessageOneofCase
    href: LiveKit.Proto.ServerMessage.MessageOneofCase.html
  spec.vb:
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: .
  - uid: LiveKit.Proto.ServerMessage.MessageOneofCase
    name: MessageOneofCase
    href: LiveKit.Proto.ServerMessage.MessageOneofCase.html
- uid: LiveKit.Proto.ServerMessage.ClearMessage*
  commentId: Overload:LiveKit.Proto.ServerMessage.ClearMessage
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_ClearMessage
  name: ClearMessage
  nameWithType: ServerMessage.ClearMessage
  fullName: LiveKit.Proto.ServerMessage.ClearMessage
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.ServerMessage.Equals*
  commentId: Overload:LiveKit.Proto.ServerMessage.Equals
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_Equals_System_Object_
  name: Equals
  nameWithType: ServerMessage.Equals
  fullName: LiveKit.Proto.ServerMessage.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{LiveKit.Proto.ServerMessage}.Equals(LiveKit.Proto.ServerMessage)
  commentId: M:System.IEquatable{LiveKit.Proto.ServerMessage}.Equals(LiveKit.Proto.ServerMessage)
  parent: System.IEquatable{LiveKit.Proto.ServerMessage}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ServerMessage)
  nameWithType: IEquatable<ServerMessage>.Equals(ServerMessage)
  fullName: System.IEquatable<LiveKit.Proto.ServerMessage>.Equals(LiveKit.Proto.ServerMessage)
  nameWithType.vb: IEquatable(Of ServerMessage).Equals(ServerMessage)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.ServerMessage).Equals(LiveKit.Proto.ServerMessage)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.ServerMessage}.Equals(LiveKit.Proto.ServerMessage)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.ServerMessage}.Equals(LiveKit.Proto.ServerMessage)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.ServerMessage.GetHashCode*
  commentId: Overload:LiveKit.Proto.ServerMessage.GetHashCode
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_GetHashCode
  name: GetHashCode
  nameWithType: ServerMessage.GetHashCode
  fullName: LiveKit.Proto.ServerMessage.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.ServerMessage.ToString*
  commentId: Overload:LiveKit.Proto.ServerMessage.ToString
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_ToString
  name: ToString
  nameWithType: ServerMessage.ToString
  fullName: LiveKit.Proto.ServerMessage.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.ServerMessage.WriteTo*
  commentId: Overload:LiveKit.Proto.ServerMessage.WriteTo
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: ServerMessage.WriteTo
  fullName: LiveKit.Proto.ServerMessage.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.ServerMessage.CalculateSize*
  commentId: Overload:LiveKit.Proto.ServerMessage.CalculateSize
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_CalculateSize
  name: CalculateSize
  nameWithType: ServerMessage.CalculateSize
  fullName: LiveKit.Proto.ServerMessage.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.ServerMessage.MergeFrom*
  commentId: Overload:LiveKit.Proto.ServerMessage.MergeFrom
  href: LiveKit.Proto.ServerMessage.html#LiveKit_Proto_ServerMessage_MergeFrom_LiveKit_Proto_ServerMessage_
  name: MergeFrom
  nameWithType: ServerMessage.MergeFrom
  fullName: LiveKit.Proto.ServerMessage.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}.MergeFrom(LiveKit.Proto.ServerMessage)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}.MergeFrom(LiveKit.Proto.ServerMessage)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.ServerMessage.html
  name: MergeFrom(ServerMessage)
  nameWithType: IMessage<ServerMessage>.MergeFrom(ServerMessage)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.ServerMessage>.MergeFrom(LiveKit.Proto.ServerMessage)
  nameWithType.vb: IMessage(Of ServerMessage).MergeFrom(ServerMessage)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.ServerMessage).MergeFrom(LiveKit.Proto.ServerMessage)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}.MergeFrom(LiveKit.Proto.ServerMessage)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.ServerMessage}.MergeFrom(LiveKit.Proto.ServerMessage)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.ServerMessage
    name: ServerMessage
    href: LiveKit.Proto.ServerMessage.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
