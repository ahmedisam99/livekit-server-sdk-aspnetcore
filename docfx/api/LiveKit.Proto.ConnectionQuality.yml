### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.ConnectionQuality
  commentId: T:LiveKit.Proto.ConnectionQuality
  id: ConnectionQuality
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.ConnectionQuality.Excellent
  - LiveKit.Proto.ConnectionQuality.Good
  - LiveKit.Proto.ConnectionQuality.Lost
  - LiveKit.Proto.ConnectionQuality.Poor
  langs:
  - csharp
  - vb
  name: ConnectionQuality
  nameWithType: ConnectionQuality
  fullName: LiveKit.Proto.ConnectionQuality
  type: Enum
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ConnectionQuality
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 402
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public enum ConnectionQuality
    content.vb: Public Enum ConnectionQuality
- uid: LiveKit.Proto.ConnectionQuality.Poor
  commentId: F:LiveKit.Proto.ConnectionQuality.Poor
  id: Poor
  parent: LiveKit.Proto.ConnectionQuality
  langs:
  - csharp
  - vb
  name: Poor
  nameWithType: ConnectionQuality.Poor
  fullName: LiveKit.Proto.ConnectionQuality.Poor
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Poor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 403
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("POOR")]

      Poor = 0
    return:
      type: LiveKit.Proto.ConnectionQuality
    content.vb: >-
      <OriginalName("POOR")>

      Poor = 0
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: POOR
- uid: LiveKit.Proto.ConnectionQuality.Good
  commentId: F:LiveKit.Proto.ConnectionQuality.Good
  id: Good
  parent: LiveKit.Proto.ConnectionQuality
  langs:
  - csharp
  - vb
  name: Good
  nameWithType: ConnectionQuality.Good
  fullName: LiveKit.Proto.ConnectionQuality.Good
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Good
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 404
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("GOOD")]

      Good = 1
    return:
      type: LiveKit.Proto.ConnectionQuality
    content.vb: >-
      <OriginalName("GOOD")>

      Good = 1
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GOOD
- uid: LiveKit.Proto.ConnectionQuality.Excellent
  commentId: F:LiveKit.Proto.ConnectionQuality.Excellent
  id: Excellent
  parent: LiveKit.Proto.ConnectionQuality
  langs:
  - csharp
  - vb
  name: Excellent
  nameWithType: ConnectionQuality.Excellent
  fullName: LiveKit.Proto.ConnectionQuality.Excellent
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Excellent
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 405
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("EXCELLENT")]

      Excellent = 2
    return:
      type: LiveKit.Proto.ConnectionQuality
    content.vb: >-
      <OriginalName("EXCELLENT")>

      Excellent = 2
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EXCELLENT
- uid: LiveKit.Proto.ConnectionQuality.Lost
  commentId: F:LiveKit.Proto.ConnectionQuality.Lost
  id: Lost
  parent: LiveKit.Proto.ConnectionQuality
  langs:
  - csharp
  - vb
  name: Lost
  nameWithType: ConnectionQuality.Lost
  fullName: LiveKit.Proto.ConnectionQuality.Lost
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Lost
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 406
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("LOST")]

      Lost = 3
    return:
      type: LiveKit.Proto.ConnectionQuality
    content.vb: >-
      <OriginalName("LOST")>

      Lost = 3
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: LOST
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: LiveKit.Proto.ConnectionQuality
  commentId: T:LiveKit.Proto.ConnectionQuality
  parent: LiveKit.Proto
  href: LiveKit.Proto.ConnectionQuality.html
  name: ConnectionQuality
  nameWithType: ConnectionQuality
  fullName: LiveKit.Proto.ConnectionQuality
