### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.ClientInfo.Types.SDK
  commentId: T:LiveKit.Proto.ClientInfo.Types.SDK
  id: ClientInfo.Types.SDK
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.ClientInfo.Types.SDK.Android
  - LiveKit.Proto.ClientInfo.Types.SDK.Cpp
  - LiveKit.Proto.ClientInfo.Types.SDK.Esp32
  - LiveKit.Proto.ClientInfo.Types.SDK.Flutter
  - LiveKit.Proto.ClientInfo.Types.SDK.Go
  - LiveKit.Proto.ClientInfo.Types.SDK.Js
  - LiveKit.Proto.ClientInfo.Types.SDK.Node
  - LiveKit.Proto.ClientInfo.Types.SDK.Python
  - LiveKit.Proto.ClientInfo.Types.SDK.ReactNative
  - LiveKit.Proto.ClientInfo.Types.SDK.Rust
  - LiveKit.Proto.ClientInfo.Types.SDK.Swift
  - LiveKit.Proto.ClientInfo.Types.SDK.Unity
  - LiveKit.Proto.ClientInfo.Types.SDK.UnityWeb
  - LiveKit.Proto.ClientInfo.Types.SDK.Unknown
  - LiveKit.Proto.ClientInfo.Types.SDK.Unreal
  langs:
  - csharp
  - vb
  name: ClientInfo.Types.SDK
  nameWithType: ClientInfo.Types.SDK
  fullName: LiveKit.Proto.ClientInfo.Types.SDK
  type: Enum
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SDK
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12401
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public enum ClientInfo.Types.SDK
    content.vb: Public Enum ClientInfo.Types.SDK
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Unknown
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Unknown
  id: Unknown
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: ClientInfo.Types.SDK.Unknown
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Unknown
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Unknown
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12402
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("UNKNOWN")]

      Unknown = 0
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("UNKNOWN")>

      Unknown = 0
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNKNOWN
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Js
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Js
  id: Js
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Js
  nameWithType: ClientInfo.Types.SDK.Js
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Js
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Js
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12403
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("JS")]

      Js = 1
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("JS")>

      Js = 1
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: JS
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Swift
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Swift
  id: Swift
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Swift
  nameWithType: ClientInfo.Types.SDK.Swift
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Swift
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Swift
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12404
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("SWIFT")]

      Swift = 2
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("SWIFT")>

      Swift = 2
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SWIFT
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Android
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Android
  id: Android
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Android
  nameWithType: ClientInfo.Types.SDK.Android
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Android
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Android
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12405
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("ANDROID")]

      Android = 3
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("ANDROID")>

      Android = 3
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ANDROID
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Flutter
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Flutter
  id: Flutter
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Flutter
  nameWithType: ClientInfo.Types.SDK.Flutter
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Flutter
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Flutter
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12406
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("FLUTTER")]

      Flutter = 4
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("FLUTTER")>

      Flutter = 4
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: FLUTTER
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Go
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Go
  id: Go
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Go
  nameWithType: ClientInfo.Types.SDK.Go
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Go
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Go
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12407
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("GO")]

      Go = 5
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("GO")>

      Go = 5
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GO
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Unity
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Unity
  id: Unity
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Unity
  nameWithType: ClientInfo.Types.SDK.Unity
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Unity
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Unity
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12408
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("UNITY")]

      Unity = 6
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("UNITY")>

      Unity = 6
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY
- uid: LiveKit.Proto.ClientInfo.Types.SDK.ReactNative
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.ReactNative
  id: ReactNative
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: ReactNative
  nameWithType: ClientInfo.Types.SDK.ReactNative
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.ReactNative
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ReactNative
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12409
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("REACT_NATIVE")]

      ReactNative = 7
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("REACT_NATIVE")>

      ReactNative = 7
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: REACT_NATIVE
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Rust
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Rust
  id: Rust
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Rust
  nameWithType: ClientInfo.Types.SDK.Rust
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Rust
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Rust
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12410
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("RUST")]

      Rust = 8
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("RUST")>

      Rust = 8
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: RUST
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Python
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Python
  id: Python
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Python
  nameWithType: ClientInfo.Types.SDK.Python
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Python
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Python
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12411
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("PYTHON")]

      Python = 9
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("PYTHON")>

      Python = 9
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: PYTHON
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Cpp
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Cpp
  id: Cpp
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Cpp
  nameWithType: ClientInfo.Types.SDK.Cpp
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Cpp
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Cpp
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12412
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("CPP")]

      Cpp = 10
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("CPP")>

      Cpp = 10
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CPP
- uid: LiveKit.Proto.ClientInfo.Types.SDK.UnityWeb
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.UnityWeb
  id: UnityWeb
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: UnityWeb
  nameWithType: ClientInfo.Types.SDK.UnityWeb
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.UnityWeb
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: UnityWeb
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12413
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("UNITY_WEB")]

      UnityWeb = 11
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("UNITY_WEB")>

      UnityWeb = 11
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_WEB
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Node
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Node
  id: Node
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: ClientInfo.Types.SDK.Node
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Node
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Node
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12414
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("NODE")]

      Node = 12
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("NODE")>

      Node = 12
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NODE
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Unreal
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Unreal
  id: Unreal
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Unreal
  nameWithType: ClientInfo.Types.SDK.Unreal
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Unreal
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Unreal
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12415
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("UNREAL")]

      Unreal = 13
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("UNREAL")>

      Unreal = 13
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNREAL
- uid: LiveKit.Proto.ClientInfo.Types.SDK.Esp32
  commentId: F:LiveKit.Proto.ClientInfo.Types.SDK.Esp32
  id: Esp32
  parent: LiveKit.Proto.ClientInfo.Types.SDK
  langs:
  - csharp
  - vb
  name: Esp32
  nameWithType: ClientInfo.Types.SDK.Esp32
  fullName: LiveKit.Proto.ClientInfo.Types.SDK.Esp32
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Esp32
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 12416
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [OriginalName("ESP32")]

      Esp32 = 14
    return:
      type: LiveKit.Proto.ClientInfo.Types.SDK
    content.vb: >-
      <OriginalName("ESP32")>

      Esp32 = 14
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ESP32
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: LiveKit.Proto.ClientInfo.Types.SDK
  commentId: T:LiveKit.Proto.ClientInfo.Types.SDK
  parent: LiveKit.Proto
  href: LiveKit.Proto.ClientInfo.html
  name: ClientInfo.Types.SDK
  nameWithType: ClientInfo.Types.SDK
  fullName: LiveKit.Proto.ClientInfo.Types.SDK
  spec.csharp:
  - uid: LiveKit.Proto.ClientInfo
    name: ClientInfo
    href: LiveKit.Proto.ClientInfo.html
  - name: .
  - uid: LiveKit.Proto.ClientInfo.Types
    name: Types
    href: LiveKit.Proto.ClientInfo.Types.html
  - name: .
  - uid: LiveKit.Proto.ClientInfo.Types.SDK
    name: SDK
    href: LiveKit.Proto.ClientInfo.Types.SDK.html
  spec.vb:
  - uid: LiveKit.Proto.ClientInfo
    name: ClientInfo
    href: LiveKit.Proto.ClientInfo.html
  - name: .
  - uid: LiveKit.Proto.ClientInfo.Types
    name: Types
    href: LiveKit.Proto.ClientInfo.Types.html
  - name: .
  - uid: LiveKit.Proto.ClientInfo.Types.SDK
    name: SDK
    href: LiveKit.Proto.ClientInfo.Types.SDK.html
