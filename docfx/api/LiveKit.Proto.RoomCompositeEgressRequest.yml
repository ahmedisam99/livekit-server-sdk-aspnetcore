### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.RoomCompositeEgressRequest
  commentId: T:LiveKit.Proto.RoomCompositeEgressRequest
  id: RoomCompositeEgressRequest
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.RoomCompositeEgressRequest.#ctor
  - LiveKit.Proto.RoomCompositeEgressRequest.#ctor(LiveKit.Proto.RoomCompositeEgressRequest)
  - LiveKit.Proto.RoomCompositeEgressRequest.Advanced
  - LiveKit.Proto.RoomCompositeEgressRequest.AdvancedFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing
  - LiveKit.Proto.RoomCompositeEgressRequest.AudioMixingFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly
  - LiveKit.Proto.RoomCompositeEgressRequest.AudioOnlyFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize
  - LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions
  - LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput
  - LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset
  - LiveKit.Proto.RoomCompositeEgressRequest.Clone
  - LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl
  - LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrlFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.Descriptor
  - LiveKit.Proto.RoomCompositeEgressRequest.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  - LiveKit.Proto.RoomCompositeEgressRequest.Equals(System.Object)
  - LiveKit.Proto.RoomCompositeEgressRequest.File
  - LiveKit.Proto.RoomCompositeEgressRequest.FileFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs
  - LiveKit.Proto.RoomCompositeEgressRequest.FileOutputsFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode
  - LiveKit.Proto.RoomCompositeEgressRequest.HasPreset
  - LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs
  - LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputsFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.Layout
  - LiveKit.Proto.RoomCompositeEgressRequest.LayoutFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  - LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase
  - LiveKit.Proto.RoomCompositeEgressRequest.OutputCase
  - LiveKit.Proto.RoomCompositeEgressRequest.Parser
  - LiveKit.Proto.RoomCompositeEgressRequest.Preset
  - LiveKit.Proto.RoomCompositeEgressRequest.PresetFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.RoomName
  - LiveKit.Proto.RoomCompositeEgressRequest.RoomNameFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs
  - LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputsFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.Segments
  - LiveKit.Proto.RoomCompositeEgressRequest.SegmentsFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.Stream
  - LiveKit.Proto.RoomCompositeEgressRequest.StreamFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs
  - LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputsFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.ToString
  - LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly
  - LiveKit.Proto.RoomCompositeEgressRequest.VideoOnlyFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.Webhooks
  - LiveKit.Proto.RoomCompositeEgressRequest.WebhooksFieldNumber
  - LiveKit.Proto.RoomCompositeEgressRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: RoomCompositeEgressRequest
  nameWithType: RoomCompositeEgressRequest
  fullName: LiveKit.Proto.RoomCompositeEgressRequest
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RoomCompositeEgressRequest
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 374
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: composite using a web browser
  example: []
  syntax:
    content: 'public sealed class RoomCompositeEgressRequest : IMessage<RoomCompositeEgressRequest>, IEquatable<RoomCompositeEgressRequest>, IDeepCloneable<RoomCompositeEgressRequest>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class RoomCompositeEgressRequest Implements IMessage(Of RoomCompositeEgressRequest), IEquatable(Of RoomCompositeEgressRequest), IDeepCloneable(Of RoomCompositeEgressRequest), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}
  - System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Parser
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Parser
  id: Parser
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: RoomCompositeEgressRequest.Parser
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 382
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<RoomCompositeEgressRequest> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.RoomCompositeEgressRequest}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of RoomCompositeEgressRequest)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Parser*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Descriptor
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: RoomCompositeEgressRequest.Descriptor
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 386
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Descriptor*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.#ctor
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: RoomCompositeEgressRequest()
  nameWithType: RoomCompositeEgressRequest.RoomCompositeEgressRequest()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.RoomCompositeEgressRequest()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 398
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RoomCompositeEgressRequest()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.RoomCompositeEgressRequest.#ctor*
  nameWithType.vb: RoomCompositeEgressRequest.New()
  fullName.vb: LiveKit.Proto.RoomCompositeEgressRequest.New()
  name.vb: New()
- uid: LiveKit.Proto.RoomCompositeEgressRequest.#ctor(LiveKit.Proto.RoomCompositeEgressRequest)
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.#ctor(LiveKit.Proto.RoomCompositeEgressRequest)
  id: '#ctor(LiveKit.Proto.RoomCompositeEgressRequest)'
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: RoomCompositeEgressRequest(RoomCompositeEgressRequest)
  nameWithType: RoomCompositeEgressRequest.RoomCompositeEgressRequest(RoomCompositeEgressRequest)
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.RoomCompositeEgressRequest(LiveKit.Proto.RoomCompositeEgressRequest)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 406
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RoomCompositeEgressRequest(RoomCompositeEgressRequest other)
    parameters:
    - id: other
      type: LiveKit.Proto.RoomCompositeEgressRequest
    content.vb: Public Sub New(other As RoomCompositeEgressRequest)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.#ctor*
  nameWithType.vb: RoomCompositeEgressRequest.New(RoomCompositeEgressRequest)
  fullName.vb: LiveKit.Proto.RoomCompositeEgressRequest.New(LiveKit.Proto.RoomCompositeEgressRequest)
  name.vb: New(RoomCompositeEgressRequest)
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Clone
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.Clone
  id: Clone
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: RoomCompositeEgressRequest.Clone()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 444
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public RoomCompositeEgressRequest Clone()
    return:
      type: LiveKit.Proto.RoomCompositeEgressRequest
      description: A deep clone of this object.
    content.vb: Public Function Clone() As RoomCompositeEgressRequest
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}.Clone
- uid: LiveKit.Proto.RoomCompositeEgressRequest.RoomNameFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.RoomNameFieldNumber
  id: RoomNameFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: RoomNameFieldNumber
  nameWithType: RoomCompositeEgressRequest.RoomNameFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.RoomNameFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RoomNameFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 451
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "room_name" field.
  example: []
  syntax:
    content: public const int RoomNameFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RoomNameFieldNumber As Integer = 1
- uid: LiveKit.Proto.RoomCompositeEgressRequest.RoomName
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.RoomName
  id: RoomName
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: RoomName
  nameWithType: RoomCompositeEgressRequest.RoomName
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.RoomName
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RoomName
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 456
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: required
  example: []
  syntax:
    content: public string RoomName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RoomName As String
  overload: LiveKit.Proto.RoomCompositeEgressRequest.RoomName*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.LayoutFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.LayoutFieldNumber
  id: LayoutFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: LayoutFieldNumber
  nameWithType: RoomCompositeEgressRequest.LayoutFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.LayoutFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: LayoutFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 466
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "layout" field.
  example: []
  syntax:
    content: public const int LayoutFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const LayoutFieldNumber As Integer = 2
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Layout
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Layout
  id: Layout
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Layout
  nameWithType: RoomCompositeEgressRequest.Layout
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Layout
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Layout
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 471
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: (optional)
  example: []
  syntax:
    content: public string Layout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Layout As String
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Layout*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.AudioOnlyFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.AudioOnlyFieldNumber
  id: AudioOnlyFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: AudioOnlyFieldNumber
  nameWithType: RoomCompositeEgressRequest.AudioOnlyFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.AudioOnlyFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AudioOnlyFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 481
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "audio_only" field.
  example: []
  syntax:
    content: public const int AudioOnlyFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const AudioOnlyFieldNumber As Integer = 3
- uid: LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly
  id: AudioOnly
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: AudioOnly
  nameWithType: RoomCompositeEgressRequest.AudioOnly
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AudioOnly
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 486
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: (default false)
  example: []
  syntax:
    content: public bool AudioOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AudioOnly As Boolean
  overload: LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.AudioMixingFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.AudioMixingFieldNumber
  id: AudioMixingFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: AudioMixingFieldNumber
  nameWithType: RoomCompositeEgressRequest.AudioMixingFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.AudioMixingFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AudioMixingFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 496
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "audio_mixing" field.
  example: []
  syntax:
    content: public const int AudioMixingFieldNumber = 15
    return:
      type: System.Int32
    content.vb: Public Const AudioMixingFieldNumber As Integer = 15
- uid: LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing
  id: AudioMixing
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: AudioMixing
  nameWithType: RoomCompositeEgressRequest.AudioMixing
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AudioMixing
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 501
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: only applies to audio_only egress (default DEFAULT_MIXING)
  example: []
  syntax:
    content: public AudioMixing AudioMixing { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.AudioMixing
    content.vb: Public Property AudioMixing As AudioMixing
  overload: LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.VideoOnlyFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.VideoOnlyFieldNumber
  id: VideoOnlyFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: VideoOnlyFieldNumber
  nameWithType: RoomCompositeEgressRequest.VideoOnlyFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.VideoOnlyFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: VideoOnlyFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 511
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "video_only" field.
  example: []
  syntax:
    content: public const int VideoOnlyFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const VideoOnlyFieldNumber As Integer = 4
- uid: LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly
  id: VideoOnly
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: VideoOnly
  nameWithType: RoomCompositeEgressRequest.VideoOnly
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: VideoOnly
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 516
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: (default false)
  example: []
  syntax:
    content: public bool VideoOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property VideoOnly As Boolean
  overload: LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrlFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrlFieldNumber
  id: CustomBaseUrlFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: CustomBaseUrlFieldNumber
  nameWithType: RoomCompositeEgressRequest.CustomBaseUrlFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrlFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CustomBaseUrlFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 526
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "custom_base_url" field.
  example: []
  syntax:
    content: public const int CustomBaseUrlFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const CustomBaseUrlFieldNumber As Integer = 5
- uid: LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl
  id: CustomBaseUrl
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: CustomBaseUrl
  nameWithType: RoomCompositeEgressRequest.CustomBaseUrl
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CustomBaseUrl
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 531
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: template base url (default https://recorder.livekit.io)
  example: []
  syntax:
    content: public string CustomBaseUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CustomBaseUrl As String
  overload: LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.FileFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.FileFieldNumber
  id: FileFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: FileFieldNumber
  nameWithType: RoomCompositeEgressRequest.FileFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.FileFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: FileFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 541
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "file" field.
  example: []
  syntax:
    content: public const int FileFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const FileFieldNumber As Integer = 6
- uid: LiveKit.Proto.RoomCompositeEgressRequest.File
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.File
  id: File
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: File
  nameWithType: RoomCompositeEgressRequest.File
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.File
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: File
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 542
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [Obsolete]

      public EncodedFileOutput File { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.EncodedFileOutput
    content.vb: >-
      <Obsolete>

      Public Property File As EncodedFileOutput
  overload: LiveKit.Proto.RoomCompositeEgressRequest.File*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.RoomCompositeEgressRequest.StreamFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.StreamFieldNumber
  id: StreamFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: StreamFieldNumber
  nameWithType: RoomCompositeEgressRequest.StreamFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.StreamFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 554
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "stream" field.
  example: []
  syntax:
    content: public const int StreamFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const StreamFieldNumber As Integer = 7
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Stream
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Stream
  id: Stream
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: RoomCompositeEgressRequest.Stream
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Stream
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Stream
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 555
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [Obsolete]

      public StreamOutput Stream { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.StreamOutput
    content.vb: >-
      <Obsolete>

      Public Property Stream As StreamOutput
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Stream*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.RoomCompositeEgressRequest.SegmentsFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.SegmentsFieldNumber
  id: SegmentsFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: SegmentsFieldNumber
  nameWithType: RoomCompositeEgressRequest.SegmentsFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.SegmentsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SegmentsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 567
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "segments" field.
  example: []
  syntax:
    content: public const int SegmentsFieldNumber = 10
    return:
      type: System.Int32
    content.vb: Public Const SegmentsFieldNumber As Integer = 10
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Segments
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Segments
  id: Segments
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Segments
  nameWithType: RoomCompositeEgressRequest.Segments
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Segments
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Segments
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 568
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [Obsolete]

      public SegmentedFileOutput Segments { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.SegmentedFileOutput
    content.vb: >-
      <Obsolete>

      Public Property Segments As SegmentedFileOutput
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Segments*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.RoomCompositeEgressRequest.PresetFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.PresetFieldNumber
  id: PresetFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: PresetFieldNumber
  nameWithType: RoomCompositeEgressRequest.PresetFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.PresetFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PresetFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 580
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "preset" field.
  example: []
  syntax:
    content: public const int PresetFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const PresetFieldNumber As Integer = 8
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Preset
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Preset
  id: Preset
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Preset
  nameWithType: RoomCompositeEgressRequest.Preset
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Preset
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Preset
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 584
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: (default H264_720P_30)
  example: []
  syntax:
    content: public EncodingOptionsPreset Preset { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.EncodingOptionsPreset
    content.vb: Public Property Preset As EncodingOptionsPreset
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Preset*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.HasPreset
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.HasPreset
  id: HasPreset
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: HasPreset
  nameWithType: RoomCompositeEgressRequest.HasPreset
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.HasPreset
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HasPreset
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 594
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Gets whether the "preset" field is set
  example: []
  syntax:
    content: public bool HasPreset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasPreset As Boolean
  overload: LiveKit.Proto.RoomCompositeEgressRequest.HasPreset*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset
  id: ClearPreset
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: ClearPreset()
  nameWithType: RoomCompositeEgressRequest.ClearPreset()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearPreset
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 600
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Clears the value of the oneof if it's currently set to "preset"
  example: []
  syntax:
    content: public void ClearPreset()
    content.vb: Public Sub ClearPreset()
  overload: LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.AdvancedFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.AdvancedFieldNumber
  id: AdvancedFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: AdvancedFieldNumber
  nameWithType: RoomCompositeEgressRequest.AdvancedFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.AdvancedFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AdvancedFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 609
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "advanced" field.
  example: []
  syntax:
    content: public const int AdvancedFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const AdvancedFieldNumber As Integer = 9
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Advanced
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Advanced
  id: Advanced
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Advanced
  nameWithType: RoomCompositeEgressRequest.Advanced
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Advanced
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Advanced
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 613
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: (optional)
  example: []
  syntax:
    content: public EncodingOptions Advanced { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.EncodingOptions
    content.vb: Public Property Advanced As EncodingOptions
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Advanced*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.FileOutputsFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.FileOutputsFieldNumber
  id: FileOutputsFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: FileOutputsFieldNumber
  nameWithType: RoomCompositeEgressRequest.FileOutputsFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.FileOutputsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: FileOutputsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 624
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "file_outputs" field.
  example: []
  syntax:
    content: public const int FileOutputsFieldNumber = 11
    return:
      type: System.Int32
    content.vb: Public Const FileOutputsFieldNumber As Integer = 11
- uid: LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs
  id: FileOutputs
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: FileOutputs
  nameWithType: RoomCompositeEgressRequest.FileOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: FileOutputs
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 628
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RepeatedField<EncodedFileOutput> FileOutputs { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.EncodedFileOutput}
    content.vb: Public ReadOnly Property FileOutputs As RepeatedField(Of EncodedFileOutput)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputsFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputsFieldNumber
  id: StreamOutputsFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: StreamOutputsFieldNumber
  nameWithType: RoomCompositeEgressRequest.StreamOutputsFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamOutputsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 635
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "stream_outputs" field.
  example: []
  syntax:
    content: public const int StreamOutputsFieldNumber = 12
    return:
      type: System.Int32
    content.vb: Public Const StreamOutputsFieldNumber As Integer = 12
- uid: LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs
  id: StreamOutputs
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: StreamOutputs
  nameWithType: RoomCompositeEgressRequest.StreamOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamOutputs
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 639
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RepeatedField<StreamOutput> StreamOutputs { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.StreamOutput}
    content.vb: Public ReadOnly Property StreamOutputs As RepeatedField(Of StreamOutput)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputsFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputsFieldNumber
  id: SegmentOutputsFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: SegmentOutputsFieldNumber
  nameWithType: RoomCompositeEgressRequest.SegmentOutputsFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SegmentOutputsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 646
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "segment_outputs" field.
  example: []
  syntax:
    content: public const int SegmentOutputsFieldNumber = 13
    return:
      type: System.Int32
    content.vb: Public Const SegmentOutputsFieldNumber As Integer = 13
- uid: LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs
  id: SegmentOutputs
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: SegmentOutputs
  nameWithType: RoomCompositeEgressRequest.SegmentOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SegmentOutputs
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 650
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RepeatedField<SegmentedFileOutput> SegmentOutputs { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.SegmentedFileOutput}
    content.vb: Public ReadOnly Property SegmentOutputs As RepeatedField(Of SegmentedFileOutput)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputsFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputsFieldNumber
  id: ImageOutputsFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: ImageOutputsFieldNumber
  nameWithType: RoomCompositeEgressRequest.ImageOutputsFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ImageOutputsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 657
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "image_outputs" field.
  example: []
  syntax:
    content: public const int ImageOutputsFieldNumber = 14
    return:
      type: System.Int32
    content.vb: Public Const ImageOutputsFieldNumber As Integer = 14
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs
  id: ImageOutputs
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: ImageOutputs
  nameWithType: RoomCompositeEgressRequest.ImageOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ImageOutputs
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 661
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RepeatedField<ImageOutput> ImageOutputs { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.ImageOutput}
    content.vb: Public ReadOnly Property ImageOutputs As RepeatedField(Of ImageOutput)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.WebhooksFieldNumber
  commentId: F:LiveKit.Proto.RoomCompositeEgressRequest.WebhooksFieldNumber
  id: WebhooksFieldNumber
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: WebhooksFieldNumber
  nameWithType: RoomCompositeEgressRequest.WebhooksFieldNumber
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.WebhooksFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WebhooksFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 668
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "webhooks" field.
  example: []
  syntax:
    content: public const int WebhooksFieldNumber = 16
    return:
      type: System.Int32
    content.vb: Public Const WebhooksFieldNumber As Integer = 16
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Webhooks
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.Webhooks
  id: Webhooks
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Webhooks
  nameWithType: RoomCompositeEgressRequest.Webhooks
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Webhooks
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Webhooks
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 675
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: extra webhooks to call for this request
  example: []
  syntax:
    content: public RepeatedField<WebhookConfig> Webhooks { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.WebhookConfig}
    content.vb: Public ReadOnly Property Webhooks As RepeatedField(Of WebhookConfig)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Webhooks*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.OutputCase
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.OutputCase
  id: OutputCase
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: OutputCase
  nameWithType: RoomCompositeEgressRequest.OutputCase
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.OutputCase
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: OutputCase
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 690
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RoomCompositeEgressRequest.OutputOneofCase OutputCase { get; }
    parameters: []
    return:
      type: LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase
    content.vb: Public ReadOnly Property OutputCase As RoomCompositeEgressRequest.OutputOneofCase
  overload: LiveKit.Proto.RoomCompositeEgressRequest.OutputCase*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput
  id: ClearOutput
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: ClearOutput()
  nameWithType: RoomCompositeEgressRequest.ClearOutput()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearOutput
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 696
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public void ClearOutput()
    content.vb: Public Sub ClearOutput()
  overload: LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase
  commentId: P:LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase
  id: OptionsCase
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: OptionsCase
  nameWithType: RoomCompositeEgressRequest.OptionsCase
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: OptionsCase
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 711
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RoomCompositeEgressRequest.OptionsOneofCase OptionsCase { get; }
    parameters: []
    return:
      type: LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase
    content.vb: Public ReadOnly Property OptionsCase As RoomCompositeEgressRequest.OptionsOneofCase
  overload: LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions
  id: ClearOptions
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: ClearOptions()
  nameWithType: RoomCompositeEgressRequest.ClearOptions()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearOptions
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 717
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public void ClearOptions()
    content.vb: Public Sub ClearOptions()
  overload: LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Equals(System.Object)
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: RoomCompositeEgressRequest.Equals(object)
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 724
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Equals*
  nameWithType.vb: RoomCompositeEgressRequest.Equals(Object)
  fullName.vb: LiveKit.Proto.RoomCompositeEgressRequest.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  id: Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: Equals(RoomCompositeEgressRequest)
  nameWithType: RoomCompositeEgressRequest.Equals(RoomCompositeEgressRequest)
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 730
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(RoomCompositeEgressRequest other)
    parameters:
    - id: other
      type: LiveKit.Proto.RoomCompositeEgressRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As RoomCompositeEgressRequest) As Boolean
  overload: LiveKit.Proto.RoomCompositeEgressRequest.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
- uid: LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RoomCompositeEgressRequest.GetHashCode()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 760
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ToString
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.ToString
  id: ToString
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RoomCompositeEgressRequest.ToString()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 788
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.RoomCompositeEgressRequest.ToString*
- uid: LiveKit.Proto.RoomCompositeEgressRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: RoomCompositeEgressRequest.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 794
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: RoomCompositeEgressRequest.CalculateSize()
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 914
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  id: MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(RoomCompositeEgressRequest)
  nameWithType: RoomCompositeEgressRequest.MergeFrom(RoomCompositeEgressRequest)
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 962
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(RoomCompositeEgressRequest other)
    parameters:
    - id: other
      type: LiveKit.Proto.RoomCompositeEgressRequest
    content.vb: Public Sub MergeFrom(other As RoomCompositeEgressRequest)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
- uid: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.RoomCompositeEgressRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: RoomCompositeEgressRequest.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitEgress.cs
    startLine: 1027
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.RoomCompositeEgressRequest.html
  name: IMessage<RoomCompositeEgressRequest>
  nameWithType: IMessage<RoomCompositeEgressRequest>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.RoomCompositeEgressRequest>
  nameWithType.vb: IMessage(Of RoomCompositeEgressRequest)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.RoomCompositeEgressRequest)
  name.vb: IMessage(Of RoomCompositeEgressRequest)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}
  commentId: T:System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<RoomCompositeEgressRequest>
  nameWithType: IEquatable<RoomCompositeEgressRequest>
  fullName: System.IEquatable<LiveKit.Proto.RoomCompositeEgressRequest>
  nameWithType.vb: IEquatable(Of RoomCompositeEgressRequest)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.RoomCompositeEgressRequest)
  name.vb: IEquatable(Of RoomCompositeEgressRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.RoomCompositeEgressRequest.html
  name: IDeepCloneable<RoomCompositeEgressRequest>
  nameWithType: IDeepCloneable<RoomCompositeEgressRequest>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.RoomCompositeEgressRequest>
  nameWithType.vb: IDeepCloneable(Of RoomCompositeEgressRequest)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.RoomCompositeEgressRequest)
  name.vb: IDeepCloneable(Of RoomCompositeEgressRequest)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Parser*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Parser
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Parser
  name: Parser
  nameWithType: RoomCompositeEgressRequest.Parser
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.RoomCompositeEgressRequest}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.RoomCompositeEgressRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.RoomCompositeEgressRequest.html
  name: MessageParser<RoomCompositeEgressRequest>
  nameWithType: MessageParser<RoomCompositeEgressRequest>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.RoomCompositeEgressRequest>
  nameWithType.vb: MessageParser(Of RoomCompositeEgressRequest)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.RoomCompositeEgressRequest)
  name.vb: MessageParser(Of RoomCompositeEgressRequest)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Descriptor*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Descriptor
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Descriptor
  name: Descriptor
  nameWithType: RoomCompositeEgressRequest.Descriptor
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.RoomCompositeEgressRequest.#ctor*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.#ctor
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest__ctor
  name: RoomCompositeEgressRequest
  nameWithType: RoomCompositeEgressRequest.RoomCompositeEgressRequest
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.RoomCompositeEgressRequest
  nameWithType.vb: RoomCompositeEgressRequest.New
  fullName.vb: LiveKit.Proto.RoomCompositeEgressRequest.New
  name.vb: New
- uid: LiveKit.Proto.RoomCompositeEgressRequest
  commentId: T:LiveKit.Proto.RoomCompositeEgressRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.RoomCompositeEgressRequest.html
  name: RoomCompositeEgressRequest
  nameWithType: RoomCompositeEgressRequest
  fullName: LiveKit.Proto.RoomCompositeEgressRequest
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Clone*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Clone
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Clone
  name: Clone
  nameWithType: RoomCompositeEgressRequest.Clone
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<RoomCompositeEgressRequest>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.RoomCompositeEgressRequest>.Clone()
  nameWithType.vb: IDeepCloneable(Of RoomCompositeEgressRequest).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.RoomCompositeEgressRequest).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RoomCompositeEgressRequest}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.RoomCompositeEgressRequest.RoomName*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.RoomName
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_RoomName
  name: RoomName
  nameWithType: RoomCompositeEgressRequest.RoomName
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.RoomName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Layout*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Layout
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Layout
  name: Layout
  nameWithType: RoomCompositeEgressRequest.Layout
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Layout
- uid: LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_AudioOnly
  name: AudioOnly
  nameWithType: RoomCompositeEgressRequest.AudioOnly
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.AudioOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_AudioMixing
  name: AudioMixing
  nameWithType: RoomCompositeEgressRequest.AudioMixing
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.AudioMixing
- uid: LiveKit.Proto.AudioMixing
  commentId: T:LiveKit.Proto.AudioMixing
  parent: LiveKit.Proto
  href: LiveKit.Proto.AudioMixing.html
  name: AudioMixing
  nameWithType: AudioMixing
  fullName: LiveKit.Proto.AudioMixing
- uid: LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_VideoOnly
  name: VideoOnly
  nameWithType: RoomCompositeEgressRequest.VideoOnly
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.VideoOnly
- uid: LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_CustomBaseUrl
  name: CustomBaseUrl
  nameWithType: RoomCompositeEgressRequest.CustomBaseUrl
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.CustomBaseUrl
- uid: LiveKit.Proto.RoomCompositeEgressRequest.File*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.File
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_File
  name: File
  nameWithType: RoomCompositeEgressRequest.File
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.File
- uid: LiveKit.Proto.EncodedFileOutput
  commentId: T:LiveKit.Proto.EncodedFileOutput
  parent: LiveKit.Proto
  href: LiveKit.Proto.EncodedFileOutput.html
  name: EncodedFileOutput
  nameWithType: EncodedFileOutput
  fullName: LiveKit.Proto.EncodedFileOutput
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Stream*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Stream
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Stream
  name: Stream
  nameWithType: RoomCompositeEgressRequest.Stream
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Stream
- uid: LiveKit.Proto.StreamOutput
  commentId: T:LiveKit.Proto.StreamOutput
  parent: LiveKit.Proto
  href: LiveKit.Proto.StreamOutput.html
  name: StreamOutput
  nameWithType: StreamOutput
  fullName: LiveKit.Proto.StreamOutput
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Segments*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Segments
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Segments
  name: Segments
  nameWithType: RoomCompositeEgressRequest.Segments
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Segments
- uid: LiveKit.Proto.SegmentedFileOutput
  commentId: T:LiveKit.Proto.SegmentedFileOutput
  parent: LiveKit.Proto
  href: LiveKit.Proto.SegmentedFileOutput.html
  name: SegmentedFileOutput
  nameWithType: SegmentedFileOutput
  fullName: LiveKit.Proto.SegmentedFileOutput
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Preset*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Preset
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Preset
  name: Preset
  nameWithType: RoomCompositeEgressRequest.Preset
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Preset
- uid: LiveKit.Proto.EncodingOptionsPreset
  commentId: T:LiveKit.Proto.EncodingOptionsPreset
  parent: LiveKit.Proto
  href: LiveKit.Proto.EncodingOptionsPreset.html
  name: EncodingOptionsPreset
  nameWithType: EncodingOptionsPreset
  fullName: LiveKit.Proto.EncodingOptionsPreset
- uid: LiveKit.Proto.RoomCompositeEgressRequest.HasPreset*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.HasPreset
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_HasPreset
  name: HasPreset
  nameWithType: RoomCompositeEgressRequest.HasPreset
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.HasPreset
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_ClearPreset
  name: ClearPreset
  nameWithType: RoomCompositeEgressRequest.ClearPreset
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ClearPreset
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Advanced*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Advanced
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Advanced
  name: Advanced
  nameWithType: RoomCompositeEgressRequest.Advanced
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Advanced
- uid: LiveKit.Proto.EncodingOptions
  commentId: T:LiveKit.Proto.EncodingOptions
  parent: LiveKit.Proto
  href: LiveKit.Proto.EncodingOptions.html
  name: EncodingOptions
  nameWithType: EncodingOptions
  fullName: LiveKit.Proto.EncodingOptions
- uid: LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_FileOutputs
  name: FileOutputs
  nameWithType: RoomCompositeEgressRequest.FileOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.FileOutputs
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.EncodedFileOutput}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.EncodedFileOutput}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.EncodedFileOutput.html
  name: RepeatedField<EncodedFileOutput>
  nameWithType: RepeatedField<EncodedFileOutput>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.EncodedFileOutput>
  nameWithType.vb: RepeatedField(Of EncodedFileOutput)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.EncodedFileOutput)
  name.vb: RepeatedField(Of EncodedFileOutput)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.EncodedFileOutput
    name: EncodedFileOutput
    href: LiveKit.Proto.EncodedFileOutput.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.EncodedFileOutput
    name: EncodedFileOutput
    href: LiveKit.Proto.EncodedFileOutput.html
  - name: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
- uid: LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_StreamOutputs
  name: StreamOutputs
  nameWithType: RoomCompositeEgressRequest.StreamOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.StreamOutputs
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.StreamOutput}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.StreamOutput}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.StreamOutput.html
  name: RepeatedField<StreamOutput>
  nameWithType: RepeatedField<StreamOutput>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.StreamOutput>
  nameWithType.vb: RepeatedField(Of StreamOutput)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.StreamOutput)
  name.vb: RepeatedField(Of StreamOutput)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.StreamOutput
    name: StreamOutput
    href: LiveKit.Proto.StreamOutput.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.StreamOutput
    name: StreamOutput
    href: LiveKit.Proto.StreamOutput.html
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_SegmentOutputs
  name: SegmentOutputs
  nameWithType: RoomCompositeEgressRequest.SegmentOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.SegmentOutputs
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.SegmentedFileOutput}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.SegmentedFileOutput}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.SegmentedFileOutput.html
  name: RepeatedField<SegmentedFileOutput>
  nameWithType: RepeatedField<SegmentedFileOutput>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.SegmentedFileOutput>
  nameWithType.vb: RepeatedField(Of SegmentedFileOutput)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.SegmentedFileOutput)
  name.vb: RepeatedField(Of SegmentedFileOutput)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.SegmentedFileOutput
    name: SegmentedFileOutput
    href: LiveKit.Proto.SegmentedFileOutput.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.SegmentedFileOutput
    name: SegmentedFileOutput
    href: LiveKit.Proto.SegmentedFileOutput.html
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_ImageOutputs
  name: ImageOutputs
  nameWithType: RoomCompositeEgressRequest.ImageOutputs
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ImageOutputs
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.ImageOutput}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.ImageOutput}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.ImageOutput.html
  name: RepeatedField<ImageOutput>
  nameWithType: RepeatedField<ImageOutput>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.ImageOutput>
  nameWithType.vb: RepeatedField(Of ImageOutput)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.ImageOutput)
  name.vb: RepeatedField(Of ImageOutput)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.ImageOutput
    name: ImageOutput
    href: LiveKit.Proto.ImageOutput.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ImageOutput
    name: ImageOutput
    href: LiveKit.Proto.ImageOutput.html
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Webhooks*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Webhooks
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Webhooks
  name: Webhooks
  nameWithType: RoomCompositeEgressRequest.Webhooks
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Webhooks
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.WebhookConfig}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.WebhookConfig}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.WebhookConfig.html
  name: RepeatedField<WebhookConfig>
  nameWithType: RepeatedField<WebhookConfig>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.WebhookConfig>
  nameWithType.vb: RepeatedField(Of WebhookConfig)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.WebhookConfig)
  name.vb: RepeatedField(Of WebhookConfig)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.WebhookConfig
    name: WebhookConfig
    href: LiveKit.Proto.WebhookConfig.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.WebhookConfig
    name: WebhookConfig
    href: LiveKit.Proto.WebhookConfig.html
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.OutputCase*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.OutputCase
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_OutputCase
  name: OutputCase
  nameWithType: RoomCompositeEgressRequest.OutputCase
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.OutputCase
- uid: LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase
  commentId: T:LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase
  parent: LiveKit.Proto
  href: LiveKit.Proto.RoomCompositeEgressRequest.html
  name: RoomCompositeEgressRequest.OutputOneofCase
  nameWithType: RoomCompositeEgressRequest.OutputOneofCase
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase
  spec.csharp:
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: .
  - uid: LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase
    name: OutputOneofCase
    href: LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase.html
  spec.vb:
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: .
  - uid: LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase
    name: OutputOneofCase
    href: LiveKit.Proto.RoomCompositeEgressRequest.OutputOneofCase.html
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_ClearOutput
  name: ClearOutput
  nameWithType: RoomCompositeEgressRequest.ClearOutput
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ClearOutput
- uid: LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_OptionsCase
  name: OptionsCase
  nameWithType: RoomCompositeEgressRequest.OptionsCase
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.OptionsCase
- uid: LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase
  commentId: T:LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase
  parent: LiveKit.Proto
  href: LiveKit.Proto.RoomCompositeEgressRequest.html
  name: RoomCompositeEgressRequest.OptionsOneofCase
  nameWithType: RoomCompositeEgressRequest.OptionsOneofCase
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase
  spec.csharp:
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: .
  - uid: LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase
    name: OptionsOneofCase
    href: LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase.html
  spec.vb:
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: .
  - uid: LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase
    name: OptionsOneofCase
    href: LiveKit.Proto.RoomCompositeEgressRequest.OptionsOneofCase.html
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_ClearOptions
  name: ClearOptions
  nameWithType: RoomCompositeEgressRequest.ClearOptions
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ClearOptions
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.Equals*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.Equals
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_Equals_System_Object_
  name: Equals
  nameWithType: RoomCompositeEgressRequest.Equals
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.Equals
- uid: System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  commentId: M:System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  parent: System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(RoomCompositeEgressRequest)
  nameWithType: IEquatable<RoomCompositeEgressRequest>.Equals(RoomCompositeEgressRequest)
  fullName: System.IEquatable<LiveKit.Proto.RoomCompositeEgressRequest>.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  nameWithType.vb: IEquatable(Of RoomCompositeEgressRequest).Equals(RoomCompositeEgressRequest)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.RoomCompositeEgressRequest).Equals(LiveKit.Proto.RoomCompositeEgressRequest)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.RoomCompositeEgressRequest}.Equals(LiveKit.Proto.RoomCompositeEgressRequest)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_GetHashCode
  name: GetHashCode
  nameWithType: RoomCompositeEgressRequest.GetHashCode
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.ToString*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.ToString
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_ToString
  name: ToString
  nameWithType: RoomCompositeEgressRequest.ToString
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.ToString
- uid: LiveKit.Proto.RoomCompositeEgressRequest.WriteTo*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.WriteTo
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: RoomCompositeEgressRequest.WriteTo
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_CalculateSize
  name: CalculateSize
  nameWithType: RoomCompositeEgressRequest.CalculateSize
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom*
  commentId: Overload:LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom
  href: LiveKit.Proto.RoomCompositeEgressRequest.html#LiveKit_Proto_RoomCompositeEgressRequest_MergeFrom_LiveKit_Proto_RoomCompositeEgressRequest_
  name: MergeFrom
  nameWithType: RoomCompositeEgressRequest.MergeFrom
  fullName: LiveKit.Proto.RoomCompositeEgressRequest.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.RoomCompositeEgressRequest.html
  name: MergeFrom(RoomCompositeEgressRequest)
  nameWithType: IMessage<RoomCompositeEgressRequest>.MergeFrom(RoomCompositeEgressRequest)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.RoomCompositeEgressRequest>.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  nameWithType.vb: IMessage(Of RoomCompositeEgressRequest).MergeFrom(RoomCompositeEgressRequest)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.RoomCompositeEgressRequest).MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.RoomCompositeEgressRequest}.MergeFrom(LiveKit.Proto.RoomCompositeEgressRequest)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.RoomCompositeEgressRequest
    name: RoomCompositeEgressRequest
    href: LiveKit.Proto.RoomCompositeEgressRequest.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
