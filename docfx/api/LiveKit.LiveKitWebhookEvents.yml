### YamlMime:ManagedReference
items:
- uid: LiveKit.LiveKitWebhookEvents
  commentId: T:LiveKit.LiveKitWebhookEvents
  id: LiveKitWebhookEvents
  parent: LiveKit
  children:
  - LiveKit.LiveKitWebhookEvents.EGRESS_ENDED
  - LiveKit.LiveKitWebhookEvents.EGRESS_STARTED
  - LiveKit.LiveKitWebhookEvents.EGRESS_UPDATED
  - LiveKit.LiveKitWebhookEvents.INGRESS_ENDED
  - LiveKit.LiveKitWebhookEvents.INGRESS_STARTED
  - LiveKit.LiveKitWebhookEvents.PARTICIPANT_CONNECTION_ABORTED
  - LiveKit.LiveKitWebhookEvents.PARTICIPANT_JOINED
  - LiveKit.LiveKitWebhookEvents.PARTICIPANT_LEFT
  - LiveKit.LiveKitWebhookEvents.ROOM_FINISHED
  - LiveKit.LiveKitWebhookEvents.ROOM_STARTED
  - LiveKit.LiveKitWebhookEvents.TRACK_PUBLISHED
  - LiveKit.LiveKitWebhookEvents.TRACK_UNPUBLISHED
  langs:
  - csharp
  - vb
  name: LiveKitWebhookEvents
  nameWithType: LiveKitWebhookEvents
  fullName: LiveKit.LiveKitWebhookEvents
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: LiveKitWebhookEvents
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 12
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: >-
    Constants for LiveKit webhook event types.

    <p>

    These constants represent the different event types that LiveKit can send via webhooks.

    Use these values to check the <code>Event</code> property of a <code>WebhookEvent</code>.

    </p>

    <p>

    See <a href="https://docs.livekit.io/home/server/webhooks/">LiveKit Webhooks Documentation</a> for more information.

    </p>
  example: []
  syntax:
    content: public static class LiveKitWebhookEvents
    content.vb: Public Module LiveKitWebhookEvents
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: LiveKit.LiveKitWebhookEvents.ROOM_STARTED
  commentId: F:LiveKit.LiveKitWebhookEvents.ROOM_STARTED
  id: ROOM_STARTED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: ROOM_STARTED
  nameWithType: LiveKitWebhookEvents.ROOM_STARTED
  fullName: LiveKit.LiveKitWebhookEvents.ROOM_STARTED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ROOM_STARTED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 17
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when a room is created and becomes active.
  example: []
  syntax:
    content: public const string ROOM_STARTED = "room_started"
    return:
      type: System.String
    content.vb: Public Const ROOM_STARTED As String = "room_started"
- uid: LiveKit.LiveKitWebhookEvents.ROOM_FINISHED
  commentId: F:LiveKit.LiveKitWebhookEvents.ROOM_FINISHED
  id: ROOM_FINISHED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: ROOM_FINISHED
  nameWithType: LiveKitWebhookEvents.ROOM_FINISHED
  fullName: LiveKit.LiveKitWebhookEvents.ROOM_FINISHED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ROOM_FINISHED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 22
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when a room is closed and all participants have left.
  example: []
  syntax:
    content: public const string ROOM_FINISHED = "room_finished"
    return:
      type: System.String
    content.vb: Public Const ROOM_FINISHED As String = "room_finished"
- uid: LiveKit.LiveKitWebhookEvents.PARTICIPANT_JOINED
  commentId: F:LiveKit.LiveKitWebhookEvents.PARTICIPANT_JOINED
  id: PARTICIPANT_JOINED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: PARTICIPANT_JOINED
  nameWithType: LiveKitWebhookEvents.PARTICIPANT_JOINED
  fullName: LiveKit.LiveKitWebhookEvents.PARTICIPANT_JOINED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PARTICIPANT_JOINED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 27
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when a participant joins a room.
  example: []
  syntax:
    content: public const string PARTICIPANT_JOINED = "participant_joined"
    return:
      type: System.String
    content.vb: Public Const PARTICIPANT_JOINED As String = "participant_joined"
- uid: LiveKit.LiveKitWebhookEvents.PARTICIPANT_LEFT
  commentId: F:LiveKit.LiveKitWebhookEvents.PARTICIPANT_LEFT
  id: PARTICIPANT_LEFT
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: PARTICIPANT_LEFT
  nameWithType: LiveKitWebhookEvents.PARTICIPANT_LEFT
  fullName: LiveKit.LiveKitWebhookEvents.PARTICIPANT_LEFT
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PARTICIPANT_LEFT
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 32
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when a participant leaves a room.
  example: []
  syntax:
    content: public const string PARTICIPANT_LEFT = "participant_left"
    return:
      type: System.String
    content.vb: Public Const PARTICIPANT_LEFT As String = "participant_left"
- uid: LiveKit.LiveKitWebhookEvents.PARTICIPANT_CONNECTION_ABORTED
  commentId: F:LiveKit.LiveKitWebhookEvents.PARTICIPANT_CONNECTION_ABORTED
  id: PARTICIPANT_CONNECTION_ABORTED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: PARTICIPANT_CONNECTION_ABORTED
  nameWithType: LiveKitWebhookEvents.PARTICIPANT_CONNECTION_ABORTED
  fullName: LiveKit.LiveKitWebhookEvents.PARTICIPANT_CONNECTION_ABORTED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PARTICIPANT_CONNECTION_ABORTED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 37
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when a participant's connection is aborted unexpectedly.
  example: []
  syntax:
    content: public const string PARTICIPANT_CONNECTION_ABORTED = "participant_connection_aborted"
    return:
      type: System.String
    content.vb: Public Const PARTICIPANT_CONNECTION_ABORTED As String = "participant_connection_aborted"
- uid: LiveKit.LiveKitWebhookEvents.TRACK_PUBLISHED
  commentId: F:LiveKit.LiveKitWebhookEvents.TRACK_PUBLISHED
  id: TRACK_PUBLISHED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: TRACK_PUBLISHED
  nameWithType: LiveKitWebhookEvents.TRACK_PUBLISHED
  fullName: LiveKit.LiveKitWebhookEvents.TRACK_PUBLISHED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: TRACK_PUBLISHED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 42
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when a participant publishes a new track to the room.
  example: []
  syntax:
    content: public const string TRACK_PUBLISHED = "track_published"
    return:
      type: System.String
    content.vb: Public Const TRACK_PUBLISHED As String = "track_published"
- uid: LiveKit.LiveKitWebhookEvents.TRACK_UNPUBLISHED
  commentId: F:LiveKit.LiveKitWebhookEvents.TRACK_UNPUBLISHED
  id: TRACK_UNPUBLISHED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: TRACK_UNPUBLISHED
  nameWithType: LiveKitWebhookEvents.TRACK_UNPUBLISHED
  fullName: LiveKit.LiveKitWebhookEvents.TRACK_UNPUBLISHED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: TRACK_UNPUBLISHED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 47
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when a participant unpublishes a track from the room.
  example: []
  syntax:
    content: public const string TRACK_UNPUBLISHED = "track_unpublished"
    return:
      type: System.String
    content.vb: Public Const TRACK_UNPUBLISHED As String = "track_unpublished"
- uid: LiveKit.LiveKitWebhookEvents.EGRESS_STARTED
  commentId: F:LiveKit.LiveKitWebhookEvents.EGRESS_STARTED
  id: EGRESS_STARTED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: EGRESS_STARTED
  nameWithType: LiveKitWebhookEvents.EGRESS_STARTED
  fullName: LiveKit.LiveKitWebhookEvents.EGRESS_STARTED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EGRESS_STARTED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 52
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when an egress (recording or streaming) session starts.
  example: []
  syntax:
    content: public const string EGRESS_STARTED = "egress_started"
    return:
      type: System.String
    content.vb: Public Const EGRESS_STARTED As String = "egress_started"
- uid: LiveKit.LiveKitWebhookEvents.EGRESS_UPDATED
  commentId: F:LiveKit.LiveKitWebhookEvents.EGRESS_UPDATED
  id: EGRESS_UPDATED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: EGRESS_UPDATED
  nameWithType: LiveKitWebhookEvents.EGRESS_UPDATED
  fullName: LiveKit.LiveKitWebhookEvents.EGRESS_UPDATED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EGRESS_UPDATED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 57
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when an egress session is updated (e.g., layout changes).
  example: []
  syntax:
    content: public const string EGRESS_UPDATED = "egress_updated"
    return:
      type: System.String
    content.vb: Public Const EGRESS_UPDATED As String = "egress_updated"
- uid: LiveKit.LiveKitWebhookEvents.EGRESS_ENDED
  commentId: F:LiveKit.LiveKitWebhookEvents.EGRESS_ENDED
  id: EGRESS_ENDED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: EGRESS_ENDED
  nameWithType: LiveKitWebhookEvents.EGRESS_ENDED
  fullName: LiveKit.LiveKitWebhookEvents.EGRESS_ENDED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EGRESS_ENDED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 62
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when an egress session completes.
  example: []
  syntax:
    content: public const string EGRESS_ENDED = "egress_ended"
    return:
      type: System.String
    content.vb: Public Const EGRESS_ENDED As String = "egress_ended"
- uid: LiveKit.LiveKitWebhookEvents.INGRESS_STARTED
  commentId: F:LiveKit.LiveKitWebhookEvents.INGRESS_STARTED
  id: INGRESS_STARTED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: INGRESS_STARTED
  nameWithType: LiveKitWebhookEvents.INGRESS_STARTED
  fullName: LiveKit.LiveKitWebhookEvents.INGRESS_STARTED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: INGRESS_STARTED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 67
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when an ingress (RTMP, WHIP, or URL pull) session starts.
  example: []
  syntax:
    content: public const string INGRESS_STARTED = "ingress_started"
    return:
      type: System.String
    content.vb: Public Const INGRESS_STARTED As String = "ingress_started"
- uid: LiveKit.LiveKitWebhookEvents.INGRESS_ENDED
  commentId: F:LiveKit.LiveKitWebhookEvents.INGRESS_ENDED
  id: INGRESS_ENDED
  parent: LiveKit.LiveKitWebhookEvents
  langs:
  - csharp
  - vb
  name: INGRESS_ENDED
  nameWithType: LiveKitWebhookEvents.INGRESS_ENDED
  fullName: LiveKit.LiveKitWebhookEvents.INGRESS_ENDED
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: INGRESS_ENDED
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/LiveKitWebhookEvents.cs
    startLine: 72
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit
  summary: Event fired when an ingress session ends.
  example: []
  syntax:
    content: public const string INGRESS_ENDED = "ingress_ended"
    return:
      type: System.String
    content.vb: Public Const INGRESS_ENDED As String = "ingress_ended"
references:
- uid: LiveKit
  commentId: N:LiveKit
  href: LiveKit.html
  name: LiveKit
  nameWithType: LiveKit
  fullName: LiveKit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
