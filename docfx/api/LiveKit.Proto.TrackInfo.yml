### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.TrackInfo
  commentId: T:LiveKit.Proto.TrackInfo
  id: TrackInfo
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.TrackInfo.#ctor
  - LiveKit.Proto.TrackInfo.#ctor(LiveKit.Proto.TrackInfo)
  - LiveKit.Proto.TrackInfo.AudioFeatures
  - LiveKit.Proto.TrackInfo.AudioFeaturesFieldNumber
  - LiveKit.Proto.TrackInfo.BackupCodecPolicy
  - LiveKit.Proto.TrackInfo.BackupCodecPolicyFieldNumber
  - LiveKit.Proto.TrackInfo.CalculateSize
  - LiveKit.Proto.TrackInfo.Clone
  - LiveKit.Proto.TrackInfo.Codecs
  - LiveKit.Proto.TrackInfo.CodecsFieldNumber
  - LiveKit.Proto.TrackInfo.Descriptor
  - LiveKit.Proto.TrackInfo.DisableDtx
  - LiveKit.Proto.TrackInfo.DisableDtxFieldNumber
  - LiveKit.Proto.TrackInfo.DisableRed
  - LiveKit.Proto.TrackInfo.DisableRedFieldNumber
  - LiveKit.Proto.TrackInfo.Encryption
  - LiveKit.Proto.TrackInfo.EncryptionFieldNumber
  - LiveKit.Proto.TrackInfo.Equals(LiveKit.Proto.TrackInfo)
  - LiveKit.Proto.TrackInfo.Equals(System.Object)
  - LiveKit.Proto.TrackInfo.GetHashCode
  - LiveKit.Proto.TrackInfo.Height
  - LiveKit.Proto.TrackInfo.HeightFieldNumber
  - LiveKit.Proto.TrackInfo.Layers
  - LiveKit.Proto.TrackInfo.LayersFieldNumber
  - LiveKit.Proto.TrackInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.TrackInfo.MergeFrom(LiveKit.Proto.TrackInfo)
  - LiveKit.Proto.TrackInfo.Mid
  - LiveKit.Proto.TrackInfo.MidFieldNumber
  - LiveKit.Proto.TrackInfo.MimeType
  - LiveKit.Proto.TrackInfo.MimeTypeFieldNumber
  - LiveKit.Proto.TrackInfo.Muted
  - LiveKit.Proto.TrackInfo.MutedFieldNumber
  - LiveKit.Proto.TrackInfo.Name
  - LiveKit.Proto.TrackInfo.NameFieldNumber
  - LiveKit.Proto.TrackInfo.Parser
  - LiveKit.Proto.TrackInfo.Sid
  - LiveKit.Proto.TrackInfo.SidFieldNumber
  - LiveKit.Proto.TrackInfo.Simulcast
  - LiveKit.Proto.TrackInfo.SimulcastFieldNumber
  - LiveKit.Proto.TrackInfo.Source
  - LiveKit.Proto.TrackInfo.SourceFieldNumber
  - LiveKit.Proto.TrackInfo.Stereo
  - LiveKit.Proto.TrackInfo.StereoFieldNumber
  - LiveKit.Proto.TrackInfo.Stream
  - LiveKit.Proto.TrackInfo.StreamFieldNumber
  - LiveKit.Proto.TrackInfo.ToString
  - LiveKit.Proto.TrackInfo.Type
  - LiveKit.Proto.TrackInfo.TypeFieldNumber
  - LiveKit.Proto.TrackInfo.Version
  - LiveKit.Proto.TrackInfo.VersionFieldNumber
  - LiveKit.Proto.TrackInfo.Width
  - LiveKit.Proto.TrackInfo.WidthFieldNumber
  - LiveKit.Proto.TrackInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: TrackInfo
  nameWithType: TrackInfo
  fullName: LiveKit.Proto.TrackInfo
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: TrackInfo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4289
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: 'public sealed class TrackInfo : IMessage<TrackInfo>, IEquatable<TrackInfo>, IDeepCloneable<TrackInfo>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class TrackInfo Implements IMessage(Of TrackInfo), IEquatable(Of TrackInfo), IDeepCloneable(Of TrackInfo), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}
  - System.IEquatable{LiveKit.Proto.TrackInfo}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.TrackInfo.Parser
  commentId: P:LiveKit.Proto.TrackInfo.Parser
  id: Parser
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: TrackInfo.Parser
  fullName: LiveKit.Proto.TrackInfo.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4297
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<TrackInfo> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.TrackInfo}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of TrackInfo)
  overload: LiveKit.Proto.TrackInfo.Parser*
- uid: LiveKit.Proto.TrackInfo.Descriptor
  commentId: P:LiveKit.Proto.TrackInfo.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: TrackInfo.Descriptor
  fullName: LiveKit.Proto.TrackInfo.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4301
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.TrackInfo.Descriptor*
- uid: LiveKit.Proto.TrackInfo.#ctor
  commentId: M:LiveKit.Proto.TrackInfo.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: TrackInfo()
  nameWithType: TrackInfo.TrackInfo()
  fullName: LiveKit.Proto.TrackInfo.TrackInfo()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4313
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public TrackInfo()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.TrackInfo.#ctor*
  nameWithType.vb: TrackInfo.New()
  fullName.vb: LiveKit.Proto.TrackInfo.New()
  name.vb: New()
- uid: LiveKit.Proto.TrackInfo.#ctor(LiveKit.Proto.TrackInfo)
  commentId: M:LiveKit.Proto.TrackInfo.#ctor(LiveKit.Proto.TrackInfo)
  id: '#ctor(LiveKit.Proto.TrackInfo)'
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: TrackInfo(TrackInfo)
  nameWithType: TrackInfo.TrackInfo(TrackInfo)
  fullName: LiveKit.Proto.TrackInfo.TrackInfo(LiveKit.Proto.TrackInfo)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4321
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public TrackInfo(TrackInfo other)
    parameters:
    - id: other
      type: LiveKit.Proto.TrackInfo
    content.vb: Public Sub New(other As TrackInfo)
  overload: LiveKit.Proto.TrackInfo.#ctor*
  nameWithType.vb: TrackInfo.New(TrackInfo)
  fullName.vb: LiveKit.Proto.TrackInfo.New(LiveKit.Proto.TrackInfo)
  name.vb: New(TrackInfo)
- uid: LiveKit.Proto.TrackInfo.Clone
  commentId: M:LiveKit.Proto.TrackInfo.Clone
  id: Clone
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TrackInfo.Clone()
  fullName: LiveKit.Proto.TrackInfo.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4347
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public TrackInfo Clone()
    return:
      type: LiveKit.Proto.TrackInfo
      description: A deep clone of this object.
    content.vb: Public Function Clone() As TrackInfo
  overload: LiveKit.Proto.TrackInfo.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}.Clone
- uid: LiveKit.Proto.TrackInfo.SidFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.SidFieldNumber
  id: SidFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: SidFieldNumber
  nameWithType: TrackInfo.SidFieldNumber
  fullName: LiveKit.Proto.TrackInfo.SidFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SidFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4354
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "sid" field.
  example: []
  syntax:
    content: public const int SidFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const SidFieldNumber As Integer = 1
- uid: LiveKit.Proto.TrackInfo.Sid
  commentId: P:LiveKit.Proto.TrackInfo.Sid
  id: Sid
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Sid
  nameWithType: TrackInfo.Sid
  fullName: LiveKit.Proto.TrackInfo.Sid
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Sid
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4356
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Sid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Sid As String
  overload: LiveKit.Proto.TrackInfo.Sid*
- uid: LiveKit.Proto.TrackInfo.TypeFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.TypeFieldNumber
  id: TypeFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: TypeFieldNumber
  nameWithType: TrackInfo.TypeFieldNumber
  fullName: LiveKit.Proto.TrackInfo.TypeFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: TypeFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4366
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "type" field.
  example: []
  syntax:
    content: public const int TypeFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const TypeFieldNumber As Integer = 2
- uid: LiveKit.Proto.TrackInfo.Type
  commentId: P:LiveKit.Proto.TrackInfo.Type
  id: Type
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TrackInfo.Type
  fullName: LiveKit.Proto.TrackInfo.Type
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Type
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4368
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public TrackType Type { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.TrackType
    content.vb: Public Property Type As TrackType
  overload: LiveKit.Proto.TrackInfo.Type*
- uid: LiveKit.Proto.TrackInfo.NameFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.NameFieldNumber
  id: NameFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: NameFieldNumber
  nameWithType: TrackInfo.NameFieldNumber
  fullName: LiveKit.Proto.TrackInfo.NameFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NameFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4378
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "name" field.
  example: []
  syntax:
    content: public const int NameFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const NameFieldNumber As Integer = 3
- uid: LiveKit.Proto.TrackInfo.Name
  commentId: P:LiveKit.Proto.TrackInfo.Name
  id: Name
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TrackInfo.Name
  fullName: LiveKit.Proto.TrackInfo.Name
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Name
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4380
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: LiveKit.Proto.TrackInfo.Name*
- uid: LiveKit.Proto.TrackInfo.MutedFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.MutedFieldNumber
  id: MutedFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: MutedFieldNumber
  nameWithType: TrackInfo.MutedFieldNumber
  fullName: LiveKit.Proto.TrackInfo.MutedFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MutedFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4390
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "muted" field.
  example: []
  syntax:
    content: public const int MutedFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const MutedFieldNumber As Integer = 4
- uid: LiveKit.Proto.TrackInfo.Muted
  commentId: P:LiveKit.Proto.TrackInfo.Muted
  id: Muted
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Muted
  nameWithType: TrackInfo.Muted
  fullName: LiveKit.Proto.TrackInfo.Muted
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Muted
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4392
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public bool Muted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Muted As Boolean
  overload: LiveKit.Proto.TrackInfo.Muted*
- uid: LiveKit.Proto.TrackInfo.WidthFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.WidthFieldNumber
  id: WidthFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: WidthFieldNumber
  nameWithType: TrackInfo.WidthFieldNumber
  fullName: LiveKit.Proto.TrackInfo.WidthFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WidthFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4402
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "width" field.
  example: []
  syntax:
    content: public const int WidthFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const WidthFieldNumber As Integer = 5
- uid: LiveKit.Proto.TrackInfo.Width
  commentId: P:LiveKit.Proto.TrackInfo.Width
  id: Width
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: TrackInfo.Width
  fullName: LiveKit.Proto.TrackInfo.Width
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Width
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4408
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    original width of video (unset for audio)

    clients may receive a lower resolution version with simulcast
  example: []
  syntax:
    content: public uint Width { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Width As UInteger
  overload: LiveKit.Proto.TrackInfo.Width*
- uid: LiveKit.Proto.TrackInfo.HeightFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.HeightFieldNumber
  id: HeightFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: HeightFieldNumber
  nameWithType: TrackInfo.HeightFieldNumber
  fullName: LiveKit.Proto.TrackInfo.HeightFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HeightFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4418
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "height" field.
  example: []
  syntax:
    content: public const int HeightFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const HeightFieldNumber As Integer = 6
- uid: LiveKit.Proto.TrackInfo.Height
  commentId: P:LiveKit.Proto.TrackInfo.Height
  id: Height
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: TrackInfo.Height
  fullName: LiveKit.Proto.TrackInfo.Height
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Height
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4423
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: original height of video (unset for audio)
  example: []
  syntax:
    content: public uint Height { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Height As UInteger
  overload: LiveKit.Proto.TrackInfo.Height*
- uid: LiveKit.Proto.TrackInfo.SimulcastFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.SimulcastFieldNumber
  id: SimulcastFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: SimulcastFieldNumber
  nameWithType: TrackInfo.SimulcastFieldNumber
  fullName: LiveKit.Proto.TrackInfo.SimulcastFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SimulcastFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4433
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "simulcast" field.
  example: []
  syntax:
    content: public const int SimulcastFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const SimulcastFieldNumber As Integer = 7
- uid: LiveKit.Proto.TrackInfo.Simulcast
  commentId: P:LiveKit.Proto.TrackInfo.Simulcast
  id: Simulcast
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Simulcast
  nameWithType: TrackInfo.Simulcast
  fullName: LiveKit.Proto.TrackInfo.Simulcast
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Simulcast
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4438
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: true if track is simulcasted
  example: []
  syntax:
    content: >-
      [Obsolete]

      public bool Simulcast { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete>

      Public Property Simulcast As Boolean
  overload: LiveKit.Proto.TrackInfo.Simulcast*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.TrackInfo.DisableDtxFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.DisableDtxFieldNumber
  id: DisableDtxFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: DisableDtxFieldNumber
  nameWithType: TrackInfo.DisableDtxFieldNumber
  fullName: LiveKit.Proto.TrackInfo.DisableDtxFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: DisableDtxFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4449
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "disable_dtx" field.
  example: []
  syntax:
    content: public const int DisableDtxFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const DisableDtxFieldNumber As Integer = 8
- uid: LiveKit.Proto.TrackInfo.DisableDtx
  commentId: P:LiveKit.Proto.TrackInfo.DisableDtx
  id: DisableDtx
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: DisableDtx
  nameWithType: TrackInfo.DisableDtx
  fullName: LiveKit.Proto.TrackInfo.DisableDtx
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: DisableDtx
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4454
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: true if DTX (Discontinuous Transmission) is disabled for audio
  example: []
  syntax:
    content: >-
      [Obsolete]

      public bool DisableDtx { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete>

      Public Property DisableDtx As Boolean
  overload: LiveKit.Proto.TrackInfo.DisableDtx*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.TrackInfo.SourceFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.SourceFieldNumber
  id: SourceFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: SourceFieldNumber
  nameWithType: TrackInfo.SourceFieldNumber
  fullName: LiveKit.Proto.TrackInfo.SourceFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SourceFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4465
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "source" field.
  example: []
  syntax:
    content: public const int SourceFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const SourceFieldNumber As Integer = 9
- uid: LiveKit.Proto.TrackInfo.Source
  commentId: P:LiveKit.Proto.TrackInfo.Source
  id: Source
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: TrackInfo.Source
  fullName: LiveKit.Proto.TrackInfo.Source
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Source
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4470
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: source of media
  example: []
  syntax:
    content: public TrackSource Source { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.TrackSource
    content.vb: Public Property Source As TrackSource
  overload: LiveKit.Proto.TrackInfo.Source*
- uid: LiveKit.Proto.TrackInfo.LayersFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.LayersFieldNumber
  id: LayersFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: LayersFieldNumber
  nameWithType: TrackInfo.LayersFieldNumber
  fullName: LiveKit.Proto.TrackInfo.LayersFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: LayersFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4480
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "layers" field.
  example: []
  syntax:
    content: public const int LayersFieldNumber = 10
    return:
      type: System.Int32
    content.vb: Public Const LayersFieldNumber As Integer = 10
- uid: LiveKit.Proto.TrackInfo.Layers
  commentId: P:LiveKit.Proto.TrackInfo.Layers
  id: Layers
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Layers
  nameWithType: TrackInfo.Layers
  fullName: LiveKit.Proto.TrackInfo.Layers
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Layers
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4487
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: see `codecs` for layers of individual codec
  example: []
  syntax:
    content: >-
      [Obsolete]

      public RepeatedField<VideoLayer> Layers { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.VideoLayer}
    content.vb: >-
      <Obsolete>

      Public ReadOnly Property Layers As RepeatedField(Of VideoLayer)
  overload: LiveKit.Proto.TrackInfo.Layers*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.TrackInfo.MimeTypeFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.MimeTypeFieldNumber
  id: MimeTypeFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: MimeTypeFieldNumber
  nameWithType: TrackInfo.MimeTypeFieldNumber
  fullName: LiveKit.Proto.TrackInfo.MimeTypeFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MimeTypeFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4495
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "mime_type" field.
  example: []
  syntax:
    content: public const int MimeTypeFieldNumber = 11
    return:
      type: System.Int32
    content.vb: Public Const MimeTypeFieldNumber As Integer = 11
- uid: LiveKit.Proto.TrackInfo.MimeType
  commentId: P:LiveKit.Proto.TrackInfo.MimeType
  id: MimeType
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: MimeType
  nameWithType: TrackInfo.MimeType
  fullName: LiveKit.Proto.TrackInfo.MimeType
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MimeType
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4500
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: mime type of codec
  example: []
  syntax:
    content: public string MimeType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MimeType As String
  overload: LiveKit.Proto.TrackInfo.MimeType*
- uid: LiveKit.Proto.TrackInfo.MidFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.MidFieldNumber
  id: MidFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: MidFieldNumber
  nameWithType: TrackInfo.MidFieldNumber
  fullName: LiveKit.Proto.TrackInfo.MidFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MidFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4510
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "mid" field.
  example: []
  syntax:
    content: public const int MidFieldNumber = 12
    return:
      type: System.Int32
    content.vb: Public Const MidFieldNumber As Integer = 12
- uid: LiveKit.Proto.TrackInfo.Mid
  commentId: P:LiveKit.Proto.TrackInfo.Mid
  id: Mid
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Mid
  nameWithType: TrackInfo.Mid
  fullName: LiveKit.Proto.TrackInfo.Mid
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Mid
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4512
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Mid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Mid As String
  overload: LiveKit.Proto.TrackInfo.Mid*
- uid: LiveKit.Proto.TrackInfo.CodecsFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.CodecsFieldNumber
  id: CodecsFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: CodecsFieldNumber
  nameWithType: TrackInfo.CodecsFieldNumber
  fullName: LiveKit.Proto.TrackInfo.CodecsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CodecsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4522
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "codecs" field.
  example: []
  syntax:
    content: public const int CodecsFieldNumber = 13
    return:
      type: System.Int32
    content.vb: Public Const CodecsFieldNumber As Integer = 13
- uid: LiveKit.Proto.TrackInfo.Codecs
  commentId: P:LiveKit.Proto.TrackInfo.Codecs
  id: Codecs
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Codecs
  nameWithType: TrackInfo.Codecs
  fullName: LiveKit.Proto.TrackInfo.Codecs
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Codecs
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4526
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RepeatedField<SimulcastCodecInfo> Codecs { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.SimulcastCodecInfo}
    content.vb: Public ReadOnly Property Codecs As RepeatedField(Of SimulcastCodecInfo)
  overload: LiveKit.Proto.TrackInfo.Codecs*
- uid: LiveKit.Proto.TrackInfo.StereoFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.StereoFieldNumber
  id: StereoFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: StereoFieldNumber
  nameWithType: TrackInfo.StereoFieldNumber
  fullName: LiveKit.Proto.TrackInfo.StereoFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StereoFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4533
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "stereo" field.
  example: []
  syntax:
    content: public const int StereoFieldNumber = 14
    return:
      type: System.Int32
    content.vb: Public Const StereoFieldNumber As Integer = 14
- uid: LiveKit.Proto.TrackInfo.Stereo
  commentId: P:LiveKit.Proto.TrackInfo.Stereo
  id: Stereo
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Stereo
  nameWithType: TrackInfo.Stereo
  fullName: LiveKit.Proto.TrackInfo.Stereo
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Stereo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4538
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: deprecated in favor of `audio_features`
  example: []
  syntax:
    content: >-
      [Obsolete]

      public bool Stereo { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete>

      Public Property Stereo As Boolean
  overload: LiveKit.Proto.TrackInfo.Stereo*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.TrackInfo.DisableRedFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.DisableRedFieldNumber
  id: DisableRedFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: DisableRedFieldNumber
  nameWithType: TrackInfo.DisableRedFieldNumber
  fullName: LiveKit.Proto.TrackInfo.DisableRedFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: DisableRedFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4549
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "disable_red" field.
  example: []
  syntax:
    content: public const int DisableRedFieldNumber = 15
    return:
      type: System.Int32
    content.vb: Public Const DisableRedFieldNumber As Integer = 15
- uid: LiveKit.Proto.TrackInfo.DisableRed
  commentId: P:LiveKit.Proto.TrackInfo.DisableRed
  id: DisableRed
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: DisableRed
  nameWithType: TrackInfo.DisableRed
  fullName: LiveKit.Proto.TrackInfo.DisableRed
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: DisableRed
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4554
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: true if RED (Redundant Encoding) is disabled for audio
  example: []
  syntax:
    content: public bool DisableRed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DisableRed As Boolean
  overload: LiveKit.Proto.TrackInfo.DisableRed*
- uid: LiveKit.Proto.TrackInfo.EncryptionFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.EncryptionFieldNumber
  id: EncryptionFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: EncryptionFieldNumber
  nameWithType: TrackInfo.EncryptionFieldNumber
  fullName: LiveKit.Proto.TrackInfo.EncryptionFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EncryptionFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4564
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "encryption" field.
  example: []
  syntax:
    content: public const int EncryptionFieldNumber = 16
    return:
      type: System.Int32
    content.vb: Public Const EncryptionFieldNumber As Integer = 16
- uid: LiveKit.Proto.TrackInfo.Encryption
  commentId: P:LiveKit.Proto.TrackInfo.Encryption
  id: Encryption
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Encryption
  nameWithType: TrackInfo.Encryption
  fullName: LiveKit.Proto.TrackInfo.Encryption
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Encryption
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4566
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public Encryption.Types.Type Encryption { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.Encryption.Types.Type
    content.vb: Public Property Encryption As Encryption.Types.Type
  overload: LiveKit.Proto.TrackInfo.Encryption*
- uid: LiveKit.Proto.TrackInfo.StreamFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.StreamFieldNumber
  id: StreamFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: StreamFieldNumber
  nameWithType: TrackInfo.StreamFieldNumber
  fullName: LiveKit.Proto.TrackInfo.StreamFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4576
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "stream" field.
  example: []
  syntax:
    content: public const int StreamFieldNumber = 17
    return:
      type: System.Int32
    content.vb: Public Const StreamFieldNumber As Integer = 17
- uid: LiveKit.Proto.TrackInfo.Stream
  commentId: P:LiveKit.Proto.TrackInfo.Stream
  id: Stream
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: TrackInfo.Stream
  fullName: LiveKit.Proto.TrackInfo.Stream
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Stream
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4578
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Stream { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Stream As String
  overload: LiveKit.Proto.TrackInfo.Stream*
- uid: LiveKit.Proto.TrackInfo.VersionFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.VersionFieldNumber
  id: VersionFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: VersionFieldNumber
  nameWithType: TrackInfo.VersionFieldNumber
  fullName: LiveKit.Proto.TrackInfo.VersionFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: VersionFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4588
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "version" field.
  example: []
  syntax:
    content: public const int VersionFieldNumber = 18
    return:
      type: System.Int32
    content.vb: Public Const VersionFieldNumber As Integer = 18
- uid: LiveKit.Proto.TrackInfo.Version
  commentId: P:LiveKit.Proto.TrackInfo.Version
  id: Version
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: TrackInfo.Version
  fullName: LiveKit.Proto.TrackInfo.Version
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Version
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4590
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public TimedVersion Version { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.TimedVersion
    content.vb: Public Property Version As TimedVersion
  overload: LiveKit.Proto.TrackInfo.Version*
- uid: LiveKit.Proto.TrackInfo.AudioFeaturesFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.AudioFeaturesFieldNumber
  id: AudioFeaturesFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: AudioFeaturesFieldNumber
  nameWithType: TrackInfo.AudioFeaturesFieldNumber
  fullName: LiveKit.Proto.TrackInfo.AudioFeaturesFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AudioFeaturesFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4600
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "audio_features" field.
  example: []
  syntax:
    content: public const int AudioFeaturesFieldNumber = 19
    return:
      type: System.Int32
    content.vb: Public Const AudioFeaturesFieldNumber As Integer = 19
- uid: LiveKit.Proto.TrackInfo.AudioFeatures
  commentId: P:LiveKit.Proto.TrackInfo.AudioFeatures
  id: AudioFeatures
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: AudioFeatures
  nameWithType: TrackInfo.AudioFeatures
  fullName: LiveKit.Proto.TrackInfo.AudioFeatures
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AudioFeatures
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4604
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RepeatedField<AudioTrackFeature> AudioFeatures { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.AudioTrackFeature}
    content.vb: Public ReadOnly Property AudioFeatures As RepeatedField(Of AudioTrackFeature)
  overload: LiveKit.Proto.TrackInfo.AudioFeatures*
- uid: LiveKit.Proto.TrackInfo.BackupCodecPolicyFieldNumber
  commentId: F:LiveKit.Proto.TrackInfo.BackupCodecPolicyFieldNumber
  id: BackupCodecPolicyFieldNumber
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: BackupCodecPolicyFieldNumber
  nameWithType: TrackInfo.BackupCodecPolicyFieldNumber
  fullName: LiveKit.Proto.TrackInfo.BackupCodecPolicyFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: BackupCodecPolicyFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4611
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "backup_codec_policy" field.
  example: []
  syntax:
    content: public const int BackupCodecPolicyFieldNumber = 20
    return:
      type: System.Int32
    content.vb: Public Const BackupCodecPolicyFieldNumber As Integer = 20
- uid: LiveKit.Proto.TrackInfo.BackupCodecPolicy
  commentId: P:LiveKit.Proto.TrackInfo.BackupCodecPolicy
  id: BackupCodecPolicy
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: BackupCodecPolicy
  nameWithType: TrackInfo.BackupCodecPolicy
  fullName: LiveKit.Proto.TrackInfo.BackupCodecPolicy
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: BackupCodecPolicy
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4613
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public BackupCodecPolicy BackupCodecPolicy { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.BackupCodecPolicy
    content.vb: Public Property BackupCodecPolicy As BackupCodecPolicy
  overload: LiveKit.Proto.TrackInfo.BackupCodecPolicy*
- uid: LiveKit.Proto.TrackInfo.Equals(System.Object)
  commentId: M:LiveKit.Proto.TrackInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: TrackInfo.Equals(object)
  fullName: LiveKit.Proto.TrackInfo.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4622
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.TrackInfo.Equals*
  nameWithType.vb: TrackInfo.Equals(Object)
  fullName.vb: LiveKit.Proto.TrackInfo.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.TrackInfo.Equals(LiveKit.Proto.TrackInfo)
  commentId: M:LiveKit.Proto.TrackInfo.Equals(LiveKit.Proto.TrackInfo)
  id: Equals(LiveKit.Proto.TrackInfo)
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: Equals(TrackInfo)
  nameWithType: TrackInfo.Equals(TrackInfo)
  fullName: LiveKit.Proto.TrackInfo.Equals(LiveKit.Proto.TrackInfo)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4628
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(TrackInfo other)
    parameters:
    - id: other
      type: LiveKit.Proto.TrackInfo
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As TrackInfo) As Boolean
  overload: LiveKit.Proto.TrackInfo.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.TrackInfo}.Equals(LiveKit.Proto.TrackInfo)
- uid: LiveKit.Proto.TrackInfo.GetHashCode
  commentId: M:LiveKit.Proto.TrackInfo.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TrackInfo.GetHashCode()
  fullName: LiveKit.Proto.TrackInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4660
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.TrackInfo.GetHashCode*
- uid: LiveKit.Proto.TrackInfo.ToString
  commentId: M:LiveKit.Proto.TrackInfo.ToString
  id: ToString
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TrackInfo.ToString()
  fullName: LiveKit.Proto.TrackInfo.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4690
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.TrackInfo.ToString*
- uid: LiveKit.Proto.TrackInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.TrackInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: TrackInfo.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.TrackInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4696
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.TrackInfo.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.TrackInfo.CalculateSize
  commentId: M:LiveKit.Proto.TrackInfo.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: TrackInfo.CalculateSize()
  fullName: LiveKit.Proto.TrackInfo.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4860
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.TrackInfo.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.TrackInfo.MergeFrom(LiveKit.Proto.TrackInfo)
  commentId: M:LiveKit.Proto.TrackInfo.MergeFrom(LiveKit.Proto.TrackInfo)
  id: MergeFrom(LiveKit.Proto.TrackInfo)
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: MergeFrom(TrackInfo)
  nameWithType: TrackInfo.MergeFrom(TrackInfo)
  fullName: LiveKit.Proto.TrackInfo.MergeFrom(LiveKit.Proto.TrackInfo)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4924
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(TrackInfo other)
    parameters:
    - id: other
      type: LiveKit.Proto.TrackInfo
    content.vb: Public Sub MergeFrom(other As TrackInfo)
  overload: LiveKit.Proto.TrackInfo.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}.MergeFrom(LiveKit.Proto.TrackInfo)
- uid: LiveKit.Proto.TrackInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.TrackInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.TrackInfo
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: TrackInfo.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.TrackInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 4990
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.TrackInfo.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.TrackInfo.html
  name: IMessage<TrackInfo>
  nameWithType: IMessage<TrackInfo>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.TrackInfo>
  nameWithType.vb: IMessage(Of TrackInfo)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.TrackInfo)
  name.vb: IMessage(Of TrackInfo)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.TrackInfo}
  commentId: T:System.IEquatable{LiveKit.Proto.TrackInfo}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TrackInfo>
  nameWithType: IEquatable<TrackInfo>
  fullName: System.IEquatable<LiveKit.Proto.TrackInfo>
  nameWithType.vb: IEquatable(Of TrackInfo)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.TrackInfo)
  name.vb: IEquatable(Of TrackInfo)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.TrackInfo.html
  name: IDeepCloneable<TrackInfo>
  nameWithType: IDeepCloneable<TrackInfo>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.TrackInfo>
  nameWithType.vb: IDeepCloneable(Of TrackInfo)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.TrackInfo)
  name.vb: IDeepCloneable(Of TrackInfo)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.TrackInfo.Parser*
  commentId: Overload:LiveKit.Proto.TrackInfo.Parser
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Parser
  name: Parser
  nameWithType: TrackInfo.Parser
  fullName: LiveKit.Proto.TrackInfo.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.TrackInfo}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.TrackInfo}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.TrackInfo.html
  name: MessageParser<TrackInfo>
  nameWithType: MessageParser<TrackInfo>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.TrackInfo>
  nameWithType.vb: MessageParser(Of TrackInfo)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.TrackInfo)
  name.vb: MessageParser(Of TrackInfo)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.TrackInfo.Descriptor*
  commentId: Overload:LiveKit.Proto.TrackInfo.Descriptor
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Descriptor
  name: Descriptor
  nameWithType: TrackInfo.Descriptor
  fullName: LiveKit.Proto.TrackInfo.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.TrackInfo.#ctor*
  commentId: Overload:LiveKit.Proto.TrackInfo.#ctor
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo__ctor
  name: TrackInfo
  nameWithType: TrackInfo.TrackInfo
  fullName: LiveKit.Proto.TrackInfo.TrackInfo
  nameWithType.vb: TrackInfo.New
  fullName.vb: LiveKit.Proto.TrackInfo.New
  name.vb: New
- uid: LiveKit.Proto.TrackInfo
  commentId: T:LiveKit.Proto.TrackInfo
  parent: LiveKit.Proto
  href: LiveKit.Proto.TrackInfo.html
  name: TrackInfo
  nameWithType: TrackInfo
  fullName: LiveKit.Proto.TrackInfo
- uid: LiveKit.Proto.TrackInfo.Clone*
  commentId: Overload:LiveKit.Proto.TrackInfo.Clone
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Clone
  name: Clone
  nameWithType: TrackInfo.Clone
  fullName: LiveKit.Proto.TrackInfo.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<TrackInfo>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.TrackInfo>.Clone()
  nameWithType.vb: IDeepCloneable(Of TrackInfo).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.TrackInfo).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.TrackInfo}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.TrackInfo.Sid*
  commentId: Overload:LiveKit.Proto.TrackInfo.Sid
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Sid
  name: Sid
  nameWithType: TrackInfo.Sid
  fullName: LiveKit.Proto.TrackInfo.Sid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.TrackInfo.Type*
  commentId: Overload:LiveKit.Proto.TrackInfo.Type
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Type
  name: Type
  nameWithType: TrackInfo.Type
  fullName: LiveKit.Proto.TrackInfo.Type
- uid: LiveKit.Proto.TrackType
  commentId: T:LiveKit.Proto.TrackType
  parent: LiveKit.Proto
  href: LiveKit.Proto.TrackType.html
  name: TrackType
  nameWithType: TrackType
  fullName: LiveKit.Proto.TrackType
- uid: LiveKit.Proto.TrackInfo.Name*
  commentId: Overload:LiveKit.Proto.TrackInfo.Name
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Name
  name: Name
  nameWithType: TrackInfo.Name
  fullName: LiveKit.Proto.TrackInfo.Name
- uid: LiveKit.Proto.TrackInfo.Muted*
  commentId: Overload:LiveKit.Proto.TrackInfo.Muted
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Muted
  name: Muted
  nameWithType: TrackInfo.Muted
  fullName: LiveKit.Proto.TrackInfo.Muted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiveKit.Proto.TrackInfo.Width*
  commentId: Overload:LiveKit.Proto.TrackInfo.Width
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Width
  name: Width
  nameWithType: TrackInfo.Width
  fullName: LiveKit.Proto.TrackInfo.Width
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: LiveKit.Proto.TrackInfo.Height*
  commentId: Overload:LiveKit.Proto.TrackInfo.Height
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Height
  name: Height
  nameWithType: TrackInfo.Height
  fullName: LiveKit.Proto.TrackInfo.Height
- uid: LiveKit.Proto.TrackInfo.Simulcast*
  commentId: Overload:LiveKit.Proto.TrackInfo.Simulcast
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Simulcast
  name: Simulcast
  nameWithType: TrackInfo.Simulcast
  fullName: LiveKit.Proto.TrackInfo.Simulcast
- uid: LiveKit.Proto.TrackInfo.DisableDtx*
  commentId: Overload:LiveKit.Proto.TrackInfo.DisableDtx
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_DisableDtx
  name: DisableDtx
  nameWithType: TrackInfo.DisableDtx
  fullName: LiveKit.Proto.TrackInfo.DisableDtx
- uid: LiveKit.Proto.TrackInfo.Source*
  commentId: Overload:LiveKit.Proto.TrackInfo.Source
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Source
  name: Source
  nameWithType: TrackInfo.Source
  fullName: LiveKit.Proto.TrackInfo.Source
- uid: LiveKit.Proto.TrackSource
  commentId: T:LiveKit.Proto.TrackSource
  parent: LiveKit.Proto
  href: LiveKit.Proto.TrackSource.html
  name: TrackSource
  nameWithType: TrackSource
  fullName: LiveKit.Proto.TrackSource
- uid: LiveKit.Proto.TrackInfo.Layers*
  commentId: Overload:LiveKit.Proto.TrackInfo.Layers
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Layers
  name: Layers
  nameWithType: TrackInfo.Layers
  fullName: LiveKit.Proto.TrackInfo.Layers
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.VideoLayer}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.VideoLayer}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.VideoLayer.html
  name: RepeatedField<VideoLayer>
  nameWithType: RepeatedField<VideoLayer>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.VideoLayer>
  nameWithType.vb: RepeatedField(Of VideoLayer)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.VideoLayer)
  name.vb: RepeatedField(Of VideoLayer)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.VideoLayer
    name: VideoLayer
    href: LiveKit.Proto.VideoLayer.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.VideoLayer
    name: VideoLayer
    href: LiveKit.Proto.VideoLayer.html
  - name: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
- uid: LiveKit.Proto.TrackInfo.MimeType*
  commentId: Overload:LiveKit.Proto.TrackInfo.MimeType
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_MimeType
  name: MimeType
  nameWithType: TrackInfo.MimeType
  fullName: LiveKit.Proto.TrackInfo.MimeType
- uid: LiveKit.Proto.TrackInfo.Mid*
  commentId: Overload:LiveKit.Proto.TrackInfo.Mid
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Mid
  name: Mid
  nameWithType: TrackInfo.Mid
  fullName: LiveKit.Proto.TrackInfo.Mid
- uid: LiveKit.Proto.TrackInfo.Codecs*
  commentId: Overload:LiveKit.Proto.TrackInfo.Codecs
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Codecs
  name: Codecs
  nameWithType: TrackInfo.Codecs
  fullName: LiveKit.Proto.TrackInfo.Codecs
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.SimulcastCodecInfo}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.SimulcastCodecInfo}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.SimulcastCodecInfo.html
  name: RepeatedField<SimulcastCodecInfo>
  nameWithType: RepeatedField<SimulcastCodecInfo>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.SimulcastCodecInfo>
  nameWithType.vb: RepeatedField(Of SimulcastCodecInfo)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.SimulcastCodecInfo)
  name.vb: RepeatedField(Of SimulcastCodecInfo)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.SimulcastCodecInfo
    name: SimulcastCodecInfo
    href: LiveKit.Proto.SimulcastCodecInfo.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.SimulcastCodecInfo
    name: SimulcastCodecInfo
    href: LiveKit.Proto.SimulcastCodecInfo.html
  - name: )
- uid: LiveKit.Proto.TrackInfo.Stereo*
  commentId: Overload:LiveKit.Proto.TrackInfo.Stereo
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Stereo
  name: Stereo
  nameWithType: TrackInfo.Stereo
  fullName: LiveKit.Proto.TrackInfo.Stereo
- uid: LiveKit.Proto.TrackInfo.DisableRed*
  commentId: Overload:LiveKit.Proto.TrackInfo.DisableRed
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_DisableRed
  name: DisableRed
  nameWithType: TrackInfo.DisableRed
  fullName: LiveKit.Proto.TrackInfo.DisableRed
- uid: LiveKit.Proto.TrackInfo.Encryption*
  commentId: Overload:LiveKit.Proto.TrackInfo.Encryption
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Encryption
  name: Encryption
  nameWithType: TrackInfo.Encryption
  fullName: LiveKit.Proto.TrackInfo.Encryption
- uid: LiveKit.Proto.Encryption.Types.Type
  commentId: T:LiveKit.Proto.Encryption.Types.Type
  parent: LiveKit.Proto
  href: LiveKit.Proto.Encryption.html
  name: Encryption.Types.Type
  nameWithType: Encryption.Types.Type
  fullName: LiveKit.Proto.Encryption.Types.Type
  spec.csharp:
  - uid: LiveKit.Proto.Encryption
    name: Encryption
    href: LiveKit.Proto.Encryption.html
  - name: .
  - uid: LiveKit.Proto.Encryption.Types
    name: Types
    href: LiveKit.Proto.Encryption.Types.html
  - name: .
  - uid: LiveKit.Proto.Encryption.Types.Type
    name: Type
    href: LiveKit.Proto.Encryption.Types.Type.html
  spec.vb:
  - uid: LiveKit.Proto.Encryption
    name: Encryption
    href: LiveKit.Proto.Encryption.html
  - name: .
  - uid: LiveKit.Proto.Encryption.Types
    name: Types
    href: LiveKit.Proto.Encryption.Types.html
  - name: .
  - uid: LiveKit.Proto.Encryption.Types.Type
    name: Type
    href: LiveKit.Proto.Encryption.Types.Type.html
- uid: LiveKit.Proto.TrackInfo.Stream*
  commentId: Overload:LiveKit.Proto.TrackInfo.Stream
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Stream
  name: Stream
  nameWithType: TrackInfo.Stream
  fullName: LiveKit.Proto.TrackInfo.Stream
- uid: LiveKit.Proto.TrackInfo.Version*
  commentId: Overload:LiveKit.Proto.TrackInfo.Version
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Version
  name: Version
  nameWithType: TrackInfo.Version
  fullName: LiveKit.Proto.TrackInfo.Version
- uid: LiveKit.Proto.TimedVersion
  commentId: T:LiveKit.Proto.TimedVersion
  parent: LiveKit.Proto
  href: LiveKit.Proto.TimedVersion.html
  name: TimedVersion
  nameWithType: TimedVersion
  fullName: LiveKit.Proto.TimedVersion
- uid: LiveKit.Proto.TrackInfo.AudioFeatures*
  commentId: Overload:LiveKit.Proto.TrackInfo.AudioFeatures
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_AudioFeatures
  name: AudioFeatures
  nameWithType: TrackInfo.AudioFeatures
  fullName: LiveKit.Proto.TrackInfo.AudioFeatures
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.AudioTrackFeature}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.AudioTrackFeature}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.AudioTrackFeature.html
  name: RepeatedField<AudioTrackFeature>
  nameWithType: RepeatedField<AudioTrackFeature>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.AudioTrackFeature>
  nameWithType.vb: RepeatedField(Of AudioTrackFeature)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.AudioTrackFeature)
  name.vb: RepeatedField(Of AudioTrackFeature)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.AudioTrackFeature
    name: AudioTrackFeature
    href: LiveKit.Proto.AudioTrackFeature.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.AudioTrackFeature
    name: AudioTrackFeature
    href: LiveKit.Proto.AudioTrackFeature.html
  - name: )
- uid: LiveKit.Proto.TrackInfo.BackupCodecPolicy*
  commentId: Overload:LiveKit.Proto.TrackInfo.BackupCodecPolicy
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_BackupCodecPolicy
  name: BackupCodecPolicy
  nameWithType: TrackInfo.BackupCodecPolicy
  fullName: LiveKit.Proto.TrackInfo.BackupCodecPolicy
- uid: LiveKit.Proto.BackupCodecPolicy
  commentId: T:LiveKit.Proto.BackupCodecPolicy
  parent: LiveKit.Proto
  href: LiveKit.Proto.BackupCodecPolicy.html
  name: BackupCodecPolicy
  nameWithType: BackupCodecPolicy
  fullName: LiveKit.Proto.BackupCodecPolicy
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.TrackInfo.Equals*
  commentId: Overload:LiveKit.Proto.TrackInfo.Equals
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_Equals_System_Object_
  name: Equals
  nameWithType: TrackInfo.Equals
  fullName: LiveKit.Proto.TrackInfo.Equals
- uid: System.IEquatable{LiveKit.Proto.TrackInfo}.Equals(LiveKit.Proto.TrackInfo)
  commentId: M:System.IEquatable{LiveKit.Proto.TrackInfo}.Equals(LiveKit.Proto.TrackInfo)
  parent: System.IEquatable{LiveKit.Proto.TrackInfo}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(TrackInfo)
  nameWithType: IEquatable<TrackInfo>.Equals(TrackInfo)
  fullName: System.IEquatable<LiveKit.Proto.TrackInfo>.Equals(LiveKit.Proto.TrackInfo)
  nameWithType.vb: IEquatable(Of TrackInfo).Equals(TrackInfo)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.TrackInfo).Equals(LiveKit.Proto.TrackInfo)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.TrackInfo}.Equals(LiveKit.Proto.TrackInfo)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.TrackInfo}.Equals(LiveKit.Proto.TrackInfo)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.TrackInfo.GetHashCode*
  commentId: Overload:LiveKit.Proto.TrackInfo.GetHashCode
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_GetHashCode
  name: GetHashCode
  nameWithType: TrackInfo.GetHashCode
  fullName: LiveKit.Proto.TrackInfo.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.TrackInfo.ToString*
  commentId: Overload:LiveKit.Proto.TrackInfo.ToString
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_ToString
  name: ToString
  nameWithType: TrackInfo.ToString
  fullName: LiveKit.Proto.TrackInfo.ToString
- uid: LiveKit.Proto.TrackInfo.WriteTo*
  commentId: Overload:LiveKit.Proto.TrackInfo.WriteTo
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: TrackInfo.WriteTo
  fullName: LiveKit.Proto.TrackInfo.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.TrackInfo.CalculateSize*
  commentId: Overload:LiveKit.Proto.TrackInfo.CalculateSize
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_CalculateSize
  name: CalculateSize
  nameWithType: TrackInfo.CalculateSize
  fullName: LiveKit.Proto.TrackInfo.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.TrackInfo.MergeFrom*
  commentId: Overload:LiveKit.Proto.TrackInfo.MergeFrom
  href: LiveKit.Proto.TrackInfo.html#LiveKit_Proto_TrackInfo_MergeFrom_LiveKit_Proto_TrackInfo_
  name: MergeFrom
  nameWithType: TrackInfo.MergeFrom
  fullName: LiveKit.Proto.TrackInfo.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}.MergeFrom(LiveKit.Proto.TrackInfo)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}.MergeFrom(LiveKit.Proto.TrackInfo)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.TrackInfo.html
  name: MergeFrom(TrackInfo)
  nameWithType: IMessage<TrackInfo>.MergeFrom(TrackInfo)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.TrackInfo>.MergeFrom(LiveKit.Proto.TrackInfo)
  nameWithType.vb: IMessage(Of TrackInfo).MergeFrom(TrackInfo)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.TrackInfo).MergeFrom(LiveKit.Proto.TrackInfo)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}.MergeFrom(LiveKit.Proto.TrackInfo)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.TrackInfo}.MergeFrom(LiveKit.Proto.TrackInfo)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.TrackInfo
    name: TrackInfo
    href: LiveKit.Proto.TrackInfo.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
