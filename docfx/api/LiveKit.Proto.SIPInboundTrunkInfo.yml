### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.SIPInboundTrunkInfo
  commentId: T:LiveKit.Proto.SIPInboundTrunkInfo
  id: SIPInboundTrunkInfo
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.SIPInboundTrunkInfo.#ctor
  - LiveKit.Proto.SIPInboundTrunkInfo.#ctor(LiveKit.Proto.SIPInboundTrunkInfo)
  - LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses
  - LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddressesFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers
  - LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbersFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders
  - LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeadersFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword
  - LiveKit.Proto.SIPInboundTrunkInfo.AuthPasswordFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername
  - LiveKit.Proto.SIPInboundTrunkInfo.AuthUsernameFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize
  - LiveKit.Proto.SIPInboundTrunkInfo.Clone
  - LiveKit.Proto.SIPInboundTrunkInfo.Descriptor
  - LiveKit.Proto.SIPInboundTrunkInfo.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  - LiveKit.Proto.SIPInboundTrunkInfo.Equals(System.Object)
  - LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode
  - LiveKit.Proto.SIPInboundTrunkInfo.Headers
  - LiveKit.Proto.SIPInboundTrunkInfo.HeadersFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes
  - LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributesFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders
  - LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeadersFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled
  - LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabledFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration
  - LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDurationFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption
  - LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryptionFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  - LiveKit.Proto.SIPInboundTrunkInfo.Metadata
  - LiveKit.Proto.SIPInboundTrunkInfo.MetadataFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.Name
  - LiveKit.Proto.SIPInboundTrunkInfo.NameFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.Numbers
  - LiveKit.Proto.SIPInboundTrunkInfo.NumbersFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.Parser
  - LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout
  - LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeoutFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId
  - LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkIdFieldNumber
  - LiveKit.Proto.SIPInboundTrunkInfo.ToString
  - LiveKit.Proto.SIPInboundTrunkInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SIPInboundTrunkInfo
  nameWithType: SIPInboundTrunkInfo
  fullName: LiveKit.Proto.SIPInboundTrunkInfo
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SIPInboundTrunkInfo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2834
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: 'public sealed class SIPInboundTrunkInfo : IMessage<SIPInboundTrunkInfo>, IEquatable<SIPInboundTrunkInfo>, IDeepCloneable<SIPInboundTrunkInfo>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class SIPInboundTrunkInfo Implements IMessage(Of SIPInboundTrunkInfo), IEquatable(Of SIPInboundTrunkInfo), IDeepCloneable(Of SIPInboundTrunkInfo), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}
  - System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Parser
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.Parser
  id: Parser
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SIPInboundTrunkInfo.Parser
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2842
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<SIPInboundTrunkInfo> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.SIPInboundTrunkInfo}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of SIPInboundTrunkInfo)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Parser*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Descriptor
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SIPInboundTrunkInfo.Descriptor
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2846
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Descriptor*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.#ctor
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: SIPInboundTrunkInfo()
  nameWithType: SIPInboundTrunkInfo.SIPInboundTrunkInfo()
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.SIPInboundTrunkInfo()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2858
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public SIPInboundTrunkInfo()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.SIPInboundTrunkInfo.#ctor*
  nameWithType.vb: SIPInboundTrunkInfo.New()
  fullName.vb: LiveKit.Proto.SIPInboundTrunkInfo.New()
  name.vb: New()
- uid: LiveKit.Proto.SIPInboundTrunkInfo.#ctor(LiveKit.Proto.SIPInboundTrunkInfo)
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.#ctor(LiveKit.Proto.SIPInboundTrunkInfo)
  id: '#ctor(LiveKit.Proto.SIPInboundTrunkInfo)'
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: SIPInboundTrunkInfo(SIPInboundTrunkInfo)
  nameWithType: SIPInboundTrunkInfo.SIPInboundTrunkInfo(SIPInboundTrunkInfo)
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.SIPInboundTrunkInfo(LiveKit.Proto.SIPInboundTrunkInfo)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2866
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public SIPInboundTrunkInfo(SIPInboundTrunkInfo other)
    parameters:
    - id: other
      type: LiveKit.Proto.SIPInboundTrunkInfo
    content.vb: Public Sub New(other As SIPInboundTrunkInfo)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.#ctor*
  nameWithType.vb: SIPInboundTrunkInfo.New(SIPInboundTrunkInfo)
  fullName.vb: LiveKit.Proto.SIPInboundTrunkInfo.New(LiveKit.Proto.SIPInboundTrunkInfo)
  name.vb: New(SIPInboundTrunkInfo)
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Clone
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.Clone
  id: Clone
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SIPInboundTrunkInfo.Clone()
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2888
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public SIPInboundTrunkInfo Clone()
    return:
      type: LiveKit.Proto.SIPInboundTrunkInfo
      description: A deep clone of this object.
    content.vb: Public Function Clone() As SIPInboundTrunkInfo
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}.Clone
- uid: LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkIdFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkIdFieldNumber
  id: SipTrunkIdFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: SipTrunkIdFieldNumber
  nameWithType: SIPInboundTrunkInfo.SipTrunkIdFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkIdFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SipTrunkIdFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2895
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "sip_trunk_id" field.
  example: []
  syntax:
    content: public const int SipTrunkIdFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const SipTrunkIdFieldNumber As Integer = 1
- uid: LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId
  id: SipTrunkId
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: SipTrunkId
  nameWithType: SIPInboundTrunkInfo.SipTrunkId
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SipTrunkId
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2897
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string SipTrunkId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SipTrunkId As String
  overload: LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.NameFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.NameFieldNumber
  id: NameFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: NameFieldNumber
  nameWithType: SIPInboundTrunkInfo.NameFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.NameFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NameFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2907
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "name" field.
  example: []
  syntax:
    content: public const int NameFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const NameFieldNumber As Integer = 2
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Name
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.Name
  id: Name
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SIPInboundTrunkInfo.Name
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Name
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Name
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2912
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Human-readable name for the Trunk.
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Name*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MetadataFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.MetadataFieldNumber
  id: MetadataFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: MetadataFieldNumber
  nameWithType: SIPInboundTrunkInfo.MetadataFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MetadataFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MetadataFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2922
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "metadata" field.
  example: []
  syntax:
    content: public const int MetadataFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const MetadataFieldNumber As Integer = 3
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Metadata
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.Metadata
  id: Metadata
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: SIPInboundTrunkInfo.Metadata
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Metadata
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Metadata
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2927
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: User-defined metadata for the Trunk.
  example: []
  syntax:
    content: public string Metadata { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Metadata As String
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Metadata*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.NumbersFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.NumbersFieldNumber
  id: NumbersFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: NumbersFieldNumber
  nameWithType: SIPInboundTrunkInfo.NumbersFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.NumbersFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NumbersFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2937
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "numbers" field.
  example: []
  syntax:
    content: public const int NumbersFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const NumbersFieldNumber As Integer = 4
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Numbers
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.Numbers
  id: Numbers
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Numbers
  nameWithType: SIPInboundTrunkInfo.Numbers
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Numbers
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Numbers
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2945
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    Numbers associated with LiveKit SIP. The Trunk will only accept calls made to these numbers.

    Creating multiple Trunks with different phone numbers allows having different rules for a single provider.
  example: []
  syntax:
    content: public RepeatedField<string> Numbers { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property Numbers As RepeatedField(Of String)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Numbers*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddressesFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddressesFieldNumber
  id: AllowedAddressesFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AllowedAddressesFieldNumber
  nameWithType: SIPInboundTrunkInfo.AllowedAddressesFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddressesFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AllowedAddressesFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2952
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "allowed_addresses" field.
  example: []
  syntax:
    content: public const int AllowedAddressesFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const AllowedAddressesFieldNumber As Integer = 5
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses
  id: AllowedAddresses
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AllowedAddresses
  nameWithType: SIPInboundTrunkInfo.AllowedAddresses
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AllowedAddresses
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2960
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    CIDR or IPs that traffic is accepted from.

    An empty list means all inbound traffic is accepted.
  example: []
  syntax:
    content: public RepeatedField<string> AllowedAddresses { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property AllowedAddresses As RepeatedField(Of String)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbersFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbersFieldNumber
  id: AllowedNumbersFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AllowedNumbersFieldNumber
  nameWithType: SIPInboundTrunkInfo.AllowedNumbersFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbersFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AllowedNumbersFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2967
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "allowed_numbers" field.
  example: []
  syntax:
    content: public const int AllowedNumbersFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const AllowedNumbersFieldNumber As Integer = 6
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers
  id: AllowedNumbers
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AllowedNumbers
  nameWithType: SIPInboundTrunkInfo.AllowedNumbers
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AllowedNumbers
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2975
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    Numbers that are allowed to make calls to this Trunk.

    An empty list means calls from any phone number is accepted.
  example: []
  syntax:
    content: public RepeatedField<string> AllowedNumbers { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property AllowedNumbers As RepeatedField(Of String)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AuthUsernameFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.AuthUsernameFieldNumber
  id: AuthUsernameFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AuthUsernameFieldNumber
  nameWithType: SIPInboundTrunkInfo.AuthUsernameFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AuthUsernameFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AuthUsernameFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2982
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "auth_username" field.
  example: []
  syntax:
    content: public const int AuthUsernameFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const AuthUsernameFieldNumber As Integer = 7
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername
  id: AuthUsername
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AuthUsername
  nameWithType: SIPInboundTrunkInfo.AuthUsername
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AuthUsername
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2988
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    Username and password used to authenticate inbound SIP invites.

    May be empty to have no authentication.
  example: []
  syntax:
    content: public string AuthUsername { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthUsername As String
  overload: LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AuthPasswordFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.AuthPasswordFieldNumber
  id: AuthPasswordFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AuthPasswordFieldNumber
  nameWithType: SIPInboundTrunkInfo.AuthPasswordFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AuthPasswordFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AuthPasswordFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 2998
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "auth_password" field.
  example: []
  syntax:
    content: public const int AuthPasswordFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const AuthPasswordFieldNumber As Integer = 8
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword
  id: AuthPassword
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AuthPassword
  nameWithType: SIPInboundTrunkInfo.AuthPassword
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AuthPassword
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3000
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string AuthPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthPassword As String
  overload: LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.HeadersFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.HeadersFieldNumber
  id: HeadersFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: HeadersFieldNumber
  nameWithType: SIPInboundTrunkInfo.HeadersFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.HeadersFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HeadersFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3010
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "headers" field.
  example: []
  syntax:
    content: public const int HeadersFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const HeadersFieldNumber As Integer = 9
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Headers
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.Headers
  id: Headers
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: SIPInboundTrunkInfo.Headers
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Headers
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Headers
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3017
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Include these SIP X-* headers in 200 OK responses.
  example: []
  syntax:
    content: public MapField<string, string> Headers { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.String}
    content.vb: Public ReadOnly Property Headers As MapField(Of String, String)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Headers*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributesFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributesFieldNumber
  id: HeadersToAttributesFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: HeadersToAttributesFieldNumber
  nameWithType: SIPInboundTrunkInfo.HeadersToAttributesFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributesFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HeadersToAttributesFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3024
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "headers_to_attributes" field.
  example: []
  syntax:
    content: public const int HeadersToAttributesFieldNumber = 10
    return:
      type: System.Int32
    content.vb: Public Const HeadersToAttributesFieldNumber As Integer = 10
- uid: LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes
  id: HeadersToAttributes
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: HeadersToAttributes
  nameWithType: SIPInboundTrunkInfo.HeadersToAttributes
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HeadersToAttributes
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3031
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Map SIP X-* headers from INVITE to SIP participant attributes.
  example: []
  syntax:
    content: public MapField<string, string> HeadersToAttributes { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.String}
    content.vb: Public ReadOnly Property HeadersToAttributes As MapField(Of String, String)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeadersFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeadersFieldNumber
  id: AttributesToHeadersFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AttributesToHeadersFieldNumber
  nameWithType: SIPInboundTrunkInfo.AttributesToHeadersFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeadersFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AttributesToHeadersFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3038
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "attributes_to_headers" field.
  example: []
  syntax:
    content: public const int AttributesToHeadersFieldNumber = 14
    return:
      type: System.Int32
    content.vb: Public Const AttributesToHeadersFieldNumber As Integer = 14
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders
  id: AttributesToHeaders
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: AttributesToHeaders
  nameWithType: SIPInboundTrunkInfo.AttributesToHeaders
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AttributesToHeaders
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3046
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    Map LiveKit attributes to SIP X-* headers when sending BYE or REFER requests.

    Keys are the names of attributes and values are the names of X-* headers they will be mapped to.
  example: []
  syntax:
    content: public MapField<string, string> AttributesToHeaders { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.String}
    content.vb: Public ReadOnly Property AttributesToHeaders As MapField(Of String, String)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeadersFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeadersFieldNumber
  id: IncludeHeadersFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: IncludeHeadersFieldNumber
  nameWithType: SIPInboundTrunkInfo.IncludeHeadersFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeadersFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IncludeHeadersFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3053
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "include_headers" field.
  example: []
  syntax:
    content: public const int IncludeHeadersFieldNumber = 15
    return:
      type: System.Int32
    content.vb: Public Const IncludeHeadersFieldNumber As Integer = 15
- uid: LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders
  id: IncludeHeaders
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: IncludeHeaders
  nameWithType: SIPInboundTrunkInfo.IncludeHeaders
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IncludeHeaders
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3063
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    Map SIP headers from INVITE to sip.h.* participant attributes automatically.


    When the names of required headers is known, using headers_to_attributes is strongly recommended.


    When mapping INVITE headers to response headers with attributes_to_headers map,

    lowercase header names should be used, for example: sip.h.x-custom-header.
  example: []
  syntax:
    content: public SIPHeaderOptions IncludeHeaders { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.SIPHeaderOptions
    content.vb: Public Property IncludeHeaders As SIPHeaderOptions
  overload: LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeoutFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeoutFieldNumber
  id: RingingTimeoutFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: RingingTimeoutFieldNumber
  nameWithType: SIPInboundTrunkInfo.RingingTimeoutFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeoutFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RingingTimeoutFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3073
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "ringing_timeout" field.
  example: []
  syntax:
    content: public const int RingingTimeoutFieldNumber = 11
    return:
      type: System.Int32
    content.vb: Public Const RingingTimeoutFieldNumber As Integer = 11
- uid: LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout
  id: RingingTimeout
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: RingingTimeout
  nameWithType: SIPInboundTrunkInfo.RingingTimeout
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RingingTimeout
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3078
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Max time for the caller to wait for track subscription.
  example: []
  syntax:
    content: public Duration RingingTimeout { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Duration
    content.vb: Public Property RingingTimeout As Duration
  overload: LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDurationFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDurationFieldNumber
  id: MaxCallDurationFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: MaxCallDurationFieldNumber
  nameWithType: SIPInboundTrunkInfo.MaxCallDurationFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDurationFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MaxCallDurationFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3088
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "max_call_duration" field.
  example: []
  syntax:
    content: public const int MaxCallDurationFieldNumber = 12
    return:
      type: System.Int32
    content.vb: Public Const MaxCallDurationFieldNumber As Integer = 12
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration
  id: MaxCallDuration
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: MaxCallDuration
  nameWithType: SIPInboundTrunkInfo.MaxCallDuration
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MaxCallDuration
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3093
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Max call duration.
  example: []
  syntax:
    content: public Duration MaxCallDuration { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Duration
    content.vb: Public Property MaxCallDuration As Duration
  overload: LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabledFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabledFieldNumber
  id: KrispEnabledFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: KrispEnabledFieldNumber
  nameWithType: SIPInboundTrunkInfo.KrispEnabledFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabledFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: KrispEnabledFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3103
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "krisp_enabled" field.
  example: []
  syntax:
    content: public const int KrispEnabledFieldNumber = 13
    return:
      type: System.Int32
    content.vb: Public Const KrispEnabledFieldNumber As Integer = 13
- uid: LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled
  id: KrispEnabled
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: KrispEnabled
  nameWithType: SIPInboundTrunkInfo.KrispEnabled
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: KrispEnabled
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3105
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public bool KrispEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property KrispEnabled As Boolean
  overload: LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryptionFieldNumber
  commentId: F:LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryptionFieldNumber
  id: MediaEncryptionFieldNumber
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: MediaEncryptionFieldNumber
  nameWithType: SIPInboundTrunkInfo.MediaEncryptionFieldNumber
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryptionFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MediaEncryptionFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3115
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "media_encryption" field.
  example: []
  syntax:
    content: public const int MediaEncryptionFieldNumber = 16
    return:
      type: System.Int32
    content.vb: Public Const MediaEncryptionFieldNumber As Integer = 16
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption
  commentId: P:LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption
  id: MediaEncryption
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: MediaEncryption
  nameWithType: SIPInboundTrunkInfo.MediaEncryption
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MediaEncryption
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3117
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public SIPMediaEncryption MediaEncryption { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.SIPMediaEncryption
    content.vb: Public Property MediaEncryption As SIPMediaEncryption
  overload: LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Equals(System.Object)
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SIPInboundTrunkInfo.Equals(object)
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3126
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Equals*
  nameWithType.vb: SIPInboundTrunkInfo.Equals(Object)
  fullName.vb: LiveKit.Proto.SIPInboundTrunkInfo.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  id: Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: Equals(SIPInboundTrunkInfo)
  nameWithType: SIPInboundTrunkInfo.Equals(SIPInboundTrunkInfo)
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3132
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(SIPInboundTrunkInfo other)
    parameters:
    - id: other
      type: LiveKit.Proto.SIPInboundTrunkInfo
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SIPInboundTrunkInfo) As Boolean
  overload: LiveKit.Proto.SIPInboundTrunkInfo.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
- uid: LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SIPInboundTrunkInfo.GetHashCode()
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3160
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.ToString
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.ToString
  id: ToString
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SIPInboundTrunkInfo.ToString()
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3186
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.SIPInboundTrunkInfo.ToString*
- uid: LiveKit.Proto.SIPInboundTrunkInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: SIPInboundTrunkInfo.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3192
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SIPInboundTrunkInfo.CalculateSize()
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3306
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  id: MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: MergeFrom(SIPInboundTrunkInfo)
  nameWithType: SIPInboundTrunkInfo.MergeFrom(SIPInboundTrunkInfo)
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3352
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(SIPInboundTrunkInfo other)
    parameters:
    - id: other
      type: LiveKit.Proto.SIPInboundTrunkInfo
    content.vb: Public Sub MergeFrom(other As SIPInboundTrunkInfo)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.SIPInboundTrunkInfo
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: SIPInboundTrunkInfo.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitSip.cs
    startLine: 3403
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.SIPInboundTrunkInfo.html
  name: IMessage<SIPInboundTrunkInfo>
  nameWithType: IMessage<SIPInboundTrunkInfo>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.SIPInboundTrunkInfo>
  nameWithType.vb: IMessage(Of SIPInboundTrunkInfo)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.SIPInboundTrunkInfo)
  name.vb: IMessage(Of SIPInboundTrunkInfo)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}
  commentId: T:System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SIPInboundTrunkInfo>
  nameWithType: IEquatable<SIPInboundTrunkInfo>
  fullName: System.IEquatable<LiveKit.Proto.SIPInboundTrunkInfo>
  nameWithType.vb: IEquatable(Of SIPInboundTrunkInfo)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.SIPInboundTrunkInfo)
  name.vb: IEquatable(Of SIPInboundTrunkInfo)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.SIPInboundTrunkInfo.html
  name: IDeepCloneable<SIPInboundTrunkInfo>
  nameWithType: IDeepCloneable<SIPInboundTrunkInfo>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.SIPInboundTrunkInfo>
  nameWithType.vb: IDeepCloneable(Of SIPInboundTrunkInfo)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.SIPInboundTrunkInfo)
  name.vb: IDeepCloneable(Of SIPInboundTrunkInfo)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Parser*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Parser
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Parser
  name: Parser
  nameWithType: SIPInboundTrunkInfo.Parser
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.SIPInboundTrunkInfo}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.SIPInboundTrunkInfo}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.SIPInboundTrunkInfo.html
  name: MessageParser<SIPInboundTrunkInfo>
  nameWithType: MessageParser<SIPInboundTrunkInfo>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.SIPInboundTrunkInfo>
  nameWithType.vb: MessageParser(Of SIPInboundTrunkInfo)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.SIPInboundTrunkInfo)
  name.vb: MessageParser(Of SIPInboundTrunkInfo)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Descriptor*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Descriptor
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Descriptor
  name: Descriptor
  nameWithType: SIPInboundTrunkInfo.Descriptor
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.SIPInboundTrunkInfo.#ctor*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.#ctor
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo__ctor
  name: SIPInboundTrunkInfo
  nameWithType: SIPInboundTrunkInfo.SIPInboundTrunkInfo
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.SIPInboundTrunkInfo
  nameWithType.vb: SIPInboundTrunkInfo.New
  fullName.vb: LiveKit.Proto.SIPInboundTrunkInfo.New
  name.vb: New
- uid: LiveKit.Proto.SIPInboundTrunkInfo
  commentId: T:LiveKit.Proto.SIPInboundTrunkInfo
  parent: LiveKit.Proto
  href: LiveKit.Proto.SIPInboundTrunkInfo.html
  name: SIPInboundTrunkInfo
  nameWithType: SIPInboundTrunkInfo
  fullName: LiveKit.Proto.SIPInboundTrunkInfo
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Clone*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Clone
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Clone
  name: Clone
  nameWithType: SIPInboundTrunkInfo.Clone
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<SIPInboundTrunkInfo>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.SIPInboundTrunkInfo>.Clone()
  nameWithType.vb: IDeepCloneable(Of SIPInboundTrunkInfo).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.SIPInboundTrunkInfo).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.SIPInboundTrunkInfo}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_SipTrunkId
  name: SipTrunkId
  nameWithType: SIPInboundTrunkInfo.SipTrunkId
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.SipTrunkId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Name*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Name
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Name
  name: Name
  nameWithType: SIPInboundTrunkInfo.Name
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Name
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Metadata*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Metadata
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Metadata
  name: Metadata
  nameWithType: SIPInboundTrunkInfo.Metadata
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Metadata
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Numbers*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Numbers
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Numbers
  name: Numbers
  nameWithType: SIPInboundTrunkInfo.Numbers
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Numbers
- uid: Google.Protobuf.Collections.RepeatedField{System.String}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RepeatedField<string>
  nameWithType: RepeatedField<string>
  fullName: Google.Protobuf.Collections.RepeatedField<string>
  nameWithType.vb: RepeatedField(Of String)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of String)
  name.vb: RepeatedField(Of String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_AllowedAddresses
  name: AllowedAddresses
  nameWithType: SIPInboundTrunkInfo.AllowedAddresses
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AllowedAddresses
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_AllowedNumbers
  name: AllowedNumbers
  nameWithType: SIPInboundTrunkInfo.AllowedNumbers
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AllowedNumbers
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_AuthUsername
  name: AuthUsername
  nameWithType: SIPInboundTrunkInfo.AuthUsername
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AuthUsername
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_AuthPassword
  name: AuthPassword
  nameWithType: SIPInboundTrunkInfo.AuthPassword
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AuthPassword
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Headers*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Headers
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Headers
  name: Headers
  nameWithType: SIPInboundTrunkInfo.Headers
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Headers
- uid: Google.Protobuf.Collections.MapField{System.String,System.String}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: MapField<string, string>
  nameWithType: MapField<string, string>
  fullName: Google.Protobuf.Collections.MapField<string, string>
  nameWithType.vb: MapField(Of String, String)
  fullName.vb: Google.Protobuf.Collections.MapField(Of String, String)
  name.vb: MapField(Of String, String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_HeadersToAttributes
  name: HeadersToAttributes
  nameWithType: SIPInboundTrunkInfo.HeadersToAttributes
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.HeadersToAttributes
- uid: LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_AttributesToHeaders
  name: AttributesToHeaders
  nameWithType: SIPInboundTrunkInfo.AttributesToHeaders
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.AttributesToHeaders
- uid: LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_IncludeHeaders
  name: IncludeHeaders
  nameWithType: SIPInboundTrunkInfo.IncludeHeaders
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.IncludeHeaders
- uid: LiveKit.Proto.SIPHeaderOptions
  commentId: T:LiveKit.Proto.SIPHeaderOptions
  parent: LiveKit.Proto
  href: LiveKit.Proto.SIPHeaderOptions.html
  name: SIPHeaderOptions
  nameWithType: SIPHeaderOptions
  fullName: LiveKit.Proto.SIPHeaderOptions
- uid: LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_RingingTimeout
  name: RingingTimeout
  nameWithType: SIPInboundTrunkInfo.RingingTimeout
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.RingingTimeout
- uid: Google.Protobuf.WellKnownTypes.Duration
  commentId: T:Google.Protobuf.WellKnownTypes.Duration
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Duration
  nameWithType: Duration
  fullName: Google.Protobuf.WellKnownTypes.Duration
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.WellKnownTypes
    name: WellKnownTypes
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.WellKnownTypes
    name: WellKnownTypes
    isExternal: true
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_MaxCallDuration
  name: MaxCallDuration
  nameWithType: SIPInboundTrunkInfo.MaxCallDuration
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MaxCallDuration
- uid: LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_KrispEnabled
  name: KrispEnabled
  nameWithType: SIPInboundTrunkInfo.KrispEnabled
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.KrispEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_MediaEncryption
  name: MediaEncryption
  nameWithType: SIPInboundTrunkInfo.MediaEncryption
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MediaEncryption
- uid: LiveKit.Proto.SIPMediaEncryption
  commentId: T:LiveKit.Proto.SIPMediaEncryption
  parent: LiveKit.Proto
  href: LiveKit.Proto.SIPMediaEncryption.html
  name: SIPMediaEncryption
  nameWithType: SIPMediaEncryption
  fullName: LiveKit.Proto.SIPMediaEncryption
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.SIPInboundTrunkInfo.Equals*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.Equals
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_Equals_System_Object_
  name: Equals
  nameWithType: SIPInboundTrunkInfo.Equals
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.Equals
- uid: System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  commentId: M:System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  parent: System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(SIPInboundTrunkInfo)
  nameWithType: IEquatable<SIPInboundTrunkInfo>.Equals(SIPInboundTrunkInfo)
  fullName: System.IEquatable<LiveKit.Proto.SIPInboundTrunkInfo>.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  nameWithType.vb: IEquatable(Of SIPInboundTrunkInfo).Equals(SIPInboundTrunkInfo)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.SIPInboundTrunkInfo).Equals(LiveKit.Proto.SIPInboundTrunkInfo)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.SIPInboundTrunkInfo}.Equals(LiveKit.Proto.SIPInboundTrunkInfo)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_GetHashCode
  name: GetHashCode
  nameWithType: SIPInboundTrunkInfo.GetHashCode
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.SIPInboundTrunkInfo.ToString*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.ToString
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_ToString
  name: ToString
  nameWithType: SIPInboundTrunkInfo.ToString
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.ToString
- uid: LiveKit.Proto.SIPInboundTrunkInfo.WriteTo*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.WriteTo
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: SIPInboundTrunkInfo.WriteTo
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_CalculateSize
  name: CalculateSize
  nameWithType: SIPInboundTrunkInfo.CalculateSize
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom*
  commentId: Overload:LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom
  href: LiveKit.Proto.SIPInboundTrunkInfo.html#LiveKit_Proto_SIPInboundTrunkInfo_MergeFrom_LiveKit_Proto_SIPInboundTrunkInfo_
  name: MergeFrom
  nameWithType: SIPInboundTrunkInfo.MergeFrom
  fullName: LiveKit.Proto.SIPInboundTrunkInfo.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.SIPInboundTrunkInfo.html
  name: MergeFrom(SIPInboundTrunkInfo)
  nameWithType: IMessage<SIPInboundTrunkInfo>.MergeFrom(SIPInboundTrunkInfo)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.SIPInboundTrunkInfo>.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  nameWithType.vb: IMessage(Of SIPInboundTrunkInfo).MergeFrom(SIPInboundTrunkInfo)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.SIPInboundTrunkInfo).MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.SIPInboundTrunkInfo}.MergeFrom(LiveKit.Proto.SIPInboundTrunkInfo)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.SIPInboundTrunkInfo
    name: SIPInboundTrunkInfo
    href: LiveKit.Proto.SIPInboundTrunkInfo.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
