### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.EncryptedPacketPayload
  commentId: T:LiveKit.Proto.EncryptedPacketPayload
  id: EncryptedPacketPayload
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.EncryptedPacketPayload.#ctor
  - LiveKit.Proto.EncryptedPacketPayload.#ctor(LiveKit.Proto.EncryptedPacketPayload)
  - LiveKit.Proto.EncryptedPacketPayload.CalculateSize
  - LiveKit.Proto.EncryptedPacketPayload.ChatMessage
  - LiveKit.Proto.EncryptedPacketPayload.ChatMessageFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.ClearValue
  - LiveKit.Proto.EncryptedPacketPayload.Clone
  - LiveKit.Proto.EncryptedPacketPayload.Descriptor
  - LiveKit.Proto.EncryptedPacketPayload.Equals(LiveKit.Proto.EncryptedPacketPayload)
  - LiveKit.Proto.EncryptedPacketPayload.Equals(System.Object)
  - LiveKit.Proto.EncryptedPacketPayload.GetHashCode
  - LiveKit.Proto.EncryptedPacketPayload.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.EncryptedPacketPayload.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  - LiveKit.Proto.EncryptedPacketPayload.Parser
  - LiveKit.Proto.EncryptedPacketPayload.RpcAck
  - LiveKit.Proto.EncryptedPacketPayload.RpcAckFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.RpcRequest
  - LiveKit.Proto.EncryptedPacketPayload.RpcRequestFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.RpcResponse
  - LiveKit.Proto.EncryptedPacketPayload.RpcResponseFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.StreamChunk
  - LiveKit.Proto.EncryptedPacketPayload.StreamChunkFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.StreamHeader
  - LiveKit.Proto.EncryptedPacketPayload.StreamHeaderFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.StreamTrailer
  - LiveKit.Proto.EncryptedPacketPayload.StreamTrailerFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.ToString
  - LiveKit.Proto.EncryptedPacketPayload.User
  - LiveKit.Proto.EncryptedPacketPayload.UserFieldNumber
  - LiveKit.Proto.EncryptedPacketPayload.ValueCase
  - LiveKit.Proto.EncryptedPacketPayload.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: EncryptedPacketPayload
  nameWithType: EncryptedPacketPayload
  fullName: LiveKit.Proto.EncryptedPacketPayload
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EncryptedPacketPayload
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7037
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: 'public sealed class EncryptedPacketPayload : IMessage<EncryptedPacketPayload>, IEquatable<EncryptedPacketPayload>, IDeepCloneable<EncryptedPacketPayload>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class EncryptedPacketPayload Implements IMessage(Of EncryptedPacketPayload), IEquatable(Of EncryptedPacketPayload), IDeepCloneable(Of EncryptedPacketPayload), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}
  - System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.EncryptedPacketPayload.Parser
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.Parser
  id: Parser
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: EncryptedPacketPayload.Parser
  fullName: LiveKit.Proto.EncryptedPacketPayload.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7045
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<EncryptedPacketPayload> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.EncryptedPacketPayload}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of EncryptedPacketPayload)
  overload: LiveKit.Proto.EncryptedPacketPayload.Parser*
- uid: LiveKit.Proto.EncryptedPacketPayload.Descriptor
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: EncryptedPacketPayload.Descriptor
  fullName: LiveKit.Proto.EncryptedPacketPayload.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7049
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.EncryptedPacketPayload.Descriptor*
- uid: LiveKit.Proto.EncryptedPacketPayload.#ctor
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: EncryptedPacketPayload()
  nameWithType: EncryptedPacketPayload.EncryptedPacketPayload()
  fullName: LiveKit.Proto.EncryptedPacketPayload.EncryptedPacketPayload()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7061
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public EncryptedPacketPayload()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.EncryptedPacketPayload.#ctor*
  nameWithType.vb: EncryptedPacketPayload.New()
  fullName.vb: LiveKit.Proto.EncryptedPacketPayload.New()
  name.vb: New()
- uid: LiveKit.Proto.EncryptedPacketPayload.#ctor(LiveKit.Proto.EncryptedPacketPayload)
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.#ctor(LiveKit.Proto.EncryptedPacketPayload)
  id: '#ctor(LiveKit.Proto.EncryptedPacketPayload)'
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: EncryptedPacketPayload(EncryptedPacketPayload)
  nameWithType: EncryptedPacketPayload.EncryptedPacketPayload(EncryptedPacketPayload)
  fullName: LiveKit.Proto.EncryptedPacketPayload.EncryptedPacketPayload(LiveKit.Proto.EncryptedPacketPayload)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7069
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public EncryptedPacketPayload(EncryptedPacketPayload other)
    parameters:
    - id: other
      type: LiveKit.Proto.EncryptedPacketPayload
    content.vb: Public Sub New(other As EncryptedPacketPayload)
  overload: LiveKit.Proto.EncryptedPacketPayload.#ctor*
  nameWithType.vb: EncryptedPacketPayload.New(EncryptedPacketPayload)
  fullName.vb: LiveKit.Proto.EncryptedPacketPayload.New(LiveKit.Proto.EncryptedPacketPayload)
  name.vb: New(EncryptedPacketPayload)
- uid: LiveKit.Proto.EncryptedPacketPayload.Clone
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.Clone
  id: Clone
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: EncryptedPacketPayload.Clone()
  fullName: LiveKit.Proto.EncryptedPacketPayload.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7102
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public EncryptedPacketPayload Clone()
    return:
      type: LiveKit.Proto.EncryptedPacketPayload
      description: A deep clone of this object.
    content.vb: Public Function Clone() As EncryptedPacketPayload
  overload: LiveKit.Proto.EncryptedPacketPayload.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}.Clone
- uid: LiveKit.Proto.EncryptedPacketPayload.UserFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.UserFieldNumber
  id: UserFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: UserFieldNumber
  nameWithType: EncryptedPacketPayload.UserFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.UserFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: UserFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7109
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "user" field.
  example: []
  syntax:
    content: public const int UserFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const UserFieldNumber As Integer = 1
- uid: LiveKit.Proto.EncryptedPacketPayload.User
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.User
  id: User
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: User
  nameWithType: EncryptedPacketPayload.User
  fullName: LiveKit.Proto.EncryptedPacketPayload.User
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: User
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7110
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public UserPacket User { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.UserPacket
    content.vb: Public Property User As UserPacket
  overload: LiveKit.Proto.EncryptedPacketPayload.User*
- uid: LiveKit.Proto.EncryptedPacketPayload.ChatMessageFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.ChatMessageFieldNumber
  id: ChatMessageFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: ChatMessageFieldNumber
  nameWithType: EncryptedPacketPayload.ChatMessageFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.ChatMessageFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ChatMessageFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7121
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "chat_message" field.
  example: []
  syntax:
    content: public const int ChatMessageFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ChatMessageFieldNumber As Integer = 3
- uid: LiveKit.Proto.EncryptedPacketPayload.ChatMessage
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.ChatMessage
  id: ChatMessage
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: ChatMessage
  nameWithType: EncryptedPacketPayload.ChatMessage
  fullName: LiveKit.Proto.EncryptedPacketPayload.ChatMessage
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ChatMessage
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7122
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ChatMessage ChatMessage { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.ChatMessage
    content.vb: Public Property ChatMessage As ChatMessage
  overload: LiveKit.Proto.EncryptedPacketPayload.ChatMessage*
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcRequestFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.RpcRequestFieldNumber
  id: RpcRequestFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: RpcRequestFieldNumber
  nameWithType: EncryptedPacketPayload.RpcRequestFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcRequestFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RpcRequestFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7133
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "rpc_request" field.
  example: []
  syntax:
    content: public const int RpcRequestFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const RpcRequestFieldNumber As Integer = 4
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcRequest
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.RpcRequest
  id: RpcRequest
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: RpcRequest
  nameWithType: EncryptedPacketPayload.RpcRequest
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcRequest
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RpcRequest
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7134
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RpcRequest RpcRequest { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.RpcRequest
    content.vb: Public Property RpcRequest As RpcRequest
  overload: LiveKit.Proto.EncryptedPacketPayload.RpcRequest*
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcAckFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.RpcAckFieldNumber
  id: RpcAckFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: RpcAckFieldNumber
  nameWithType: EncryptedPacketPayload.RpcAckFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcAckFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RpcAckFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7145
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "rpc_ack" field.
  example: []
  syntax:
    content: public const int RpcAckFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const RpcAckFieldNumber As Integer = 5
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcAck
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.RpcAck
  id: RpcAck
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: RpcAck
  nameWithType: EncryptedPacketPayload.RpcAck
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcAck
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RpcAck
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7146
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RpcAck RpcAck { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.RpcAck
    content.vb: Public Property RpcAck As RpcAck
  overload: LiveKit.Proto.EncryptedPacketPayload.RpcAck*
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcResponseFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.RpcResponseFieldNumber
  id: RpcResponseFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: RpcResponseFieldNumber
  nameWithType: EncryptedPacketPayload.RpcResponseFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcResponseFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RpcResponseFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7157
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "rpc_response" field.
  example: []
  syntax:
    content: public const int RpcResponseFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const RpcResponseFieldNumber As Integer = 6
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcResponse
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.RpcResponse
  id: RpcResponse
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: RpcResponse
  nameWithType: EncryptedPacketPayload.RpcResponse
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcResponse
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RpcResponse
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7158
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RpcResponse RpcResponse { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.RpcResponse
    content.vb: Public Property RpcResponse As RpcResponse
  overload: LiveKit.Proto.EncryptedPacketPayload.RpcResponse*
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamHeaderFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.StreamHeaderFieldNumber
  id: StreamHeaderFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: StreamHeaderFieldNumber
  nameWithType: EncryptedPacketPayload.StreamHeaderFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamHeaderFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamHeaderFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7169
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "stream_header" field.
  example: []
  syntax:
    content: public const int StreamHeaderFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const StreamHeaderFieldNumber As Integer = 7
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamHeader
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.StreamHeader
  id: StreamHeader
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: StreamHeader
  nameWithType: EncryptedPacketPayload.StreamHeader
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamHeader
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamHeader
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7170
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public DataStream.Types.Header StreamHeader { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.DataStream.Types.Header
    content.vb: Public Property StreamHeader As DataStream.Types.Header
  overload: LiveKit.Proto.EncryptedPacketPayload.StreamHeader*
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamChunkFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.StreamChunkFieldNumber
  id: StreamChunkFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: StreamChunkFieldNumber
  nameWithType: EncryptedPacketPayload.StreamChunkFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamChunkFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamChunkFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7181
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "stream_chunk" field.
  example: []
  syntax:
    content: public const int StreamChunkFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const StreamChunkFieldNumber As Integer = 8
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamChunk
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.StreamChunk
  id: StreamChunk
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: StreamChunk
  nameWithType: EncryptedPacketPayload.StreamChunk
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamChunk
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamChunk
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7182
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public DataStream.Types.Chunk StreamChunk { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.DataStream.Types.Chunk
    content.vb: Public Property StreamChunk As DataStream.Types.Chunk
  overload: LiveKit.Proto.EncryptedPacketPayload.StreamChunk*
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamTrailerFieldNumber
  commentId: F:LiveKit.Proto.EncryptedPacketPayload.StreamTrailerFieldNumber
  id: StreamTrailerFieldNumber
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: StreamTrailerFieldNumber
  nameWithType: EncryptedPacketPayload.StreamTrailerFieldNumber
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamTrailerFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamTrailerFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7193
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "stream_trailer" field.
  example: []
  syntax:
    content: public const int StreamTrailerFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const StreamTrailerFieldNumber As Integer = 9
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamTrailer
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.StreamTrailer
  id: StreamTrailer
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: StreamTrailer
  nameWithType: EncryptedPacketPayload.StreamTrailer
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamTrailer
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StreamTrailer
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7194
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public DataStream.Types.Trailer StreamTrailer { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.DataStream.Types.Trailer
    content.vb: Public Property StreamTrailer As DataStream.Types.Trailer
  overload: LiveKit.Proto.EncryptedPacketPayload.StreamTrailer*
- uid: LiveKit.Proto.EncryptedPacketPayload.ValueCase
  commentId: P:LiveKit.Proto.EncryptedPacketPayload.ValueCase
  id: ValueCase
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: ValueCase
  nameWithType: EncryptedPacketPayload.ValueCase
  fullName: LiveKit.Proto.EncryptedPacketPayload.ValueCase
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ValueCase
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7218
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public EncryptedPacketPayload.ValueOneofCase ValueCase { get; }
    parameters: []
    return:
      type: LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase
    content.vb: Public ReadOnly Property ValueCase As EncryptedPacketPayload.ValueOneofCase
  overload: LiveKit.Proto.EncryptedPacketPayload.ValueCase*
- uid: LiveKit.Proto.EncryptedPacketPayload.ClearValue
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.ClearValue
  id: ClearValue
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: ClearValue()
  nameWithType: EncryptedPacketPayload.ClearValue()
  fullName: LiveKit.Proto.EncryptedPacketPayload.ClearValue()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearValue
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7224
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public void ClearValue()
    content.vb: Public Sub ClearValue()
  overload: LiveKit.Proto.EncryptedPacketPayload.ClearValue*
- uid: LiveKit.Proto.EncryptedPacketPayload.Equals(System.Object)
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: EncryptedPacketPayload.Equals(object)
  fullName: LiveKit.Proto.EncryptedPacketPayload.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7231
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.EncryptedPacketPayload.Equals*
  nameWithType.vb: EncryptedPacketPayload.Equals(Object)
  fullName.vb: LiveKit.Proto.EncryptedPacketPayload.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.EncryptedPacketPayload.Equals(LiveKit.Proto.EncryptedPacketPayload)
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.Equals(LiveKit.Proto.EncryptedPacketPayload)
  id: Equals(LiveKit.Proto.EncryptedPacketPayload)
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: Equals(EncryptedPacketPayload)
  nameWithType: EncryptedPacketPayload.Equals(EncryptedPacketPayload)
  fullName: LiveKit.Proto.EncryptedPacketPayload.Equals(LiveKit.Proto.EncryptedPacketPayload)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7237
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(EncryptedPacketPayload other)
    parameters:
    - id: other
      type: LiveKit.Proto.EncryptedPacketPayload
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As EncryptedPacketPayload) As Boolean
  overload: LiveKit.Proto.EncryptedPacketPayload.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}.Equals(LiveKit.Proto.EncryptedPacketPayload)
- uid: LiveKit.Proto.EncryptedPacketPayload.GetHashCode
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EncryptedPacketPayload.GetHashCode()
  fullName: LiveKit.Proto.EncryptedPacketPayload.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7258
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.EncryptedPacketPayload.GetHashCode*
- uid: LiveKit.Proto.EncryptedPacketPayload.ToString
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.ToString
  id: ToString
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EncryptedPacketPayload.ToString()
  fullName: LiveKit.Proto.EncryptedPacketPayload.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7277
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.EncryptedPacketPayload.ToString*
- uid: LiveKit.Proto.EncryptedPacketPayload.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: EncryptedPacketPayload.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.EncryptedPacketPayload.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7283
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.EncryptedPacketPayload.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.EncryptedPacketPayload.CalculateSize
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: EncryptedPacketPayload.CalculateSize()
  fullName: LiveKit.Proto.EncryptedPacketPayload.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7369
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.EncryptedPacketPayload.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.EncryptedPacketPayload.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  id: MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: MergeFrom(EncryptedPacketPayload)
  nameWithType: EncryptedPacketPayload.MergeFrom(EncryptedPacketPayload)
  fullName: LiveKit.Proto.EncryptedPacketPayload.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7403
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(EncryptedPacketPayload other)
    parameters:
    - id: other
      type: LiveKit.Proto.EncryptedPacketPayload
    content.vb: Public Sub MergeFrom(other As EncryptedPacketPayload)
  overload: LiveKit.Proto.EncryptedPacketPayload.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
- uid: LiveKit.Proto.EncryptedPacketPayload.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.EncryptedPacketPayload.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.EncryptedPacketPayload
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: EncryptedPacketPayload.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.EncryptedPacketPayload.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitModels.cs
    startLine: 7463
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.EncryptedPacketPayload.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.EncryptedPacketPayload.html
  name: IMessage<EncryptedPacketPayload>
  nameWithType: IMessage<EncryptedPacketPayload>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.EncryptedPacketPayload>
  nameWithType.vb: IMessage(Of EncryptedPacketPayload)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.EncryptedPacketPayload)
  name.vb: IMessage(Of EncryptedPacketPayload)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}
  commentId: T:System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<EncryptedPacketPayload>
  nameWithType: IEquatable<EncryptedPacketPayload>
  fullName: System.IEquatable<LiveKit.Proto.EncryptedPacketPayload>
  nameWithType.vb: IEquatable(Of EncryptedPacketPayload)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.EncryptedPacketPayload)
  name.vb: IEquatable(Of EncryptedPacketPayload)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.EncryptedPacketPayload.html
  name: IDeepCloneable<EncryptedPacketPayload>
  nameWithType: IDeepCloneable<EncryptedPacketPayload>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.EncryptedPacketPayload>
  nameWithType.vb: IDeepCloneable(Of EncryptedPacketPayload)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.EncryptedPacketPayload)
  name.vb: IDeepCloneable(Of EncryptedPacketPayload)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.EncryptedPacketPayload.Parser*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.Parser
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_Parser
  name: Parser
  nameWithType: EncryptedPacketPayload.Parser
  fullName: LiveKit.Proto.EncryptedPacketPayload.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.EncryptedPacketPayload}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.EncryptedPacketPayload}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.EncryptedPacketPayload.html
  name: MessageParser<EncryptedPacketPayload>
  nameWithType: MessageParser<EncryptedPacketPayload>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.EncryptedPacketPayload>
  nameWithType.vb: MessageParser(Of EncryptedPacketPayload)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.EncryptedPacketPayload)
  name.vb: MessageParser(Of EncryptedPacketPayload)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.EncryptedPacketPayload.Descriptor*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.Descriptor
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_Descriptor
  name: Descriptor
  nameWithType: EncryptedPacketPayload.Descriptor
  fullName: LiveKit.Proto.EncryptedPacketPayload.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.EncryptedPacketPayload.#ctor*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.#ctor
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload__ctor
  name: EncryptedPacketPayload
  nameWithType: EncryptedPacketPayload.EncryptedPacketPayload
  fullName: LiveKit.Proto.EncryptedPacketPayload.EncryptedPacketPayload
  nameWithType.vb: EncryptedPacketPayload.New
  fullName.vb: LiveKit.Proto.EncryptedPacketPayload.New
  name.vb: New
- uid: LiveKit.Proto.EncryptedPacketPayload
  commentId: T:LiveKit.Proto.EncryptedPacketPayload
  parent: LiveKit.Proto
  href: LiveKit.Proto.EncryptedPacketPayload.html
  name: EncryptedPacketPayload
  nameWithType: EncryptedPacketPayload
  fullName: LiveKit.Proto.EncryptedPacketPayload
- uid: LiveKit.Proto.EncryptedPacketPayload.Clone*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.Clone
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_Clone
  name: Clone
  nameWithType: EncryptedPacketPayload.Clone
  fullName: LiveKit.Proto.EncryptedPacketPayload.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<EncryptedPacketPayload>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.EncryptedPacketPayload>.Clone()
  nameWithType.vb: IDeepCloneable(Of EncryptedPacketPayload).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.EncryptedPacketPayload).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.EncryptedPacketPayload}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.EncryptedPacketPayload.User*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.User
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_User
  name: User
  nameWithType: EncryptedPacketPayload.User
  fullName: LiveKit.Proto.EncryptedPacketPayload.User
- uid: LiveKit.Proto.UserPacket
  commentId: T:LiveKit.Proto.UserPacket
  parent: LiveKit.Proto
  href: LiveKit.Proto.UserPacket.html
  name: UserPacket
  nameWithType: UserPacket
  fullName: LiveKit.Proto.UserPacket
- uid: LiveKit.Proto.EncryptedPacketPayload.ChatMessage*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.ChatMessage
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_ChatMessage
  name: ChatMessage
  nameWithType: EncryptedPacketPayload.ChatMessage
  fullName: LiveKit.Proto.EncryptedPacketPayload.ChatMessage
- uid: LiveKit.Proto.ChatMessage
  commentId: T:LiveKit.Proto.ChatMessage
  parent: LiveKit.Proto
  href: LiveKit.Proto.ChatMessage.html
  name: ChatMessage
  nameWithType: ChatMessage
  fullName: LiveKit.Proto.ChatMessage
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcRequest*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.RpcRequest
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_RpcRequest
  name: RpcRequest
  nameWithType: EncryptedPacketPayload.RpcRequest
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcRequest
- uid: LiveKit.Proto.RpcRequest
  commentId: T:LiveKit.Proto.RpcRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.RpcRequest.html
  name: RpcRequest
  nameWithType: RpcRequest
  fullName: LiveKit.Proto.RpcRequest
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcAck*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.RpcAck
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_RpcAck
  name: RpcAck
  nameWithType: EncryptedPacketPayload.RpcAck
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcAck
- uid: LiveKit.Proto.RpcAck
  commentId: T:LiveKit.Proto.RpcAck
  parent: LiveKit.Proto
  href: LiveKit.Proto.RpcAck.html
  name: RpcAck
  nameWithType: RpcAck
  fullName: LiveKit.Proto.RpcAck
- uid: LiveKit.Proto.EncryptedPacketPayload.RpcResponse*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.RpcResponse
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_RpcResponse
  name: RpcResponse
  nameWithType: EncryptedPacketPayload.RpcResponse
  fullName: LiveKit.Proto.EncryptedPacketPayload.RpcResponse
- uid: LiveKit.Proto.RpcResponse
  commentId: T:LiveKit.Proto.RpcResponse
  parent: LiveKit.Proto
  href: LiveKit.Proto.RpcResponse.html
  name: RpcResponse
  nameWithType: RpcResponse
  fullName: LiveKit.Proto.RpcResponse
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamHeader*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.StreamHeader
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_StreamHeader
  name: StreamHeader
  nameWithType: EncryptedPacketPayload.StreamHeader
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamHeader
- uid: LiveKit.Proto.DataStream.Types.Header
  commentId: T:LiveKit.Proto.DataStream.Types.Header
  parent: LiveKit.Proto
  href: LiveKit.Proto.DataStream.html
  name: DataStream.Types.Header
  nameWithType: DataStream.Types.Header
  fullName: LiveKit.Proto.DataStream.Types.Header
  spec.csharp:
  - uid: LiveKit.Proto.DataStream
    name: DataStream
    href: LiveKit.Proto.DataStream.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types
    name: Types
    href: LiveKit.Proto.DataStream.Types.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types.Header
    name: Header
    href: LiveKit.Proto.DataStream.Types.Header.html
  spec.vb:
  - uid: LiveKit.Proto.DataStream
    name: DataStream
    href: LiveKit.Proto.DataStream.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types
    name: Types
    href: LiveKit.Proto.DataStream.Types.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types.Header
    name: Header
    href: LiveKit.Proto.DataStream.Types.Header.html
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamChunk*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.StreamChunk
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_StreamChunk
  name: StreamChunk
  nameWithType: EncryptedPacketPayload.StreamChunk
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamChunk
- uid: LiveKit.Proto.DataStream.Types.Chunk
  commentId: T:LiveKit.Proto.DataStream.Types.Chunk
  parent: LiveKit.Proto
  href: LiveKit.Proto.DataStream.html
  name: DataStream.Types.Chunk
  nameWithType: DataStream.Types.Chunk
  fullName: LiveKit.Proto.DataStream.Types.Chunk
  spec.csharp:
  - uid: LiveKit.Proto.DataStream
    name: DataStream
    href: LiveKit.Proto.DataStream.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types
    name: Types
    href: LiveKit.Proto.DataStream.Types.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types.Chunk
    name: Chunk
    href: LiveKit.Proto.DataStream.Types.Chunk.html
  spec.vb:
  - uid: LiveKit.Proto.DataStream
    name: DataStream
    href: LiveKit.Proto.DataStream.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types
    name: Types
    href: LiveKit.Proto.DataStream.Types.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types.Chunk
    name: Chunk
    href: LiveKit.Proto.DataStream.Types.Chunk.html
- uid: LiveKit.Proto.EncryptedPacketPayload.StreamTrailer*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.StreamTrailer
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_StreamTrailer
  name: StreamTrailer
  nameWithType: EncryptedPacketPayload.StreamTrailer
  fullName: LiveKit.Proto.EncryptedPacketPayload.StreamTrailer
- uid: LiveKit.Proto.DataStream.Types.Trailer
  commentId: T:LiveKit.Proto.DataStream.Types.Trailer
  parent: LiveKit.Proto
  href: LiveKit.Proto.DataStream.html
  name: DataStream.Types.Trailer
  nameWithType: DataStream.Types.Trailer
  fullName: LiveKit.Proto.DataStream.Types.Trailer
  spec.csharp:
  - uid: LiveKit.Proto.DataStream
    name: DataStream
    href: LiveKit.Proto.DataStream.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types
    name: Types
    href: LiveKit.Proto.DataStream.Types.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types.Trailer
    name: Trailer
    href: LiveKit.Proto.DataStream.Types.Trailer.html
  spec.vb:
  - uid: LiveKit.Proto.DataStream
    name: DataStream
    href: LiveKit.Proto.DataStream.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types
    name: Types
    href: LiveKit.Proto.DataStream.Types.html
  - name: .
  - uid: LiveKit.Proto.DataStream.Types.Trailer
    name: Trailer
    href: LiveKit.Proto.DataStream.Types.Trailer.html
- uid: LiveKit.Proto.EncryptedPacketPayload.ValueCase*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.ValueCase
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_ValueCase
  name: ValueCase
  nameWithType: EncryptedPacketPayload.ValueCase
  fullName: LiveKit.Proto.EncryptedPacketPayload.ValueCase
- uid: LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase
  commentId: T:LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase
  parent: LiveKit.Proto
  href: LiveKit.Proto.EncryptedPacketPayload.html
  name: EncryptedPacketPayload.ValueOneofCase
  nameWithType: EncryptedPacketPayload.ValueOneofCase
  fullName: LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase
  spec.csharp:
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: .
  - uid: LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase
    name: ValueOneofCase
    href: LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase.html
  spec.vb:
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: .
  - uid: LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase
    name: ValueOneofCase
    href: LiveKit.Proto.EncryptedPacketPayload.ValueOneofCase.html
- uid: LiveKit.Proto.EncryptedPacketPayload.ClearValue*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.ClearValue
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_ClearValue
  name: ClearValue
  nameWithType: EncryptedPacketPayload.ClearValue
  fullName: LiveKit.Proto.EncryptedPacketPayload.ClearValue
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.EncryptedPacketPayload.Equals*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.Equals
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_Equals_System_Object_
  name: Equals
  nameWithType: EncryptedPacketPayload.Equals
  fullName: LiveKit.Proto.EncryptedPacketPayload.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}.Equals(LiveKit.Proto.EncryptedPacketPayload)
  commentId: M:System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}.Equals(LiveKit.Proto.EncryptedPacketPayload)
  parent: System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(EncryptedPacketPayload)
  nameWithType: IEquatable<EncryptedPacketPayload>.Equals(EncryptedPacketPayload)
  fullName: System.IEquatable<LiveKit.Proto.EncryptedPacketPayload>.Equals(LiveKit.Proto.EncryptedPacketPayload)
  nameWithType.vb: IEquatable(Of EncryptedPacketPayload).Equals(EncryptedPacketPayload)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.EncryptedPacketPayload).Equals(LiveKit.Proto.EncryptedPacketPayload)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}.Equals(LiveKit.Proto.EncryptedPacketPayload)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.EncryptedPacketPayload}.Equals(LiveKit.Proto.EncryptedPacketPayload)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.EncryptedPacketPayload.GetHashCode*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.GetHashCode
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_GetHashCode
  name: GetHashCode
  nameWithType: EncryptedPacketPayload.GetHashCode
  fullName: LiveKit.Proto.EncryptedPacketPayload.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.EncryptedPacketPayload.ToString*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.ToString
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_ToString
  name: ToString
  nameWithType: EncryptedPacketPayload.ToString
  fullName: LiveKit.Proto.EncryptedPacketPayload.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.EncryptedPacketPayload.WriteTo*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.WriteTo
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: EncryptedPacketPayload.WriteTo
  fullName: LiveKit.Proto.EncryptedPacketPayload.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.EncryptedPacketPayload.CalculateSize*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.CalculateSize
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_CalculateSize
  name: CalculateSize
  nameWithType: EncryptedPacketPayload.CalculateSize
  fullName: LiveKit.Proto.EncryptedPacketPayload.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.EncryptedPacketPayload.MergeFrom*
  commentId: Overload:LiveKit.Proto.EncryptedPacketPayload.MergeFrom
  href: LiveKit.Proto.EncryptedPacketPayload.html#LiveKit_Proto_EncryptedPacketPayload_MergeFrom_LiveKit_Proto_EncryptedPacketPayload_
  name: MergeFrom
  nameWithType: EncryptedPacketPayload.MergeFrom
  fullName: LiveKit.Proto.EncryptedPacketPayload.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.EncryptedPacketPayload.html
  name: MergeFrom(EncryptedPacketPayload)
  nameWithType: IMessage<EncryptedPacketPayload>.MergeFrom(EncryptedPacketPayload)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.EncryptedPacketPayload>.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  nameWithType.vb: IMessage(Of EncryptedPacketPayload).MergeFrom(EncryptedPacketPayload)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.EncryptedPacketPayload).MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.EncryptedPacketPayload}.MergeFrom(LiveKit.Proto.EncryptedPacketPayload)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.EncryptedPacketPayload
    name: EncryptedPacketPayload
    href: LiveKit.Proto.EncryptedPacketPayload.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
