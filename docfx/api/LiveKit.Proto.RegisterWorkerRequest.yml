### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.RegisterWorkerRequest
  commentId: T:LiveKit.Proto.RegisterWorkerRequest
  id: RegisterWorkerRequest
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.RegisterWorkerRequest.#ctor
  - LiveKit.Proto.RegisterWorkerRequest.#ctor(LiveKit.Proto.RegisterWorkerRequest)
  - LiveKit.Proto.RegisterWorkerRequest.AgentName
  - LiveKit.Proto.RegisterWorkerRequest.AgentNameFieldNumber
  - LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions
  - LiveKit.Proto.RegisterWorkerRequest.AllowedPermissionsFieldNumber
  - LiveKit.Proto.RegisterWorkerRequest.CalculateSize
  - LiveKit.Proto.RegisterWorkerRequest.ClearNamespace
  - LiveKit.Proto.RegisterWorkerRequest.Clone
  - LiveKit.Proto.RegisterWorkerRequest.Descriptor
  - LiveKit.Proto.RegisterWorkerRequest.Equals(LiveKit.Proto.RegisterWorkerRequest)
  - LiveKit.Proto.RegisterWorkerRequest.Equals(System.Object)
  - LiveKit.Proto.RegisterWorkerRequest.GetHashCode
  - LiveKit.Proto.RegisterWorkerRequest.HasNamespace
  - LiveKit.Proto.RegisterWorkerRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.RegisterWorkerRequest.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  - LiveKit.Proto.RegisterWorkerRequest.Namespace
  - LiveKit.Proto.RegisterWorkerRequest.NamespaceFieldNumber
  - LiveKit.Proto.RegisterWorkerRequest.Parser
  - LiveKit.Proto.RegisterWorkerRequest.PingInterval
  - LiveKit.Proto.RegisterWorkerRequest.PingIntervalFieldNumber
  - LiveKit.Proto.RegisterWorkerRequest.ToString
  - LiveKit.Proto.RegisterWorkerRequest.Type
  - LiveKit.Proto.RegisterWorkerRequest.TypeFieldNumber
  - LiveKit.Proto.RegisterWorkerRequest.Version
  - LiveKit.Proto.RegisterWorkerRequest.VersionFieldNumber
  - LiveKit.Proto.RegisterWorkerRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: RegisterWorkerRequest
  nameWithType: RegisterWorkerRequest
  fullName: LiveKit.Proto.RegisterWorkerRequest
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RegisterWorkerRequest
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2908
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: 'public sealed class RegisterWorkerRequest : IMessage<RegisterWorkerRequest>, IEquatable<RegisterWorkerRequest>, IDeepCloneable<RegisterWorkerRequest>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class RegisterWorkerRequest Implements IMessage(Of RegisterWorkerRequest), IEquatable(Of RegisterWorkerRequest), IDeepCloneable(Of RegisterWorkerRequest), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}
  - System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.RegisterWorkerRequest.Parser
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.Parser
  id: Parser
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: RegisterWorkerRequest.Parser
  fullName: LiveKit.Proto.RegisterWorkerRequest.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2916
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<RegisterWorkerRequest> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.RegisterWorkerRequest}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of RegisterWorkerRequest)
  overload: LiveKit.Proto.RegisterWorkerRequest.Parser*
- uid: LiveKit.Proto.RegisterWorkerRequest.Descriptor
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: RegisterWorkerRequest.Descriptor
  fullName: LiveKit.Proto.RegisterWorkerRequest.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2920
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.RegisterWorkerRequest.Descriptor*
- uid: LiveKit.Proto.RegisterWorkerRequest.#ctor
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: RegisterWorkerRequest()
  nameWithType: RegisterWorkerRequest.RegisterWorkerRequest()
  fullName: LiveKit.Proto.RegisterWorkerRequest.RegisterWorkerRequest()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2932
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RegisterWorkerRequest()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.RegisterWorkerRequest.#ctor*
  nameWithType.vb: RegisterWorkerRequest.New()
  fullName.vb: LiveKit.Proto.RegisterWorkerRequest.New()
  name.vb: New()
- uid: LiveKit.Proto.RegisterWorkerRequest.#ctor(LiveKit.Proto.RegisterWorkerRequest)
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.#ctor(LiveKit.Proto.RegisterWorkerRequest)
  id: '#ctor(LiveKit.Proto.RegisterWorkerRequest)'
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: RegisterWorkerRequest(RegisterWorkerRequest)
  nameWithType: RegisterWorkerRequest.RegisterWorkerRequest(RegisterWorkerRequest)
  fullName: LiveKit.Proto.RegisterWorkerRequest.RegisterWorkerRequest(LiveKit.Proto.RegisterWorkerRequest)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2940
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RegisterWorkerRequest(RegisterWorkerRequest other)
    parameters:
    - id: other
      type: LiveKit.Proto.RegisterWorkerRequest
    content.vb: Public Sub New(other As RegisterWorkerRequest)
  overload: LiveKit.Proto.RegisterWorkerRequest.#ctor*
  nameWithType.vb: RegisterWorkerRequest.New(RegisterWorkerRequest)
  fullName.vb: LiveKit.Proto.RegisterWorkerRequest.New(LiveKit.Proto.RegisterWorkerRequest)
  name.vb: New(RegisterWorkerRequest)
- uid: LiveKit.Proto.RegisterWorkerRequest.Clone
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.Clone
  id: Clone
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: RegisterWorkerRequest.Clone()
  fullName: LiveKit.Proto.RegisterWorkerRequest.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2952
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public RegisterWorkerRequest Clone()
    return:
      type: LiveKit.Proto.RegisterWorkerRequest
      description: A deep clone of this object.
    content.vb: Public Function Clone() As RegisterWorkerRequest
  overload: LiveKit.Proto.RegisterWorkerRequest.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}.Clone
- uid: LiveKit.Proto.RegisterWorkerRequest.TypeFieldNumber
  commentId: F:LiveKit.Proto.RegisterWorkerRequest.TypeFieldNumber
  id: TypeFieldNumber
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: TypeFieldNumber
  nameWithType: RegisterWorkerRequest.TypeFieldNumber
  fullName: LiveKit.Proto.RegisterWorkerRequest.TypeFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: TypeFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2959
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "type" field.
  example: []
  syntax:
    content: public const int TypeFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const TypeFieldNumber As Integer = 1
- uid: LiveKit.Proto.RegisterWorkerRequest.Type
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.Type
  id: Type
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RegisterWorkerRequest.Type
  fullName: LiveKit.Proto.RegisterWorkerRequest.Type
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Type
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2961
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public JobType Type { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.JobType
    content.vb: Public Property Type As JobType
  overload: LiveKit.Proto.RegisterWorkerRequest.Type*
- uid: LiveKit.Proto.RegisterWorkerRequest.AgentNameFieldNumber
  commentId: F:LiveKit.Proto.RegisterWorkerRequest.AgentNameFieldNumber
  id: AgentNameFieldNumber
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: AgentNameFieldNumber
  nameWithType: RegisterWorkerRequest.AgentNameFieldNumber
  fullName: LiveKit.Proto.RegisterWorkerRequest.AgentNameFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AgentNameFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2971
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "agent_name" field.
  example: []
  syntax:
    content: public const int AgentNameFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const AgentNameFieldNumber As Integer = 8
- uid: LiveKit.Proto.RegisterWorkerRequest.AgentName
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.AgentName
  id: AgentName
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: AgentName
  nameWithType: RegisterWorkerRequest.AgentName
  fullName: LiveKit.Proto.RegisterWorkerRequest.AgentName
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AgentName
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2973
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string AgentName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AgentName As String
  overload: LiveKit.Proto.RegisterWorkerRequest.AgentName*
- uid: LiveKit.Proto.RegisterWorkerRequest.VersionFieldNumber
  commentId: F:LiveKit.Proto.RegisterWorkerRequest.VersionFieldNumber
  id: VersionFieldNumber
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: VersionFieldNumber
  nameWithType: RegisterWorkerRequest.VersionFieldNumber
  fullName: LiveKit.Proto.RegisterWorkerRequest.VersionFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: VersionFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2983
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "version" field.
  example: []
  syntax:
    content: public const int VersionFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const VersionFieldNumber As Integer = 3
- uid: LiveKit.Proto.RegisterWorkerRequest.Version
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.Version
  id: Version
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: RegisterWorkerRequest.Version
  fullName: LiveKit.Proto.RegisterWorkerRequest.Version
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Version
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2988
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: string worker_id = 2;
  example: []
  syntax:
    content: public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Version As String
  overload: LiveKit.Proto.RegisterWorkerRequest.Version*
- uid: LiveKit.Proto.RegisterWorkerRequest.PingIntervalFieldNumber
  commentId: F:LiveKit.Proto.RegisterWorkerRequest.PingIntervalFieldNumber
  id: PingIntervalFieldNumber
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: PingIntervalFieldNumber
  nameWithType: RegisterWorkerRequest.PingIntervalFieldNumber
  fullName: LiveKit.Proto.RegisterWorkerRequest.PingIntervalFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PingIntervalFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 2998
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "ping_interval" field.
  example: []
  syntax:
    content: public const int PingIntervalFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const PingIntervalFieldNumber As Integer = 5
- uid: LiveKit.Proto.RegisterWorkerRequest.PingInterval
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.PingInterval
  id: PingInterval
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: PingInterval
  nameWithType: RegisterWorkerRequest.PingInterval
  fullName: LiveKit.Proto.RegisterWorkerRequest.PingInterval
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PingInterval
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3003
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: string name = 4 [deprecated = true];
  example: []
  syntax:
    content: public uint PingInterval { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property PingInterval As UInteger
  overload: LiveKit.Proto.RegisterWorkerRequest.PingInterval*
- uid: LiveKit.Proto.RegisterWorkerRequest.NamespaceFieldNumber
  commentId: F:LiveKit.Proto.RegisterWorkerRequest.NamespaceFieldNumber
  id: NamespaceFieldNumber
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: NamespaceFieldNumber
  nameWithType: RegisterWorkerRequest.NamespaceFieldNumber
  fullName: LiveKit.Proto.RegisterWorkerRequest.NamespaceFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NamespaceFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3013
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "namespace" field.
  example: []
  syntax:
    content: public const int NamespaceFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const NamespaceFieldNumber As Integer = 6
- uid: LiveKit.Proto.RegisterWorkerRequest.Namespace
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.Namespace
  id: Namespace
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: RegisterWorkerRequest.Namespace
  fullName: LiveKit.Proto.RegisterWorkerRequest.Namespace
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Namespace
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3017
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Namespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property [Namespace] As String
  overload: LiveKit.Proto.RegisterWorkerRequest.Namespace*
- uid: LiveKit.Proto.RegisterWorkerRequest.HasNamespace
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.HasNamespace
  id: HasNamespace
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: HasNamespace
  nameWithType: RegisterWorkerRequest.HasNamespace
  fullName: LiveKit.Proto.RegisterWorkerRequest.HasNamespace
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HasNamespace
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3026
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Gets whether the "namespace" field is set
  example: []
  syntax:
    content: public bool HasNamespace { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasNamespace As Boolean
  overload: LiveKit.Proto.RegisterWorkerRequest.HasNamespace*
- uid: LiveKit.Proto.RegisterWorkerRequest.ClearNamespace
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.ClearNamespace
  id: ClearNamespace
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: ClearNamespace()
  nameWithType: RegisterWorkerRequest.ClearNamespace()
  fullName: LiveKit.Proto.RegisterWorkerRequest.ClearNamespace()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearNamespace
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3032
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Clears the value of the "namespace" field
  example: []
  syntax:
    content: public void ClearNamespace()
    content.vb: Public Sub ClearNamespace()
  overload: LiveKit.Proto.RegisterWorkerRequest.ClearNamespace*
- uid: LiveKit.Proto.RegisterWorkerRequest.AllowedPermissionsFieldNumber
  commentId: F:LiveKit.Proto.RegisterWorkerRequest.AllowedPermissionsFieldNumber
  id: AllowedPermissionsFieldNumber
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: AllowedPermissionsFieldNumber
  nameWithType: RegisterWorkerRequest.AllowedPermissionsFieldNumber
  fullName: LiveKit.Proto.RegisterWorkerRequest.AllowedPermissionsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AllowedPermissionsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3039
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "allowed_permissions" field.
  example: []
  syntax:
    content: public const int AllowedPermissionsFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const AllowedPermissionsFieldNumber As Integer = 7
- uid: LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions
  commentId: P:LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions
  id: AllowedPermissions
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: AllowedPermissions
  nameWithType: RegisterWorkerRequest.AllowedPermissions
  fullName: LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AllowedPermissions
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3041
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ParticipantPermission AllowedPermissions { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.ParticipantPermission
    content.vb: Public Property AllowedPermissions As ParticipantPermission
  overload: LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions*
- uid: LiveKit.Proto.RegisterWorkerRequest.Equals(System.Object)
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: RegisterWorkerRequest.Equals(object)
  fullName: LiveKit.Proto.RegisterWorkerRequest.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3050
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.RegisterWorkerRequest.Equals*
  nameWithType.vb: RegisterWorkerRequest.Equals(Object)
  fullName.vb: LiveKit.Proto.RegisterWorkerRequest.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.RegisterWorkerRequest.Equals(LiveKit.Proto.RegisterWorkerRequest)
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.Equals(LiveKit.Proto.RegisterWorkerRequest)
  id: Equals(LiveKit.Proto.RegisterWorkerRequest)
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: Equals(RegisterWorkerRequest)
  nameWithType: RegisterWorkerRequest.Equals(RegisterWorkerRequest)
  fullName: LiveKit.Proto.RegisterWorkerRequest.Equals(LiveKit.Proto.RegisterWorkerRequest)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3056
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(RegisterWorkerRequest other)
    parameters:
    - id: other
      type: LiveKit.Proto.RegisterWorkerRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As RegisterWorkerRequest) As Boolean
  overload: LiveKit.Proto.RegisterWorkerRequest.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}.Equals(LiveKit.Proto.RegisterWorkerRequest)
- uid: LiveKit.Proto.RegisterWorkerRequest.GetHashCode
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RegisterWorkerRequest.GetHashCode()
  fullName: LiveKit.Proto.RegisterWorkerRequest.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3074
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.RegisterWorkerRequest.GetHashCode*
- uid: LiveKit.Proto.RegisterWorkerRequest.ToString
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.ToString
  id: ToString
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RegisterWorkerRequest.ToString()
  fullName: LiveKit.Proto.RegisterWorkerRequest.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3090
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.RegisterWorkerRequest.ToString*
- uid: LiveKit.Proto.RegisterWorkerRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: RegisterWorkerRequest.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.RegisterWorkerRequest.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3096
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.RegisterWorkerRequest.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.RegisterWorkerRequest.CalculateSize
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: RegisterWorkerRequest.CalculateSize()
  fullName: LiveKit.Proto.RegisterWorkerRequest.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3166
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.RegisterWorkerRequest.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.RegisterWorkerRequest.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  id: MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(RegisterWorkerRequest)
  nameWithType: RegisterWorkerRequest.MergeFrom(RegisterWorkerRequest)
  fullName: LiveKit.Proto.RegisterWorkerRequest.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3194
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(RegisterWorkerRequest other)
    parameters:
    - id: other
      type: LiveKit.Proto.RegisterWorkerRequest
    content.vb: Public Sub MergeFrom(other As RegisterWorkerRequest)
  overload: LiveKit.Proto.RegisterWorkerRequest.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
- uid: LiveKit.Proto.RegisterWorkerRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.RegisterWorkerRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.RegisterWorkerRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: RegisterWorkerRequest.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.RegisterWorkerRequest.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitAgent.cs
    startLine: 3224
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.RegisterWorkerRequest.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.RegisterWorkerRequest.html
  name: IMessage<RegisterWorkerRequest>
  nameWithType: IMessage<RegisterWorkerRequest>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.RegisterWorkerRequest>
  nameWithType.vb: IMessage(Of RegisterWorkerRequest)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.RegisterWorkerRequest)
  name.vb: IMessage(Of RegisterWorkerRequest)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}
  commentId: T:System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<RegisterWorkerRequest>
  nameWithType: IEquatable<RegisterWorkerRequest>
  fullName: System.IEquatable<LiveKit.Proto.RegisterWorkerRequest>
  nameWithType.vb: IEquatable(Of RegisterWorkerRequest)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.RegisterWorkerRequest)
  name.vb: IEquatable(Of RegisterWorkerRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.RegisterWorkerRequest.html
  name: IDeepCloneable<RegisterWorkerRequest>
  nameWithType: IDeepCloneable<RegisterWorkerRequest>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.RegisterWorkerRequest>
  nameWithType.vb: IDeepCloneable(Of RegisterWorkerRequest)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.RegisterWorkerRequest)
  name.vb: IDeepCloneable(Of RegisterWorkerRequest)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.RegisterWorkerRequest.Parser*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.Parser
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_Parser
  name: Parser
  nameWithType: RegisterWorkerRequest.Parser
  fullName: LiveKit.Proto.RegisterWorkerRequest.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.RegisterWorkerRequest}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.RegisterWorkerRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.RegisterWorkerRequest.html
  name: MessageParser<RegisterWorkerRequest>
  nameWithType: MessageParser<RegisterWorkerRequest>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.RegisterWorkerRequest>
  nameWithType.vb: MessageParser(Of RegisterWorkerRequest)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.RegisterWorkerRequest)
  name.vb: MessageParser(Of RegisterWorkerRequest)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.RegisterWorkerRequest.Descriptor*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.Descriptor
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_Descriptor
  name: Descriptor
  nameWithType: RegisterWorkerRequest.Descriptor
  fullName: LiveKit.Proto.RegisterWorkerRequest.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.RegisterWorkerRequest.#ctor*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.#ctor
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest__ctor
  name: RegisterWorkerRequest
  nameWithType: RegisterWorkerRequest.RegisterWorkerRequest
  fullName: LiveKit.Proto.RegisterWorkerRequest.RegisterWorkerRequest
  nameWithType.vb: RegisterWorkerRequest.New
  fullName.vb: LiveKit.Proto.RegisterWorkerRequest.New
  name.vb: New
- uid: LiveKit.Proto.RegisterWorkerRequest
  commentId: T:LiveKit.Proto.RegisterWorkerRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.RegisterWorkerRequest.html
  name: RegisterWorkerRequest
  nameWithType: RegisterWorkerRequest
  fullName: LiveKit.Proto.RegisterWorkerRequest
- uid: LiveKit.Proto.RegisterWorkerRequest.Clone*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.Clone
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_Clone
  name: Clone
  nameWithType: RegisterWorkerRequest.Clone
  fullName: LiveKit.Proto.RegisterWorkerRequest.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<RegisterWorkerRequest>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.RegisterWorkerRequest>.Clone()
  nameWithType.vb: IDeepCloneable(Of RegisterWorkerRequest).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.RegisterWorkerRequest).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.RegisterWorkerRequest}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.RegisterWorkerRequest.Type*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.Type
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_Type
  name: Type
  nameWithType: RegisterWorkerRequest.Type
  fullName: LiveKit.Proto.RegisterWorkerRequest.Type
- uid: LiveKit.Proto.JobType
  commentId: T:LiveKit.Proto.JobType
  parent: LiveKit.Proto
  href: LiveKit.Proto.JobType.html
  name: JobType
  nameWithType: JobType
  fullName: LiveKit.Proto.JobType
- uid: LiveKit.Proto.RegisterWorkerRequest.AgentName*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.AgentName
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_AgentName
  name: AgentName
  nameWithType: RegisterWorkerRequest.AgentName
  fullName: LiveKit.Proto.RegisterWorkerRequest.AgentName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.RegisterWorkerRequest.Version*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.Version
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_Version
  name: Version
  nameWithType: RegisterWorkerRequest.Version
  fullName: LiveKit.Proto.RegisterWorkerRequest.Version
- uid: LiveKit.Proto.RegisterWorkerRequest.PingInterval*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.PingInterval
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_PingInterval
  name: PingInterval
  nameWithType: RegisterWorkerRequest.PingInterval
  fullName: LiveKit.Proto.RegisterWorkerRequest.PingInterval
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: LiveKit.Proto.RegisterWorkerRequest.Namespace*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.Namespace
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_Namespace
  name: Namespace
  nameWithType: RegisterWorkerRequest.Namespace
  fullName: LiveKit.Proto.RegisterWorkerRequest.Namespace
- uid: LiveKit.Proto.RegisterWorkerRequest.HasNamespace*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.HasNamespace
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_HasNamespace
  name: HasNamespace
  nameWithType: RegisterWorkerRequest.HasNamespace
  fullName: LiveKit.Proto.RegisterWorkerRequest.HasNamespace
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiveKit.Proto.RegisterWorkerRequest.ClearNamespace*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.ClearNamespace
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_ClearNamespace
  name: ClearNamespace
  nameWithType: RegisterWorkerRequest.ClearNamespace
  fullName: LiveKit.Proto.RegisterWorkerRequest.ClearNamespace
- uid: LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_AllowedPermissions
  name: AllowedPermissions
  nameWithType: RegisterWorkerRequest.AllowedPermissions
  fullName: LiveKit.Proto.RegisterWorkerRequest.AllowedPermissions
- uid: LiveKit.Proto.ParticipantPermission
  commentId: T:LiveKit.Proto.ParticipantPermission
  parent: LiveKit.Proto
  href: LiveKit.Proto.ParticipantPermission.html
  name: ParticipantPermission
  nameWithType: ParticipantPermission
  fullName: LiveKit.Proto.ParticipantPermission
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.RegisterWorkerRequest.Equals*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.Equals
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_Equals_System_Object_
  name: Equals
  nameWithType: RegisterWorkerRequest.Equals
  fullName: LiveKit.Proto.RegisterWorkerRequest.Equals
- uid: System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}.Equals(LiveKit.Proto.RegisterWorkerRequest)
  commentId: M:System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}.Equals(LiveKit.Proto.RegisterWorkerRequest)
  parent: System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(RegisterWorkerRequest)
  nameWithType: IEquatable<RegisterWorkerRequest>.Equals(RegisterWorkerRequest)
  fullName: System.IEquatable<LiveKit.Proto.RegisterWorkerRequest>.Equals(LiveKit.Proto.RegisterWorkerRequest)
  nameWithType.vb: IEquatable(Of RegisterWorkerRequest).Equals(RegisterWorkerRequest)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.RegisterWorkerRequest).Equals(LiveKit.Proto.RegisterWorkerRequest)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}.Equals(LiveKit.Proto.RegisterWorkerRequest)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.RegisterWorkerRequest}.Equals(LiveKit.Proto.RegisterWorkerRequest)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.RegisterWorkerRequest.GetHashCode*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.GetHashCode
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_GetHashCode
  name: GetHashCode
  nameWithType: RegisterWorkerRequest.GetHashCode
  fullName: LiveKit.Proto.RegisterWorkerRequest.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.RegisterWorkerRequest.ToString*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.ToString
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_ToString
  name: ToString
  nameWithType: RegisterWorkerRequest.ToString
  fullName: LiveKit.Proto.RegisterWorkerRequest.ToString
- uid: LiveKit.Proto.RegisterWorkerRequest.WriteTo*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.WriteTo
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: RegisterWorkerRequest.WriteTo
  fullName: LiveKit.Proto.RegisterWorkerRequest.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.RegisterWorkerRequest.CalculateSize*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.CalculateSize
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_CalculateSize
  name: CalculateSize
  nameWithType: RegisterWorkerRequest.CalculateSize
  fullName: LiveKit.Proto.RegisterWorkerRequest.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.RegisterWorkerRequest.MergeFrom*
  commentId: Overload:LiveKit.Proto.RegisterWorkerRequest.MergeFrom
  href: LiveKit.Proto.RegisterWorkerRequest.html#LiveKit_Proto_RegisterWorkerRequest_MergeFrom_LiveKit_Proto_RegisterWorkerRequest_
  name: MergeFrom
  nameWithType: RegisterWorkerRequest.MergeFrom
  fullName: LiveKit.Proto.RegisterWorkerRequest.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.RegisterWorkerRequest.html
  name: MergeFrom(RegisterWorkerRequest)
  nameWithType: IMessage<RegisterWorkerRequest>.MergeFrom(RegisterWorkerRequest)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.RegisterWorkerRequest>.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  nameWithType.vb: IMessage(Of RegisterWorkerRequest).MergeFrom(RegisterWorkerRequest)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.RegisterWorkerRequest).MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.RegisterWorkerRequest}.MergeFrom(LiveKit.Proto.RegisterWorkerRequest)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.RegisterWorkerRequest
    name: RegisterWorkerRequest
    href: LiveKit.Proto.RegisterWorkerRequest.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
