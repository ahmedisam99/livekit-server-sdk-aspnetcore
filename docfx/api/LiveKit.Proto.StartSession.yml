### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.StartSession
  commentId: T:LiveKit.Proto.StartSession
  id: StartSession
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.StartSession.#ctor
  - LiveKit.Proto.StartSession.#ctor(LiveKit.Proto.StartSession)
  - LiveKit.Proto.StartSession.AdaptiveStream
  - LiveKit.Proto.StartSession.AdaptiveStreamFieldNumber
  - LiveKit.Proto.StartSession.AddTrackRequests
  - LiveKit.Proto.StartSession.AddTrackRequestsFieldNumber
  - LiveKit.Proto.StartSession.AutoSubscribe
  - LiveKit.Proto.StartSession.AutoSubscribeFieldNumber
  - LiveKit.Proto.StartSession.CalculateSize
  - LiveKit.Proto.StartSession.ClearSubscriberAllowPause
  - LiveKit.Proto.StartSession.Client
  - LiveKit.Proto.StartSession.ClientFieldNumber
  - LiveKit.Proto.StartSession.Clone
  - LiveKit.Proto.StartSession.ConnectionId
  - LiveKit.Proto.StartSession.ConnectionIdFieldNumber
  - LiveKit.Proto.StartSession.CreateRoom
  - LiveKit.Proto.StartSession.CreateRoomFieldNumber
  - LiveKit.Proto.StartSession.Descriptor
  - LiveKit.Proto.StartSession.DisableIceLite
  - LiveKit.Proto.StartSession.DisableIceLiteFieldNumber
  - LiveKit.Proto.StartSession.Equals(LiveKit.Proto.StartSession)
  - LiveKit.Proto.StartSession.Equals(System.Object)
  - LiveKit.Proto.StartSession.GetHashCode
  - LiveKit.Proto.StartSession.GrantsJson
  - LiveKit.Proto.StartSession.GrantsJsonFieldNumber
  - LiveKit.Proto.StartSession.HasSubscriberAllowPause
  - LiveKit.Proto.StartSession.Hidden
  - LiveKit.Proto.StartSession.HiddenFieldNumber
  - LiveKit.Proto.StartSession.Identity
  - LiveKit.Proto.StartSession.IdentityFieldNumber
  - LiveKit.Proto.StartSession.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.StartSession.MergeFrom(LiveKit.Proto.StartSession)
  - LiveKit.Proto.StartSession.Name
  - LiveKit.Proto.StartSession.NameFieldNumber
  - LiveKit.Proto.StartSession.Parser
  - LiveKit.Proto.StartSession.ParticipantId
  - LiveKit.Proto.StartSession.ParticipantIdFieldNumber
  - LiveKit.Proto.StartSession.PublisherOffer
  - LiveKit.Proto.StartSession.PublisherOfferFieldNumber
  - LiveKit.Proto.StartSession.Reconnect
  - LiveKit.Proto.StartSession.ReconnectFieldNumber
  - LiveKit.Proto.StartSession.ReconnectReason
  - LiveKit.Proto.StartSession.ReconnectReasonFieldNumber
  - LiveKit.Proto.StartSession.Recorder
  - LiveKit.Proto.StartSession.RecorderFieldNumber
  - LiveKit.Proto.StartSession.RoomName
  - LiveKit.Proto.StartSession.RoomNameFieldNumber
  - LiveKit.Proto.StartSession.SubscriberAllowPause
  - LiveKit.Proto.StartSession.SubscriberAllowPauseFieldNumber
  - LiveKit.Proto.StartSession.SyncState
  - LiveKit.Proto.StartSession.SyncStateFieldNumber
  - LiveKit.Proto.StartSession.ToString
  - LiveKit.Proto.StartSession.UseSinglePeerConnection
  - LiveKit.Proto.StartSession.UseSinglePeerConnectionFieldNumber
  - LiveKit.Proto.StartSession.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: StartSession
  nameWithType: StartSession
  fullName: LiveKit.Proto.StartSession
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: StartSession
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3642
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: 'public sealed class StartSession : IMessage<StartSession>, IEquatable<StartSession>, IDeepCloneable<StartSession>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class StartSession Implements IMessage(Of StartSession), IEquatable(Of StartSession), IDeepCloneable(Of StartSession), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.StartSession}
  - System.IEquatable{LiveKit.Proto.StartSession}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.StartSession.Parser
  commentId: P:LiveKit.Proto.StartSession.Parser
  id: Parser
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: StartSession.Parser
  fullName: LiveKit.Proto.StartSession.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3651
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<StartSession> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.StartSession}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of StartSession)
  overload: LiveKit.Proto.StartSession.Parser*
- uid: LiveKit.Proto.StartSession.Descriptor
  commentId: P:LiveKit.Proto.StartSession.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: StartSession.Descriptor
  fullName: LiveKit.Proto.StartSession.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3655
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.StartSession.Descriptor*
- uid: LiveKit.Proto.StartSession.#ctor
  commentId: M:LiveKit.Proto.StartSession.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: StartSession()
  nameWithType: StartSession.StartSession()
  fullName: LiveKit.Proto.StartSession.StartSession()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3667
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public StartSession()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.StartSession.#ctor*
  nameWithType.vb: StartSession.New()
  fullName.vb: LiveKit.Proto.StartSession.New()
  name.vb: New()
- uid: LiveKit.Proto.StartSession.#ctor(LiveKit.Proto.StartSession)
  commentId: M:LiveKit.Proto.StartSession.#ctor(LiveKit.Proto.StartSession)
  id: '#ctor(LiveKit.Proto.StartSession)'
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: StartSession(StartSession)
  nameWithType: StartSession.StartSession(StartSession)
  fullName: LiveKit.Proto.StartSession.StartSession(LiveKit.Proto.StartSession)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3675
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public StartSession(StartSession other)
    parameters:
    - id: other
      type: LiveKit.Proto.StartSession
    content.vb: Public Sub New(other As StartSession)
  overload: LiveKit.Proto.StartSession.#ctor*
  nameWithType.vb: StartSession.New(StartSession)
  fullName.vb: LiveKit.Proto.StartSession.New(LiveKit.Proto.StartSession)
  name.vb: New(StartSession)
- uid: LiveKit.Proto.StartSession.Clone
  commentId: M:LiveKit.Proto.StartSession.Clone
  id: Clone
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: StartSession.Clone()
  fullName: LiveKit.Proto.StartSession.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3702
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public StartSession Clone()
    return:
      type: LiveKit.Proto.StartSession
      description: A deep clone of this object.
    content.vb: Public Function Clone() As StartSession
  overload: LiveKit.Proto.StartSession.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}.Clone
- uid: LiveKit.Proto.StartSession.RoomNameFieldNumber
  commentId: F:LiveKit.Proto.StartSession.RoomNameFieldNumber
  id: RoomNameFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: RoomNameFieldNumber
  nameWithType: StartSession.RoomNameFieldNumber
  fullName: LiveKit.Proto.StartSession.RoomNameFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RoomNameFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3709
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "room_name" field.
  example: []
  syntax:
    content: public const int RoomNameFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RoomNameFieldNumber As Integer = 1
- uid: LiveKit.Proto.StartSession.RoomName
  commentId: P:LiveKit.Proto.StartSession.RoomName
  id: RoomName
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: RoomName
  nameWithType: StartSession.RoomName
  fullName: LiveKit.Proto.StartSession.RoomName
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RoomName
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3711
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string RoomName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RoomName As String
  overload: LiveKit.Proto.StartSession.RoomName*
- uid: LiveKit.Proto.StartSession.IdentityFieldNumber
  commentId: F:LiveKit.Proto.StartSession.IdentityFieldNumber
  id: IdentityFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: IdentityFieldNumber
  nameWithType: StartSession.IdentityFieldNumber
  fullName: LiveKit.Proto.StartSession.IdentityFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IdentityFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3721
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "identity" field.
  example: []
  syntax:
    content: public const int IdentityFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const IdentityFieldNumber As Integer = 2
- uid: LiveKit.Proto.StartSession.Identity
  commentId: P:LiveKit.Proto.StartSession.Identity
  id: Identity
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: StartSession.Identity
  fullName: LiveKit.Proto.StartSession.Identity
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Identity
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3723
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Identity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Identity As String
  overload: LiveKit.Proto.StartSession.Identity*
- uid: LiveKit.Proto.StartSession.ConnectionIdFieldNumber
  commentId: F:LiveKit.Proto.StartSession.ConnectionIdFieldNumber
  id: ConnectionIdFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ConnectionIdFieldNumber
  nameWithType: StartSession.ConnectionIdFieldNumber
  fullName: LiveKit.Proto.StartSession.ConnectionIdFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ConnectionIdFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3733
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "connection_id" field.
  example: []
  syntax:
    content: public const int ConnectionIdFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ConnectionIdFieldNumber As Integer = 3
- uid: LiveKit.Proto.StartSession.ConnectionId
  commentId: P:LiveKit.Proto.StartSession.ConnectionId
  id: ConnectionId
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: StartSession.ConnectionId
  fullName: LiveKit.Proto.StartSession.ConnectionId
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ConnectionId
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3735
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string ConnectionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConnectionId As String
  overload: LiveKit.Proto.StartSession.ConnectionId*
- uid: LiveKit.Proto.StartSession.ReconnectFieldNumber
  commentId: F:LiveKit.Proto.StartSession.ReconnectFieldNumber
  id: ReconnectFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ReconnectFieldNumber
  nameWithType: StartSession.ReconnectFieldNumber
  fullName: LiveKit.Proto.StartSession.ReconnectFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ReconnectFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3745
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "reconnect" field.
  example: []
  syntax:
    content: public const int ReconnectFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const ReconnectFieldNumber As Integer = 4
- uid: LiveKit.Proto.StartSession.Reconnect
  commentId: P:LiveKit.Proto.StartSession.Reconnect
  id: Reconnect
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Reconnect
  nameWithType: StartSession.Reconnect
  fullName: LiveKit.Proto.StartSession.Reconnect
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Reconnect
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3750
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: if a client is reconnecting (i.e. resume instead of restart)
  example: []
  syntax:
    content: public bool Reconnect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Reconnect As Boolean
  overload: LiveKit.Proto.StartSession.Reconnect*
- uid: LiveKit.Proto.StartSession.AutoSubscribeFieldNumber
  commentId: F:LiveKit.Proto.StartSession.AutoSubscribeFieldNumber
  id: AutoSubscribeFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: AutoSubscribeFieldNumber
  nameWithType: StartSession.AutoSubscribeFieldNumber
  fullName: LiveKit.Proto.StartSession.AutoSubscribeFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AutoSubscribeFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3760
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "auto_subscribe" field.
  example: []
  syntax:
    content: public const int AutoSubscribeFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const AutoSubscribeFieldNumber As Integer = 9
- uid: LiveKit.Proto.StartSession.AutoSubscribe
  commentId: P:LiveKit.Proto.StartSession.AutoSubscribe
  id: AutoSubscribe
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: AutoSubscribe
  nameWithType: StartSession.AutoSubscribe
  fullName: LiveKit.Proto.StartSession.AutoSubscribe
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AutoSubscribe
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3762
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public bool AutoSubscribe { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutoSubscribe As Boolean
  overload: LiveKit.Proto.StartSession.AutoSubscribe*
- uid: LiveKit.Proto.StartSession.HiddenFieldNumber
  commentId: F:LiveKit.Proto.StartSession.HiddenFieldNumber
  id: HiddenFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: HiddenFieldNumber
  nameWithType: StartSession.HiddenFieldNumber
  fullName: LiveKit.Proto.StartSession.HiddenFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HiddenFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3772
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "hidden" field.
  example: []
  syntax:
    content: public const int HiddenFieldNumber = 10
    return:
      type: System.Int32
    content.vb: Public Const HiddenFieldNumber As Integer = 10
- uid: LiveKit.Proto.StartSession.Hidden
  commentId: P:LiveKit.Proto.StartSession.Hidden
  id: Hidden
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Hidden
  nameWithType: StartSession.Hidden
  fullName: LiveKit.Proto.StartSession.Hidden
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Hidden
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3774
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [Obsolete]

      public bool Hidden { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete>

      Public Property Hidden As Boolean
  overload: LiveKit.Proto.StartSession.Hidden*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.StartSession.ClientFieldNumber
  commentId: F:LiveKit.Proto.StartSession.ClientFieldNumber
  id: ClientFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ClientFieldNumber
  nameWithType: StartSession.ClientFieldNumber
  fullName: LiveKit.Proto.StartSession.ClientFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClientFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3785
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "client" field.
  example: []
  syntax:
    content: public const int ClientFieldNumber = 11
    return:
      type: System.Int32
    content.vb: Public Const ClientFieldNumber As Integer = 11
- uid: LiveKit.Proto.StartSession.Client
  commentId: P:LiveKit.Proto.StartSession.Client
  id: Client
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: StartSession.Client
  fullName: LiveKit.Proto.StartSession.Client
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Client
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3787
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ClientInfo Client { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.ClientInfo
    content.vb: Public Property Client As ClientInfo
  overload: LiveKit.Proto.StartSession.Client*
- uid: LiveKit.Proto.StartSession.RecorderFieldNumber
  commentId: F:LiveKit.Proto.StartSession.RecorderFieldNumber
  id: RecorderFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: RecorderFieldNumber
  nameWithType: StartSession.RecorderFieldNumber
  fullName: LiveKit.Proto.StartSession.RecorderFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RecorderFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3797
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "recorder" field.
  example: []
  syntax:
    content: public const int RecorderFieldNumber = 12
    return:
      type: System.Int32
    content.vb: Public Const RecorderFieldNumber As Integer = 12
- uid: LiveKit.Proto.StartSession.Recorder
  commentId: P:LiveKit.Proto.StartSession.Recorder
  id: Recorder
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Recorder
  nameWithType: StartSession.Recorder
  fullName: LiveKit.Proto.StartSession.Recorder
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Recorder
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3799
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [Obsolete]

      public bool Recorder { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete>

      Public Property Recorder As Boolean
  overload: LiveKit.Proto.StartSession.Recorder*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.StartSession.NameFieldNumber
  commentId: F:LiveKit.Proto.StartSession.NameFieldNumber
  id: NameFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: NameFieldNumber
  nameWithType: StartSession.NameFieldNumber
  fullName: LiveKit.Proto.StartSession.NameFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NameFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3810
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "name" field.
  example: []
  syntax:
    content: public const int NameFieldNumber = 13
    return:
      type: System.Int32
    content.vb: Public Const NameFieldNumber As Integer = 13
- uid: LiveKit.Proto.StartSession.Name
  commentId: P:LiveKit.Proto.StartSession.Name
  id: Name
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StartSession.Name
  fullName: LiveKit.Proto.StartSession.Name
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Name
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3812
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: LiveKit.Proto.StartSession.Name*
- uid: LiveKit.Proto.StartSession.GrantsJsonFieldNumber
  commentId: F:LiveKit.Proto.StartSession.GrantsJsonFieldNumber
  id: GrantsJsonFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: GrantsJsonFieldNumber
  nameWithType: StartSession.GrantsJsonFieldNumber
  fullName: LiveKit.Proto.StartSession.GrantsJsonFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GrantsJsonFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3822
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "grants_json" field.
  example: []
  syntax:
    content: public const int GrantsJsonFieldNumber = 14
    return:
      type: System.Int32
    content.vb: Public Const GrantsJsonFieldNumber As Integer = 14
- uid: LiveKit.Proto.StartSession.GrantsJson
  commentId: P:LiveKit.Proto.StartSession.GrantsJson
  id: GrantsJson
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: GrantsJson
  nameWithType: StartSession.GrantsJson
  fullName: LiveKit.Proto.StartSession.GrantsJson
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GrantsJson
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3827
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: A user's ClaimGrants serialized in JSON
  example: []
  syntax:
    content: public string GrantsJson { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GrantsJson As String
  overload: LiveKit.Proto.StartSession.GrantsJson*
- uid: LiveKit.Proto.StartSession.AdaptiveStreamFieldNumber
  commentId: F:LiveKit.Proto.StartSession.AdaptiveStreamFieldNumber
  id: AdaptiveStreamFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: AdaptiveStreamFieldNumber
  nameWithType: StartSession.AdaptiveStreamFieldNumber
  fullName: LiveKit.Proto.StartSession.AdaptiveStreamFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AdaptiveStreamFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3837
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "adaptive_stream" field.
  example: []
  syntax:
    content: public const int AdaptiveStreamFieldNumber = 15
    return:
      type: System.Int32
    content.vb: Public Const AdaptiveStreamFieldNumber As Integer = 15
- uid: LiveKit.Proto.StartSession.AdaptiveStream
  commentId: P:LiveKit.Proto.StartSession.AdaptiveStream
  id: AdaptiveStream
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: AdaptiveStream
  nameWithType: StartSession.AdaptiveStream
  fullName: LiveKit.Proto.StartSession.AdaptiveStream
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AdaptiveStream
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3839
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public bool AdaptiveStream { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AdaptiveStream As Boolean
  overload: LiveKit.Proto.StartSession.AdaptiveStream*
- uid: LiveKit.Proto.StartSession.ParticipantIdFieldNumber
  commentId: F:LiveKit.Proto.StartSession.ParticipantIdFieldNumber
  id: ParticipantIdFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ParticipantIdFieldNumber
  nameWithType: StartSession.ParticipantIdFieldNumber
  fullName: LiveKit.Proto.StartSession.ParticipantIdFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ParticipantIdFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3849
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "participant_id" field.
  example: []
  syntax:
    content: public const int ParticipantIdFieldNumber = 16
    return:
      type: System.Int32
    content.vb: Public Const ParticipantIdFieldNumber As Integer = 16
- uid: LiveKit.Proto.StartSession.ParticipantId
  commentId: P:LiveKit.Proto.StartSession.ParticipantId
  id: ParticipantId
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ParticipantId
  nameWithType: StartSession.ParticipantId
  fullName: LiveKit.Proto.StartSession.ParticipantId
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ParticipantId
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3854
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: if reconnect, client will set current sid
  example: []
  syntax:
    content: public string ParticipantId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParticipantId As String
  overload: LiveKit.Proto.StartSession.ParticipantId*
- uid: LiveKit.Proto.StartSession.ReconnectReasonFieldNumber
  commentId: F:LiveKit.Proto.StartSession.ReconnectReasonFieldNumber
  id: ReconnectReasonFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ReconnectReasonFieldNumber
  nameWithType: StartSession.ReconnectReasonFieldNumber
  fullName: LiveKit.Proto.StartSession.ReconnectReasonFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ReconnectReasonFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3864
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "reconnect_reason" field.
  example: []
  syntax:
    content: public const int ReconnectReasonFieldNumber = 17
    return:
      type: System.Int32
    content.vb: Public Const ReconnectReasonFieldNumber As Integer = 17
- uid: LiveKit.Proto.StartSession.ReconnectReason
  commentId: P:LiveKit.Proto.StartSession.ReconnectReason
  id: ReconnectReason
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ReconnectReason
  nameWithType: StartSession.ReconnectReason
  fullName: LiveKit.Proto.StartSession.ReconnectReason
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ReconnectReason
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3866
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public ReconnectReason ReconnectReason { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.ReconnectReason
    content.vb: Public Property ReconnectReason As ReconnectReason
  overload: LiveKit.Proto.StartSession.ReconnectReason*
- uid: LiveKit.Proto.StartSession.SubscriberAllowPauseFieldNumber
  commentId: F:LiveKit.Proto.StartSession.SubscriberAllowPauseFieldNumber
  id: SubscriberAllowPauseFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: SubscriberAllowPauseFieldNumber
  nameWithType: StartSession.SubscriberAllowPauseFieldNumber
  fullName: LiveKit.Proto.StartSession.SubscriberAllowPauseFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SubscriberAllowPauseFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3876
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "subscriber_allow_pause" field.
  example: []
  syntax:
    content: public const int SubscriberAllowPauseFieldNumber = 18
    return:
      type: System.Int32
    content.vb: Public Const SubscriberAllowPauseFieldNumber As Integer = 18
- uid: LiveKit.Proto.StartSession.SubscriberAllowPause
  commentId: P:LiveKit.Proto.StartSession.SubscriberAllowPause
  id: SubscriberAllowPause
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: SubscriberAllowPause
  nameWithType: StartSession.SubscriberAllowPause
  fullName: LiveKit.Proto.StartSession.SubscriberAllowPause
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SubscriberAllowPause
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3880
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public bool SubscriberAllowPause { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SubscriberAllowPause As Boolean
  overload: LiveKit.Proto.StartSession.SubscriberAllowPause*
- uid: LiveKit.Proto.StartSession.HasSubscriberAllowPause
  commentId: P:LiveKit.Proto.StartSession.HasSubscriberAllowPause
  id: HasSubscriberAllowPause
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: HasSubscriberAllowPause
  nameWithType: StartSession.HasSubscriberAllowPause
  fullName: LiveKit.Proto.StartSession.HasSubscriberAllowPause
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: HasSubscriberAllowPause
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3890
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Gets whether the "subscriber_allow_pause" field is set
  example: []
  syntax:
    content: public bool HasSubscriberAllowPause { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasSubscriberAllowPause As Boolean
  overload: LiveKit.Proto.StartSession.HasSubscriberAllowPause*
- uid: LiveKit.Proto.StartSession.ClearSubscriberAllowPause
  commentId: M:LiveKit.Proto.StartSession.ClearSubscriberAllowPause
  id: ClearSubscriberAllowPause
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ClearSubscriberAllowPause()
  nameWithType: StartSession.ClearSubscriberAllowPause()
  fullName: LiveKit.Proto.StartSession.ClearSubscriberAllowPause()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ClearSubscriberAllowPause
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3896
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Clears the value of the "subscriber_allow_pause" field
  example: []
  syntax:
    content: public void ClearSubscriberAllowPause()
    content.vb: Public Sub ClearSubscriberAllowPause()
  overload: LiveKit.Proto.StartSession.ClearSubscriberAllowPause*
- uid: LiveKit.Proto.StartSession.DisableIceLiteFieldNumber
  commentId: F:LiveKit.Proto.StartSession.DisableIceLiteFieldNumber
  id: DisableIceLiteFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: DisableIceLiteFieldNumber
  nameWithType: StartSession.DisableIceLiteFieldNumber
  fullName: LiveKit.Proto.StartSession.DisableIceLiteFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: DisableIceLiteFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3903
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "disable_ice_lite" field.
  example: []
  syntax:
    content: public const int DisableIceLiteFieldNumber = 19
    return:
      type: System.Int32
    content.vb: Public Const DisableIceLiteFieldNumber As Integer = 19
- uid: LiveKit.Proto.StartSession.DisableIceLite
  commentId: P:LiveKit.Proto.StartSession.DisableIceLite
  id: DisableIceLite
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: DisableIceLite
  nameWithType: StartSession.DisableIceLite
  fullName: LiveKit.Proto.StartSession.DisableIceLite
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: DisableIceLite
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3905
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public bool DisableIceLite { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DisableIceLite As Boolean
  overload: LiveKit.Proto.StartSession.DisableIceLite*
- uid: LiveKit.Proto.StartSession.CreateRoomFieldNumber
  commentId: F:LiveKit.Proto.StartSession.CreateRoomFieldNumber
  id: CreateRoomFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: CreateRoomFieldNumber
  nameWithType: StartSession.CreateRoomFieldNumber
  fullName: LiveKit.Proto.StartSession.CreateRoomFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CreateRoomFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3915
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "create_room" field.
  example: []
  syntax:
    content: public const int CreateRoomFieldNumber = 20
    return:
      type: System.Int32
    content.vb: Public Const CreateRoomFieldNumber As Integer = 20
- uid: LiveKit.Proto.StartSession.CreateRoom
  commentId: P:LiveKit.Proto.StartSession.CreateRoom
  id: CreateRoom
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: CreateRoom
  nameWithType: StartSession.CreateRoom
  fullName: LiveKit.Proto.StartSession.CreateRoom
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CreateRoom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3917
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public CreateRoomRequest CreateRoom { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.CreateRoomRequest
    content.vb: Public Property CreateRoom As CreateRoomRequest
  overload: LiveKit.Proto.StartSession.CreateRoom*
- uid: LiveKit.Proto.StartSession.AddTrackRequestsFieldNumber
  commentId: F:LiveKit.Proto.StartSession.AddTrackRequestsFieldNumber
  id: AddTrackRequestsFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: AddTrackRequestsFieldNumber
  nameWithType: StartSession.AddTrackRequestsFieldNumber
  fullName: LiveKit.Proto.StartSession.AddTrackRequestsFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AddTrackRequestsFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3927
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "add_track_requests" field.
  example: []
  syntax:
    content: public const int AddTrackRequestsFieldNumber = 21
    return:
      type: System.Int32
    content.vb: Public Const AddTrackRequestsFieldNumber As Integer = 21
- uid: LiveKit.Proto.StartSession.AddTrackRequests
  commentId: P:LiveKit.Proto.StartSession.AddTrackRequests
  id: AddTrackRequests
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: AddTrackRequests
  nameWithType: StartSession.AddTrackRequests
  fullName: LiveKit.Proto.StartSession.AddTrackRequests
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: AddTrackRequests
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3931
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public RepeatedField<AddTrackRequest> AddTrackRequests { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.AddTrackRequest}
    content.vb: Public ReadOnly Property AddTrackRequests As RepeatedField(Of AddTrackRequest)
  overload: LiveKit.Proto.StartSession.AddTrackRequests*
- uid: LiveKit.Proto.StartSession.PublisherOfferFieldNumber
  commentId: F:LiveKit.Proto.StartSession.PublisherOfferFieldNumber
  id: PublisherOfferFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: PublisherOfferFieldNumber
  nameWithType: StartSession.PublisherOfferFieldNumber
  fullName: LiveKit.Proto.StartSession.PublisherOfferFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PublisherOfferFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3938
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "publisher_offer" field.
  example: []
  syntax:
    content: public const int PublisherOfferFieldNumber = 22
    return:
      type: System.Int32
    content.vb: Public Const PublisherOfferFieldNumber As Integer = 22
- uid: LiveKit.Proto.StartSession.PublisherOffer
  commentId: P:LiveKit.Proto.StartSession.PublisherOffer
  id: PublisherOffer
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: PublisherOffer
  nameWithType: StartSession.PublisherOffer
  fullName: LiveKit.Proto.StartSession.PublisherOffer
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PublisherOffer
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3940
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public SessionDescription PublisherOffer { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.SessionDescription
    content.vb: Public Property PublisherOffer As SessionDescription
  overload: LiveKit.Proto.StartSession.PublisherOffer*
- uid: LiveKit.Proto.StartSession.SyncStateFieldNumber
  commentId: F:LiveKit.Proto.StartSession.SyncStateFieldNumber
  id: SyncStateFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: SyncStateFieldNumber
  nameWithType: StartSession.SyncStateFieldNumber
  fullName: LiveKit.Proto.StartSession.SyncStateFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SyncStateFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3950
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "sync_state" field.
  example: []
  syntax:
    content: public const int SyncStateFieldNumber = 23
    return:
      type: System.Int32
    content.vb: Public Const SyncStateFieldNumber As Integer = 23
- uid: LiveKit.Proto.StartSession.SyncState
  commentId: P:LiveKit.Proto.StartSession.SyncState
  id: SyncState
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: SyncState
  nameWithType: StartSession.SyncState
  fullName: LiveKit.Proto.StartSession.SyncState
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SyncState
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3952
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public SyncState SyncState { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.SyncState
    content.vb: Public Property SyncState As SyncState
  overload: LiveKit.Proto.StartSession.SyncState*
- uid: LiveKit.Proto.StartSession.UseSinglePeerConnectionFieldNumber
  commentId: F:LiveKit.Proto.StartSession.UseSinglePeerConnectionFieldNumber
  id: UseSinglePeerConnectionFieldNumber
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: UseSinglePeerConnectionFieldNumber
  nameWithType: StartSession.UseSinglePeerConnectionFieldNumber
  fullName: LiveKit.Proto.StartSession.UseSinglePeerConnectionFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: UseSinglePeerConnectionFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3962
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "use_single_peer_connection" field.
  example: []
  syntax:
    content: public const int UseSinglePeerConnectionFieldNumber = 24
    return:
      type: System.Int32
    content.vb: Public Const UseSinglePeerConnectionFieldNumber As Integer = 24
- uid: LiveKit.Proto.StartSession.UseSinglePeerConnection
  commentId: P:LiveKit.Proto.StartSession.UseSinglePeerConnection
  id: UseSinglePeerConnection
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: UseSinglePeerConnection
  nameWithType: StartSession.UseSinglePeerConnection
  fullName: LiveKit.Proto.StartSession.UseSinglePeerConnection
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: UseSinglePeerConnection
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3964
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public bool UseSinglePeerConnection { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseSinglePeerConnection As Boolean
  overload: LiveKit.Proto.StartSession.UseSinglePeerConnection*
- uid: LiveKit.Proto.StartSession.Equals(System.Object)
  commentId: M:LiveKit.Proto.StartSession.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: StartSession.Equals(object)
  fullName: LiveKit.Proto.StartSession.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3973
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.StartSession.Equals*
  nameWithType.vb: StartSession.Equals(Object)
  fullName.vb: LiveKit.Proto.StartSession.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.StartSession.Equals(LiveKit.Proto.StartSession)
  commentId: M:LiveKit.Proto.StartSession.Equals(LiveKit.Proto.StartSession)
  id: Equals(LiveKit.Proto.StartSession)
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: Equals(StartSession)
  nameWithType: StartSession.Equals(StartSession)
  fullName: LiveKit.Proto.StartSession.Equals(LiveKit.Proto.StartSession)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 3979
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(StartSession other)
    parameters:
    - id: other
      type: LiveKit.Proto.StartSession
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As StartSession) As Boolean
  overload: LiveKit.Proto.StartSession.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.StartSession}.Equals(LiveKit.Proto.StartSession)
- uid: LiveKit.Proto.StartSession.GetHashCode
  commentId: M:LiveKit.Proto.StartSession.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: StartSession.GetHashCode()
  fullName: LiveKit.Proto.StartSession.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 4011
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.StartSession.GetHashCode*
- uid: LiveKit.Proto.StartSession.ToString
  commentId: M:LiveKit.Proto.StartSession.ToString
  id: ToString
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StartSession.ToString()
  fullName: LiveKit.Proto.StartSession.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 4041
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.StartSession.ToString*
- uid: LiveKit.Proto.StartSession.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.StartSession.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: StartSession.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.StartSession.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 4047
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.StartSession.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.StartSession.CalculateSize
  commentId: M:LiveKit.Proto.StartSession.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: StartSession.CalculateSize()
  fullName: LiveKit.Proto.StartSession.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 4223
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.StartSession.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.StartSession.MergeFrom(LiveKit.Proto.StartSession)
  commentId: M:LiveKit.Proto.StartSession.MergeFrom(LiveKit.Proto.StartSession)
  id: MergeFrom(LiveKit.Proto.StartSession)
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: MergeFrom(StartSession)
  nameWithType: StartSession.MergeFrom(StartSession)
  fullName: LiveKit.Proto.StartSession.MergeFrom(LiveKit.Proto.StartSession)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 4291
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(StartSession other)
    parameters:
    - id: other
      type: LiveKit.Proto.StartSession
    content.vb: Public Sub MergeFrom(other As StartSession)
  overload: LiveKit.Proto.StartSession.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.StartSession}.MergeFrom(LiveKit.Proto.StartSession)
- uid: LiveKit.Proto.StartSession.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.StartSession.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.StartSession
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: StartSession.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.StartSession.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitInternal.cs
    startLine: 4370
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.StartSession.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.StartSession}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.StartSession}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.StartSession.html
  name: IMessage<StartSession>
  nameWithType: IMessage<StartSession>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.StartSession>
  nameWithType.vb: IMessage(Of StartSession)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.StartSession)
  name.vb: IMessage(Of StartSession)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.StartSession}
  commentId: T:System.IEquatable{LiveKit.Proto.StartSession}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<StartSession>
  nameWithType: IEquatable<StartSession>
  fullName: System.IEquatable<LiveKit.Proto.StartSession>
  nameWithType.vb: IEquatable(Of StartSession)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.StartSession)
  name.vb: IEquatable(Of StartSession)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.StartSession.html
  name: IDeepCloneable<StartSession>
  nameWithType: IDeepCloneable<StartSession>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.StartSession>
  nameWithType.vb: IDeepCloneable(Of StartSession)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.StartSession)
  name.vb: IDeepCloneable(Of StartSession)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.StartSession.Parser*
  commentId: Overload:LiveKit.Proto.StartSession.Parser
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Parser
  name: Parser
  nameWithType: StartSession.Parser
  fullName: LiveKit.Proto.StartSession.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.StartSession}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.StartSession}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.StartSession.html
  name: MessageParser<StartSession>
  nameWithType: MessageParser<StartSession>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.StartSession>
  nameWithType.vb: MessageParser(Of StartSession)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.StartSession)
  name.vb: MessageParser(Of StartSession)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.StartSession.Descriptor*
  commentId: Overload:LiveKit.Proto.StartSession.Descriptor
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Descriptor
  name: Descriptor
  nameWithType: StartSession.Descriptor
  fullName: LiveKit.Proto.StartSession.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.StartSession.#ctor*
  commentId: Overload:LiveKit.Proto.StartSession.#ctor
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession__ctor
  name: StartSession
  nameWithType: StartSession.StartSession
  fullName: LiveKit.Proto.StartSession.StartSession
  nameWithType.vb: StartSession.New
  fullName.vb: LiveKit.Proto.StartSession.New
  name.vb: New
- uid: LiveKit.Proto.StartSession
  commentId: T:LiveKit.Proto.StartSession
  parent: LiveKit.Proto
  href: LiveKit.Proto.StartSession.html
  name: StartSession
  nameWithType: StartSession
  fullName: LiveKit.Proto.StartSession
- uid: LiveKit.Proto.StartSession.Clone*
  commentId: Overload:LiveKit.Proto.StartSession.Clone
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Clone
  name: Clone
  nameWithType: StartSession.Clone
  fullName: LiveKit.Proto.StartSession.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<StartSession>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.StartSession>.Clone()
  nameWithType.vb: IDeepCloneable(Of StartSession).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.StartSession).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.StartSession}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.StartSession.RoomName*
  commentId: Overload:LiveKit.Proto.StartSession.RoomName
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_RoomName
  name: RoomName
  nameWithType: StartSession.RoomName
  fullName: LiveKit.Proto.StartSession.RoomName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.StartSession.Identity*
  commentId: Overload:LiveKit.Proto.StartSession.Identity
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Identity
  name: Identity
  nameWithType: StartSession.Identity
  fullName: LiveKit.Proto.StartSession.Identity
- uid: LiveKit.Proto.StartSession.ConnectionId*
  commentId: Overload:LiveKit.Proto.StartSession.ConnectionId
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_ConnectionId
  name: ConnectionId
  nameWithType: StartSession.ConnectionId
  fullName: LiveKit.Proto.StartSession.ConnectionId
- uid: LiveKit.Proto.StartSession.Reconnect*
  commentId: Overload:LiveKit.Proto.StartSession.Reconnect
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Reconnect
  name: Reconnect
  nameWithType: StartSession.Reconnect
  fullName: LiveKit.Proto.StartSession.Reconnect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiveKit.Proto.StartSession.AutoSubscribe*
  commentId: Overload:LiveKit.Proto.StartSession.AutoSubscribe
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_AutoSubscribe
  name: AutoSubscribe
  nameWithType: StartSession.AutoSubscribe
  fullName: LiveKit.Proto.StartSession.AutoSubscribe
- uid: LiveKit.Proto.StartSession.Hidden*
  commentId: Overload:LiveKit.Proto.StartSession.Hidden
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Hidden
  name: Hidden
  nameWithType: StartSession.Hidden
  fullName: LiveKit.Proto.StartSession.Hidden
- uid: LiveKit.Proto.StartSession.Client*
  commentId: Overload:LiveKit.Proto.StartSession.Client
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Client
  name: Client
  nameWithType: StartSession.Client
  fullName: LiveKit.Proto.StartSession.Client
- uid: LiveKit.Proto.ClientInfo
  commentId: T:LiveKit.Proto.ClientInfo
  parent: LiveKit.Proto
  href: LiveKit.Proto.ClientInfo.html
  name: ClientInfo
  nameWithType: ClientInfo
  fullName: LiveKit.Proto.ClientInfo
- uid: LiveKit.Proto.StartSession.Recorder*
  commentId: Overload:LiveKit.Proto.StartSession.Recorder
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Recorder
  name: Recorder
  nameWithType: StartSession.Recorder
  fullName: LiveKit.Proto.StartSession.Recorder
- uid: LiveKit.Proto.StartSession.Name*
  commentId: Overload:LiveKit.Proto.StartSession.Name
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Name
  name: Name
  nameWithType: StartSession.Name
  fullName: LiveKit.Proto.StartSession.Name
- uid: LiveKit.Proto.StartSession.GrantsJson*
  commentId: Overload:LiveKit.Proto.StartSession.GrantsJson
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_GrantsJson
  name: GrantsJson
  nameWithType: StartSession.GrantsJson
  fullName: LiveKit.Proto.StartSession.GrantsJson
- uid: LiveKit.Proto.StartSession.AdaptiveStream*
  commentId: Overload:LiveKit.Proto.StartSession.AdaptiveStream
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_AdaptiveStream
  name: AdaptiveStream
  nameWithType: StartSession.AdaptiveStream
  fullName: LiveKit.Proto.StartSession.AdaptiveStream
- uid: LiveKit.Proto.StartSession.ParticipantId*
  commentId: Overload:LiveKit.Proto.StartSession.ParticipantId
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_ParticipantId
  name: ParticipantId
  nameWithType: StartSession.ParticipantId
  fullName: LiveKit.Proto.StartSession.ParticipantId
- uid: LiveKit.Proto.StartSession.ReconnectReason*
  commentId: Overload:LiveKit.Proto.StartSession.ReconnectReason
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_ReconnectReason
  name: ReconnectReason
  nameWithType: StartSession.ReconnectReason
  fullName: LiveKit.Proto.StartSession.ReconnectReason
- uid: LiveKit.Proto.ReconnectReason
  commentId: T:LiveKit.Proto.ReconnectReason
  parent: LiveKit.Proto
  href: LiveKit.Proto.ReconnectReason.html
  name: ReconnectReason
  nameWithType: ReconnectReason
  fullName: LiveKit.Proto.ReconnectReason
- uid: LiveKit.Proto.StartSession.SubscriberAllowPause*
  commentId: Overload:LiveKit.Proto.StartSession.SubscriberAllowPause
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_SubscriberAllowPause
  name: SubscriberAllowPause
  nameWithType: StartSession.SubscriberAllowPause
  fullName: LiveKit.Proto.StartSession.SubscriberAllowPause
- uid: LiveKit.Proto.StartSession.HasSubscriberAllowPause*
  commentId: Overload:LiveKit.Proto.StartSession.HasSubscriberAllowPause
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_HasSubscriberAllowPause
  name: HasSubscriberAllowPause
  nameWithType: StartSession.HasSubscriberAllowPause
  fullName: LiveKit.Proto.StartSession.HasSubscriberAllowPause
- uid: LiveKit.Proto.StartSession.ClearSubscriberAllowPause*
  commentId: Overload:LiveKit.Proto.StartSession.ClearSubscriberAllowPause
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_ClearSubscriberAllowPause
  name: ClearSubscriberAllowPause
  nameWithType: StartSession.ClearSubscriberAllowPause
  fullName: LiveKit.Proto.StartSession.ClearSubscriberAllowPause
- uid: LiveKit.Proto.StartSession.DisableIceLite*
  commentId: Overload:LiveKit.Proto.StartSession.DisableIceLite
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_DisableIceLite
  name: DisableIceLite
  nameWithType: StartSession.DisableIceLite
  fullName: LiveKit.Proto.StartSession.DisableIceLite
- uid: LiveKit.Proto.StartSession.CreateRoom*
  commentId: Overload:LiveKit.Proto.StartSession.CreateRoom
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_CreateRoom
  name: CreateRoom
  nameWithType: StartSession.CreateRoom
  fullName: LiveKit.Proto.StartSession.CreateRoom
- uid: LiveKit.Proto.CreateRoomRequest
  commentId: T:LiveKit.Proto.CreateRoomRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.CreateRoomRequest.html
  name: CreateRoomRequest
  nameWithType: CreateRoomRequest
  fullName: LiveKit.Proto.CreateRoomRequest
- uid: LiveKit.Proto.StartSession.AddTrackRequests*
  commentId: Overload:LiveKit.Proto.StartSession.AddTrackRequests
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_AddTrackRequests
  name: AddTrackRequests
  nameWithType: StartSession.AddTrackRequests
  fullName: LiveKit.Proto.StartSession.AddTrackRequests
- uid: Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.AddTrackRequest}
  commentId: T:Google.Protobuf.Collections.RepeatedField{LiveKit.Proto.AddTrackRequest}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: LiveKit.Proto.AddTrackRequest.html
  name: RepeatedField<AddTrackRequest>
  nameWithType: RepeatedField<AddTrackRequest>
  fullName: Google.Protobuf.Collections.RepeatedField<LiveKit.Proto.AddTrackRequest>
  nameWithType.vb: RepeatedField(Of AddTrackRequest)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of LiveKit.Proto.AddTrackRequest)
  name.vb: RepeatedField(Of AddTrackRequest)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.AddTrackRequest
    name: AddTrackRequest
    href: LiveKit.Proto.AddTrackRequest.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.AddTrackRequest
    name: AddTrackRequest
    href: LiveKit.Proto.AddTrackRequest.html
  - name: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
- uid: LiveKit.Proto.StartSession.PublisherOffer*
  commentId: Overload:LiveKit.Proto.StartSession.PublisherOffer
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_PublisherOffer
  name: PublisherOffer
  nameWithType: StartSession.PublisherOffer
  fullName: LiveKit.Proto.StartSession.PublisherOffer
- uid: LiveKit.Proto.SessionDescription
  commentId: T:LiveKit.Proto.SessionDescription
  parent: LiveKit.Proto
  href: LiveKit.Proto.SessionDescription.html
  name: SessionDescription
  nameWithType: SessionDescription
  fullName: LiveKit.Proto.SessionDescription
- uid: LiveKit.Proto.StartSession.SyncState*
  commentId: Overload:LiveKit.Proto.StartSession.SyncState
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_SyncState
  name: SyncState
  nameWithType: StartSession.SyncState
  fullName: LiveKit.Proto.StartSession.SyncState
- uid: LiveKit.Proto.SyncState
  commentId: T:LiveKit.Proto.SyncState
  parent: LiveKit.Proto
  href: LiveKit.Proto.SyncState.html
  name: SyncState
  nameWithType: SyncState
  fullName: LiveKit.Proto.SyncState
- uid: LiveKit.Proto.StartSession.UseSinglePeerConnection*
  commentId: Overload:LiveKit.Proto.StartSession.UseSinglePeerConnection
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_UseSinglePeerConnection
  name: UseSinglePeerConnection
  nameWithType: StartSession.UseSinglePeerConnection
  fullName: LiveKit.Proto.StartSession.UseSinglePeerConnection
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.StartSession.Equals*
  commentId: Overload:LiveKit.Proto.StartSession.Equals
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_Equals_System_Object_
  name: Equals
  nameWithType: StartSession.Equals
  fullName: LiveKit.Proto.StartSession.Equals
- uid: System.IEquatable{LiveKit.Proto.StartSession}.Equals(LiveKit.Proto.StartSession)
  commentId: M:System.IEquatable{LiveKit.Proto.StartSession}.Equals(LiveKit.Proto.StartSession)
  parent: System.IEquatable{LiveKit.Proto.StartSession}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(StartSession)
  nameWithType: IEquatable<StartSession>.Equals(StartSession)
  fullName: System.IEquatable<LiveKit.Proto.StartSession>.Equals(LiveKit.Proto.StartSession)
  nameWithType.vb: IEquatable(Of StartSession).Equals(StartSession)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.StartSession).Equals(LiveKit.Proto.StartSession)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.StartSession}.Equals(LiveKit.Proto.StartSession)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.StartSession}.Equals(LiveKit.Proto.StartSession)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.StartSession.GetHashCode*
  commentId: Overload:LiveKit.Proto.StartSession.GetHashCode
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_GetHashCode
  name: GetHashCode
  nameWithType: StartSession.GetHashCode
  fullName: LiveKit.Proto.StartSession.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.StartSession.ToString*
  commentId: Overload:LiveKit.Proto.StartSession.ToString
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_ToString
  name: ToString
  nameWithType: StartSession.ToString
  fullName: LiveKit.Proto.StartSession.ToString
- uid: LiveKit.Proto.StartSession.WriteTo*
  commentId: Overload:LiveKit.Proto.StartSession.WriteTo
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: StartSession.WriteTo
  fullName: LiveKit.Proto.StartSession.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.StartSession.CalculateSize*
  commentId: Overload:LiveKit.Proto.StartSession.CalculateSize
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_CalculateSize
  name: CalculateSize
  nameWithType: StartSession.CalculateSize
  fullName: LiveKit.Proto.StartSession.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.StartSession.MergeFrom*
  commentId: Overload:LiveKit.Proto.StartSession.MergeFrom
  href: LiveKit.Proto.StartSession.html#LiveKit_Proto_StartSession_MergeFrom_LiveKit_Proto_StartSession_
  name: MergeFrom
  nameWithType: StartSession.MergeFrom
  fullName: LiveKit.Proto.StartSession.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.StartSession}.MergeFrom(LiveKit.Proto.StartSession)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.StartSession}.MergeFrom(LiveKit.Proto.StartSession)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.StartSession}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.StartSession.html
  name: MergeFrom(StartSession)
  nameWithType: IMessage<StartSession>.MergeFrom(StartSession)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.StartSession>.MergeFrom(LiveKit.Proto.StartSession)
  nameWithType.vb: IMessage(Of StartSession).MergeFrom(StartSession)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.StartSession).MergeFrom(LiveKit.Proto.StartSession)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.StartSession}.MergeFrom(LiveKit.Proto.StartSession)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.StartSession}.MergeFrom(LiveKit.Proto.StartSession)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.StartSession
    name: StartSession
    href: LiveKit.Proto.StartSession.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
