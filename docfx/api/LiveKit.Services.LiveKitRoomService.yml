### YamlMime:ManagedReference
items:
- uid: LiveKit.Services.LiveKitRoomService
  commentId: T:LiveKit.Services.LiveKitRoomService
  id: LiveKitRoomService
  parent: LiveKit.Services
  children:
  - LiveKit.Services.LiveKitRoomService.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{LiveKit.Services.LiveKitRoomService},LiveKit.Authentication.ILiveKitTokenService)
  - LiveKit.Services.LiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
  - LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: LiveKitRoomService
  nameWithType: LiveKitRoomService
  fullName: LiveKit.Services.LiveKitRoomService
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: LiveKitRoomService
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 10
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: >-
    Service for managing LiveKit rooms and participants.

    <p>

    Provides methods for room creation, participant management, and room operations.

    See <a href="https://docs.livekit.io/reference/server/server-apis/#room-service">LiveKit Room Service Documentation</a> for more information.

    </p>
  example: []
  syntax:
    content: 'public sealed class LiveKitRoomService : TwirpClient, ILiveKitRoomService'
    content.vb: Public NotInheritable Class LiveKitRoomService Inherits TwirpClient Implements ILiveKitRoomService
  inheritance:
  - System.Object
  - LiveKit.Services.TwirpClient
  implements:
  - LiveKit.Services.ILiveKitRoomService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: LiveKit.Services.LiveKitRoomService.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{LiveKit.Services.LiveKitRoomService},LiveKit.Authentication.ILiveKitTokenService)
  commentId: M:LiveKit.Services.LiveKitRoomService.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{LiveKit.Services.LiveKitRoomService},LiveKit.Authentication.ILiveKitTokenService)
  id: '#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{LiveKit.Services.LiveKitRoomService},LiveKit.Authentication.ILiveKitTokenService)'
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: LiveKitRoomService(HttpClient, ILogger<LiveKitRoomService>, ILiveKitTokenService)
  nameWithType: LiveKitRoomService.LiveKitRoomService(HttpClient, ILogger<LiveKitRoomService>, ILiveKitTokenService)
  fullName: LiveKit.Services.LiveKitRoomService.LiveKitRoomService(System.Net.Http.HttpClient, Microsoft.Extensions.Logging.ILogger<LiveKit.Services.LiveKitRoomService>, LiveKit.Authentication.ILiveKitTokenService)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 17
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Initializes a new instance of the <xref href="LiveKit.Services.LiveKitRoomService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public LiveKitRoomService(HttpClient httpClient, ILogger<LiveKitRoomService> logger, ILiveKitTokenService _tokenService)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{LiveKit.Services.LiveKitRoomService}
    - id: _tokenService
      type: LiveKit.Authentication.ILiveKitTokenService
    content.vb: Public Sub New(httpClient As HttpClient, logger As ILogger(Of LiveKitRoomService), _tokenService As ILiveKitTokenService)
  overload: LiveKit.Services.LiveKitRoomService.#ctor*
  nameWithType.vb: LiveKitRoomService.New(HttpClient, ILogger(Of LiveKitRoomService), ILiveKitTokenService)
  fullName.vb: LiveKit.Services.LiveKitRoomService.New(System.Net.Http.HttpClient, Microsoft.Extensions.Logging.ILogger(Of LiveKit.Services.LiveKitRoomService), LiveKit.Authentication.ILiveKitTokenService)
  name.vb: New(HttpClient, ILogger(Of LiveKitRoomService), ILiveKitTokenService)
- uid: LiveKit.Services.LiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
  id: CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: CreateRoomAsync(CreateRoomRequest, CancellationToken)
  nameWithType: LiveKitRoomService.CreateRoomAsync(CreateRoomRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CreateRoomAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 23
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: >-
    Creates a room with settings. Requires `roomCreate` permission.

    This method is optional; rooms are automatically created when clients connect to them for the first time.
  example: []
  syntax:
    content: public Task<Room> CreateRoomAsync(CreateRoomRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.CreateRoomRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.Room}
    content.vb: Public Function CreateRoomAsync(request As CreateRoomRequest, cancellationToken As CancellationToken = Nothing) As Task(Of Room)
  overload: LiveKit.Services.LiveKitRoomService.CreateRoomAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
  id: ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: ListRoomsAsync(ListRoomsRequest, CancellationToken)
  nameWithType: LiveKitRoomService.ListRoomsAsync(ListRoomsRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ListRoomsAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 29
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Lists rooms that are active on the server. Requires `roomList` permission.
  example: []
  syntax:
    content: public Task<ListRoomsResponse> ListRoomsAsync(ListRoomsRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.ListRoomsRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.ListRoomsResponse}
    content.vb: Public Function ListRoomsAsync(request As ListRoomsRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ListRoomsResponse)
  overload: LiveKit.Services.LiveKitRoomService.ListRoomsAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
  id: DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: DeleteRoomAsync(DeleteRoomRequest, CancellationToken)
  nameWithType: LiveKitRoomService.DeleteRoomAsync(DeleteRoomRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: DeleteRoomAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 35
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: >-
    Deletes an existing room by name or id. Requires `roomCreate` permission.

    DeleteRoom will disconnect all participants that are currently in the room.
  example: []
  syntax:
    content: public Task<DeleteRoomResponse> DeleteRoomAsync(DeleteRoomRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.DeleteRoomRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.DeleteRoomResponse}
    content.vb: Public Function DeleteRoomAsync(request As DeleteRoomRequest, cancellationToken As CancellationToken = Nothing) As Task(Of DeleteRoomResponse)
  overload: LiveKit.Services.LiveKitRoomService.DeleteRoomAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
  id: ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: ListParticipantsAsync(ListParticipantsRequest, CancellationToken)
  nameWithType: LiveKitRoomService.ListParticipantsAsync(ListParticipantsRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ListParticipantsAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 41
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Lists participants in a room. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<ListParticipantsResponse> ListParticipantsAsync(ListParticipantsRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.ListParticipantsRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.ListParticipantsResponse}
    content.vb: Public Function ListParticipantsAsync(request As ListParticipantsRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ListParticipantsResponse)
  overload: LiveKit.Services.LiveKitRoomService.ListParticipantsAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  id: GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: GetParticipantAsync(RoomParticipantIdentity, CancellationToken)
  nameWithType: LiveKitRoomService.GetParticipantAsync(RoomParticipantIdentity, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetParticipantAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 47
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Gets information on a specific participant. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<ParticipantInfo> GetParticipantAsync(RoomParticipantIdentity request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.RoomParticipantIdentity
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.ParticipantInfo}
    content.vb: Public Function GetParticipantAsync(request As RoomParticipantIdentity, cancellationToken As CancellationToken = Nothing) As Task(Of ParticipantInfo)
  overload: LiveKit.Services.LiveKitRoomService.GetParticipantAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  id: RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: RemoveParticipantAsync(RoomParticipantIdentity, CancellationToken)
  nameWithType: LiveKitRoomService.RemoveParticipantAsync(RoomParticipantIdentity, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RemoveParticipantAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 53
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Removes a participant from room. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<RemoveParticipantResponse> RemoveParticipantAsync(RoomParticipantIdentity request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.RoomParticipantIdentity
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.RemoveParticipantResponse}
    content.vb: Public Function RemoveParticipantAsync(request As RoomParticipantIdentity, cancellationToken As CancellationToken = Nothing) As Task(Of RemoveParticipantResponse)
  overload: LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
  id: MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: MutePublishedTrackAsync(MuteRoomTrackRequest, CancellationToken)
  nameWithType: LiveKitRoomService.MutePublishedTrackAsync(MuteRoomTrackRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MutePublishedTrackAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 60
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Mutes or unmutes a participant's track. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<MuteRoomTrackResponse> MutePublishedTrackAsync(MuteRoomTrackRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.MuteRoomTrackRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.MuteRoomTrackResponse}
    content.vb: Public Function MutePublishedTrackAsync(request As MuteRoomTrackRequest, cancellationToken As CancellationToken = Nothing) As Task(Of MuteRoomTrackResponse)
  overload: LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
  id: UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: UpdateParticipantAsync(UpdateParticipantRequest, CancellationToken)
  nameWithType: LiveKitRoomService.UpdateParticipantAsync(UpdateParticipantRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: UpdateParticipantAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 66
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Updates participant metadata. Will cause updates to be broadcasted to everyone in the room. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<ParticipantInfo> UpdateParticipantAsync(UpdateParticipantRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.UpdateParticipantRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.ParticipantInfo}
    content.vb: Public Function UpdateParticipantAsync(request As UpdateParticipantRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ParticipantInfo)
  overload: LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
  id: UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: UpdateSubscriptionsAsync(UpdateSubscriptionsRequest, CancellationToken)
  nameWithType: LiveKitRoomService.UpdateSubscriptionsAsync(UpdateSubscriptionsRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: UpdateSubscriptionsAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 72
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Subscribes or unsubscribes a participant from tracks. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<UpdateSubscriptionsResponse> UpdateSubscriptionsAsync(UpdateSubscriptionsRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.UpdateSubscriptionsRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.UpdateSubscriptionsResponse}
    content.vb: Public Function UpdateSubscriptionsAsync(request As UpdateSubscriptionsRequest, cancellationToken As CancellationToken = Nothing) As Task(Of UpdateSubscriptionsResponse)
  overload: LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
  id: SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: SendDataAsync(SendDataRequest, CancellationToken)
  nameWithType: LiveKitRoomService.SendDataAsync(SendDataRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: SendDataAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 79
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Sends data over data channel to participants in a room. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<SendDataResponse> SendDataAsync(SendDataRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.SendDataRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.SendDataResponse}
    content.vb: Public Function SendDataAsync(request As SendDataRequest, cancellationToken As CancellationToken = Nothing) As Task(Of SendDataResponse)
  overload: LiveKit.Services.LiveKitRoomService.SendDataAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
  id: UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: UpdateRoomMetadataAsync(UpdateRoomMetadataRequest, CancellationToken)
  nameWithType: LiveKitRoomService.UpdateRoomMetadataAsync(UpdateRoomMetadataRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: UpdateRoomMetadataAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 85
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Updates room metadata. Will cause updates to be broadcasted to everyone in the room. Requires `roomAdmin` permission.
  example: []
  syntax:
    content: public Task<Room> UpdateRoomMetadataAsync(UpdateRoomMetadataRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.UpdateRoomMetadataRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.Room}
    content.vb: Public Function UpdateRoomMetadataAsync(request As UpdateRoomMetadataRequest, cancellationToken As CancellationToken = Nothing) As Task(Of Room)
  overload: LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
  id: ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: ForwardParticipantAsync(ForwardParticipantRequest, CancellationToken)
  nameWithType: LiveKitRoomService.ForwardParticipantAsync(ForwardParticipantRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ForwardParticipantAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 91
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: >-
    Cloud-only: Forwards a connected participant's track(s) to another room. Requires `roomAdmin` and `destinationRoom` permissions.

    The forwarding will stop when the participant leaves the room or RemoveParticipant has been called in the destination room.
  example: []
  syntax:
    content: public Task<ForwardParticipantResponse> ForwardParticipantAsync(ForwardParticipantRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.ForwardParticipantRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.ForwardParticipantResponse}
    content.vb: Public Function ForwardParticipantAsync(request As ForwardParticipantRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ForwardParticipantResponse)
  overload: LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
  id: MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: MoveParticipantAsync(MoveParticipantRequest, CancellationToken)
  nameWithType: LiveKitRoomService.MoveParticipantAsync(MoveParticipantRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MoveParticipantAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 98
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: >-
    Cloud-only: Moves a connected participant to a different room. Requires `roomAdmin` and `destinationRoom` permissions.

    The participant will be removed from the current room and added to the destination room.
  example: []
  syntax:
    content: public Task<MoveParticipantResponse> MoveParticipantAsync(MoveParticipantRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.MoveParticipantRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.MoveParticipantResponse}
    content.vb: Public Function MoveParticipantAsync(request As MoveParticipantRequest, cancellationToken As CancellationToken = Nothing) As Task(Of MoveParticipantResponse)
  overload: LiveKit.Services.LiveKitRoomService.MoveParticipantAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
- uid: LiveKit.Services.LiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.LiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
  id: PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.LiveKitRoomService
  langs:
  - csharp
  - vb
  name: PerformRpcAsync(PerformRpcRequest, CancellationToken)
  nameWithType: LiveKitRoomService.PerformRpcAsync(PerformRpcRequest, CancellationToken)
  fullName: LiveKit.Services.LiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: PerformRpcAsync
    path: ../LiveKit.AspNetCore.ServerSdk/Services/LiveKitRoomService.cs
    startLine: 104
  assemblies:
  - LiveKit.AspNetCore.ServerSdk
  namespace: LiveKit.Services
  summary: Performs an RPC call to a participant.
  example: []
  syntax:
    content: public Task<PerformRpcResponse> PerformRpcAsync(PerformRpcRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: LiveKit.Proto.PerformRpcRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{LiveKit.Proto.PerformRpcResponse}
    content.vb: Public Function PerformRpcAsync(request As PerformRpcRequest, cancellationToken As CancellationToken = Nothing) As Task(Of PerformRpcResponse)
  overload: LiveKit.Services.LiveKitRoomService.PerformRpcAsync*
  implements:
  - LiveKit.Services.ILiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
references:
- uid: LiveKit.Services
  commentId: N:LiveKit.Services
  href: LiveKit.html
  name: LiveKit.Services
  nameWithType: LiveKit.Services
  fullName: LiveKit.Services
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Services
    name: Services
    href: LiveKit.Services.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Services
    name: Services
    href: LiveKit.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: LiveKit.Services.TwirpClient
  commentId: T:LiveKit.Services.TwirpClient
  parent: LiveKit.Services
  href: LiveKit.Services.TwirpClient.html
  name: TwirpClient
  nameWithType: TwirpClient
  fullName: LiveKit.Services.TwirpClient
- uid: LiveKit.Services.ILiveKitRoomService
  commentId: T:LiveKit.Services.ILiveKitRoomService
  parent: LiveKit.Services
  href: LiveKit.Services.ILiveKitRoomService.html
  name: ILiveKitRoomService
  nameWithType: ILiveKitRoomService
  fullName: LiveKit.Services.ILiveKitRoomService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LiveKit.Services.LiveKitRoomService
  commentId: T:LiveKit.Services.LiveKitRoomService
  href: LiveKit.Services.LiveKitRoomService.html
  name: LiveKitRoomService
  nameWithType: LiveKitRoomService
  fullName: LiveKit.Services.LiveKitRoomService
- uid: LiveKit.Services.LiveKitRoomService.#ctor*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.#ctor
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService__ctor_System_Net_Http_HttpClient_Microsoft_Extensions_Logging_ILogger_LiveKit_Services_LiveKitRoomService__LiveKit_Authentication_ILiveKitTokenService_
  name: LiveKitRoomService
  nameWithType: LiveKitRoomService.LiveKitRoomService
  fullName: LiveKit.Services.LiveKitRoomService.LiveKitRoomService
  nameWithType.vb: LiveKitRoomService.New
  fullName.vb: LiveKit.Services.LiveKitRoomService.New
  name.vb: New
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Microsoft.Extensions.Logging.ILogger{LiveKit.Services.LiveKitRoomService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{LiveKit.Services.LiveKitRoomService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<LiveKitRoomService>
  nameWithType: ILogger<LiveKitRoomService>
  fullName: Microsoft.Extensions.Logging.ILogger<LiveKit.Services.LiveKitRoomService>
  nameWithType.vb: ILogger(Of LiveKitRoomService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of LiveKit.Services.LiveKitRoomService)
  name.vb: ILogger(Of LiveKitRoomService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: LiveKit.Services.LiveKitRoomService
    name: LiveKitRoomService
    href: LiveKit.Services.LiveKitRoomService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Services.LiveKitRoomService
    name: LiveKitRoomService
    href: LiveKit.Services.LiveKitRoomService.html
  - name: )
- uid: LiveKit.Authentication.ILiveKitTokenService
  commentId: T:LiveKit.Authentication.ILiveKitTokenService
  parent: LiveKit.Authentication
  href: LiveKit.Authentication.ILiveKitTokenService.html
  name: ILiveKitTokenService
  nameWithType: ILiveKitTokenService
  fullName: LiveKit.Authentication.ILiveKitTokenService
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: LiveKit.Authentication
  commentId: N:LiveKit.Authentication
  href: LiveKit.html
  name: LiveKit.Authentication
  nameWithType: LiveKit.Authentication
  fullName: LiveKit.Authentication
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Authentication
    name: Authentication
    href: LiveKit.Authentication.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Authentication
    name: Authentication
    href: LiveKit.Authentication.html
- uid: LiveKit.Services.LiveKitRoomService.CreateRoomAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.CreateRoomAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_CreateRoomAsync_LiveKit_Proto_CreateRoomRequest_System_Threading_CancellationToken_
  name: CreateRoomAsync
  nameWithType: LiveKitRoomService.CreateRoomAsync
  fullName: LiveKit.Services.LiveKitRoomService.CreateRoomAsync
- uid: LiveKit.Services.ILiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CreateRoomAsync(CreateRoomRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.CreateRoomAsync(CreateRoomRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
    name: CreateRoomAsync
  - name: (
  - uid: LiveKit.Proto.CreateRoomRequest
    name: CreateRoomRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.CreateRoomAsync(LiveKit.Proto.CreateRoomRequest,System.Threading.CancellationToken)
    name: CreateRoomAsync
  - name: (
  - uid: LiveKit.Proto.CreateRoomRequest
    name: CreateRoomRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.CreateRoomRequest
  commentId: T:LiveKit.Proto.CreateRoomRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.CreateRoomRequest.html
  name: CreateRoomRequest
  nameWithType: CreateRoomRequest
  fullName: LiveKit.Proto.CreateRoomRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{LiveKit.Proto.Room}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.Room}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Room>
  nameWithType: Task<Room>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.Room>
  nameWithType.vb: Task(Of Room)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.Room)
  name.vb: Task(Of Room)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.Room
    name: Room
    href: LiveKit.Proto.Room.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.Room
    name: Room
    href: LiveKit.Proto.Room.html
  - name: )
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: LiveKit.Services.LiveKitRoomService.ListRoomsAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.ListRoomsAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_ListRoomsAsync_LiveKit_Proto_ListRoomsRequest_System_Threading_CancellationToken_
  name: ListRoomsAsync
  nameWithType: LiveKitRoomService.ListRoomsAsync
  fullName: LiveKit.Services.LiveKitRoomService.ListRoomsAsync
- uid: LiveKit.Services.ILiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ListRoomsAsync(ListRoomsRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.ListRoomsAsync(ListRoomsRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
    name: ListRoomsAsync
  - name: (
  - uid: LiveKit.Proto.ListRoomsRequest
    name: ListRoomsRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.ListRoomsAsync(LiveKit.Proto.ListRoomsRequest,System.Threading.CancellationToken)
    name: ListRoomsAsync
  - name: (
  - uid: LiveKit.Proto.ListRoomsRequest
    name: ListRoomsRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.ListRoomsRequest
  commentId: T:LiveKit.Proto.ListRoomsRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.ListRoomsRequest.html
  name: ListRoomsRequest
  nameWithType: ListRoomsRequest
  fullName: LiveKit.Proto.ListRoomsRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.ListRoomsResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.ListRoomsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ListRoomsResponse>
  nameWithType: Task<ListRoomsResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.ListRoomsResponse>
  nameWithType.vb: Task(Of ListRoomsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.ListRoomsResponse)
  name.vb: Task(Of ListRoomsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.ListRoomsResponse
    name: ListRoomsResponse
    href: LiveKit.Proto.ListRoomsResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ListRoomsResponse
    name: ListRoomsResponse
    href: LiveKit.Proto.ListRoomsResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.DeleteRoomAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.DeleteRoomAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_DeleteRoomAsync_LiveKit_Proto_DeleteRoomRequest_System_Threading_CancellationToken_
  name: DeleteRoomAsync
  nameWithType: LiveKitRoomService.DeleteRoomAsync
  fullName: LiveKit.Services.LiveKitRoomService.DeleteRoomAsync
- uid: LiveKit.Services.ILiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: DeleteRoomAsync(DeleteRoomRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.DeleteRoomAsync(DeleteRoomRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
    name: DeleteRoomAsync
  - name: (
  - uid: LiveKit.Proto.DeleteRoomRequest
    name: DeleteRoomRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.DeleteRoomAsync(LiveKit.Proto.DeleteRoomRequest,System.Threading.CancellationToken)
    name: DeleteRoomAsync
  - name: (
  - uid: LiveKit.Proto.DeleteRoomRequest
    name: DeleteRoomRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.DeleteRoomRequest
  commentId: T:LiveKit.Proto.DeleteRoomRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.DeleteRoomRequest.html
  name: DeleteRoomRequest
  nameWithType: DeleteRoomRequest
  fullName: LiveKit.Proto.DeleteRoomRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.DeleteRoomResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.DeleteRoomResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DeleteRoomResponse>
  nameWithType: Task<DeleteRoomResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.DeleteRoomResponse>
  nameWithType.vb: Task(Of DeleteRoomResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.DeleteRoomResponse)
  name.vb: Task(Of DeleteRoomResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.DeleteRoomResponse
    name: DeleteRoomResponse
    href: LiveKit.Proto.DeleteRoomResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.DeleteRoomResponse
    name: DeleteRoomResponse
    href: LiveKit.Proto.DeleteRoomResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.ListParticipantsAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.ListParticipantsAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_ListParticipantsAsync_LiveKit_Proto_ListParticipantsRequest_System_Threading_CancellationToken_
  name: ListParticipantsAsync
  nameWithType: LiveKitRoomService.ListParticipantsAsync
  fullName: LiveKit.Services.LiveKitRoomService.ListParticipantsAsync
- uid: LiveKit.Services.ILiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ListParticipantsAsync(ListParticipantsRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.ListParticipantsAsync(ListParticipantsRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
    name: ListParticipantsAsync
  - name: (
  - uid: LiveKit.Proto.ListParticipantsRequest
    name: ListParticipantsRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.ListParticipantsAsync(LiveKit.Proto.ListParticipantsRequest,System.Threading.CancellationToken)
    name: ListParticipantsAsync
  - name: (
  - uid: LiveKit.Proto.ListParticipantsRequest
    name: ListParticipantsRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.ListParticipantsRequest
  commentId: T:LiveKit.Proto.ListParticipantsRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.ListParticipantsRequest.html
  name: ListParticipantsRequest
  nameWithType: ListParticipantsRequest
  fullName: LiveKit.Proto.ListParticipantsRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.ListParticipantsResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.ListParticipantsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ListParticipantsResponse>
  nameWithType: Task<ListParticipantsResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.ListParticipantsResponse>
  nameWithType.vb: Task(Of ListParticipantsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.ListParticipantsResponse)
  name.vb: Task(Of ListParticipantsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.ListParticipantsResponse
    name: ListParticipantsResponse
    href: LiveKit.Proto.ListParticipantsResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ListParticipantsResponse
    name: ListParticipantsResponse
    href: LiveKit.Proto.ListParticipantsResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.GetParticipantAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.GetParticipantAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_GetParticipantAsync_LiveKit_Proto_RoomParticipantIdentity_System_Threading_CancellationToken_
  name: GetParticipantAsync
  nameWithType: LiveKitRoomService.GetParticipantAsync
  fullName: LiveKit.Services.LiveKitRoomService.GetParticipantAsync
- uid: LiveKit.Services.ILiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: GetParticipantAsync(RoomParticipantIdentity, CancellationToken)
  nameWithType: ILiveKitRoomService.GetParticipantAsync(RoomParticipantIdentity, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
    name: GetParticipantAsync
  - name: (
  - uid: LiveKit.Proto.RoomParticipantIdentity
    name: RoomParticipantIdentity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.GetParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
    name: GetParticipantAsync
  - name: (
  - uid: LiveKit.Proto.RoomParticipantIdentity
    name: RoomParticipantIdentity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.RoomParticipantIdentity
  commentId: T:LiveKit.Proto.RoomParticipantIdentity
  parent: LiveKit.Proto
  href: LiveKit.Proto.RoomParticipantIdentity.html
  name: RoomParticipantIdentity
  nameWithType: RoomParticipantIdentity
  fullName: LiveKit.Proto.RoomParticipantIdentity
- uid: System.Threading.Tasks.Task{LiveKit.Proto.ParticipantInfo}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.ParticipantInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ParticipantInfo>
  nameWithType: Task<ParticipantInfo>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.ParticipantInfo>
  nameWithType.vb: Task(Of ParticipantInfo)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.ParticipantInfo)
  name.vb: Task(Of ParticipantInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.ParticipantInfo
    name: ParticipantInfo
    href: LiveKit.Proto.ParticipantInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ParticipantInfo
    name: ParticipantInfo
    href: LiveKit.Proto.ParticipantInfo.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_RemoveParticipantAsync_LiveKit_Proto_RoomParticipantIdentity_System_Threading_CancellationToken_
  name: RemoveParticipantAsync
  nameWithType: LiveKitRoomService.RemoveParticipantAsync
  fullName: LiveKit.Services.LiveKitRoomService.RemoveParticipantAsync
- uid: LiveKit.Services.ILiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: RemoveParticipantAsync(RoomParticipantIdentity, CancellationToken)
  nameWithType: ILiveKitRoomService.RemoveParticipantAsync(RoomParticipantIdentity, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
    name: RemoveParticipantAsync
  - name: (
  - uid: LiveKit.Proto.RoomParticipantIdentity
    name: RoomParticipantIdentity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.RemoveParticipantAsync(LiveKit.Proto.RoomParticipantIdentity,System.Threading.CancellationToken)
    name: RemoveParticipantAsync
  - name: (
  - uid: LiveKit.Proto.RoomParticipantIdentity
    name: RoomParticipantIdentity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{LiveKit.Proto.RemoveParticipantResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.RemoveParticipantResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RemoveParticipantResponse>
  nameWithType: Task<RemoveParticipantResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.RemoveParticipantResponse>
  nameWithType.vb: Task(Of RemoveParticipantResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.RemoveParticipantResponse)
  name.vb: Task(Of RemoveParticipantResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.RemoveParticipantResponse
    name: RemoveParticipantResponse
    href: LiveKit.Proto.RemoveParticipantResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.RemoveParticipantResponse
    name: RemoveParticipantResponse
    href: LiveKit.Proto.RemoveParticipantResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_MutePublishedTrackAsync_LiveKit_Proto_MuteRoomTrackRequest_System_Threading_CancellationToken_
  name: MutePublishedTrackAsync
  nameWithType: LiveKitRoomService.MutePublishedTrackAsync
  fullName: LiveKit.Services.LiveKitRoomService.MutePublishedTrackAsync
- uid: LiveKit.Services.ILiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: MutePublishedTrackAsync(MuteRoomTrackRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.MutePublishedTrackAsync(MuteRoomTrackRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
    name: MutePublishedTrackAsync
  - name: (
  - uid: LiveKit.Proto.MuteRoomTrackRequest
    name: MuteRoomTrackRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.MutePublishedTrackAsync(LiveKit.Proto.MuteRoomTrackRequest,System.Threading.CancellationToken)
    name: MutePublishedTrackAsync
  - name: (
  - uid: LiveKit.Proto.MuteRoomTrackRequest
    name: MuteRoomTrackRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.MuteRoomTrackRequest
  commentId: T:LiveKit.Proto.MuteRoomTrackRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.MuteRoomTrackRequest.html
  name: MuteRoomTrackRequest
  nameWithType: MuteRoomTrackRequest
  fullName: LiveKit.Proto.MuteRoomTrackRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.MuteRoomTrackResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.MuteRoomTrackResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MuteRoomTrackResponse>
  nameWithType: Task<MuteRoomTrackResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.MuteRoomTrackResponse>
  nameWithType.vb: Task(Of MuteRoomTrackResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.MuteRoomTrackResponse)
  name.vb: Task(Of MuteRoomTrackResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.MuteRoomTrackResponse
    name: MuteRoomTrackResponse
    href: LiveKit.Proto.MuteRoomTrackResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.MuteRoomTrackResponse
    name: MuteRoomTrackResponse
    href: LiveKit.Proto.MuteRoomTrackResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_UpdateParticipantAsync_LiveKit_Proto_UpdateParticipantRequest_System_Threading_CancellationToken_
  name: UpdateParticipantAsync
  nameWithType: LiveKitRoomService.UpdateParticipantAsync
  fullName: LiveKit.Services.LiveKitRoomService.UpdateParticipantAsync
- uid: LiveKit.Services.ILiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: UpdateParticipantAsync(UpdateParticipantRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.UpdateParticipantAsync(UpdateParticipantRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
    name: UpdateParticipantAsync
  - name: (
  - uid: LiveKit.Proto.UpdateParticipantRequest
    name: UpdateParticipantRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.UpdateParticipantAsync(LiveKit.Proto.UpdateParticipantRequest,System.Threading.CancellationToken)
    name: UpdateParticipantAsync
  - name: (
  - uid: LiveKit.Proto.UpdateParticipantRequest
    name: UpdateParticipantRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.UpdateParticipantRequest
  commentId: T:LiveKit.Proto.UpdateParticipantRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.UpdateParticipantRequest.html
  name: UpdateParticipantRequest
  nameWithType: UpdateParticipantRequest
  fullName: LiveKit.Proto.UpdateParticipantRequest
- uid: LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_UpdateSubscriptionsAsync_LiveKit_Proto_UpdateSubscriptionsRequest_System_Threading_CancellationToken_
  name: UpdateSubscriptionsAsync
  nameWithType: LiveKitRoomService.UpdateSubscriptionsAsync
  fullName: LiveKit.Services.LiveKitRoomService.UpdateSubscriptionsAsync
- uid: LiveKit.Services.ILiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: UpdateSubscriptionsAsync(UpdateSubscriptionsRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.UpdateSubscriptionsAsync(UpdateSubscriptionsRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
    name: UpdateSubscriptionsAsync
  - name: (
  - uid: LiveKit.Proto.UpdateSubscriptionsRequest
    name: UpdateSubscriptionsRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.UpdateSubscriptionsAsync(LiveKit.Proto.UpdateSubscriptionsRequest,System.Threading.CancellationToken)
    name: UpdateSubscriptionsAsync
  - name: (
  - uid: LiveKit.Proto.UpdateSubscriptionsRequest
    name: UpdateSubscriptionsRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.UpdateSubscriptionsRequest
  commentId: T:LiveKit.Proto.UpdateSubscriptionsRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.UpdateSubscriptionsRequest.html
  name: UpdateSubscriptionsRequest
  nameWithType: UpdateSubscriptionsRequest
  fullName: LiveKit.Proto.UpdateSubscriptionsRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.UpdateSubscriptionsResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.UpdateSubscriptionsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UpdateSubscriptionsResponse>
  nameWithType: Task<UpdateSubscriptionsResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.UpdateSubscriptionsResponse>
  nameWithType.vb: Task(Of UpdateSubscriptionsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.UpdateSubscriptionsResponse)
  name.vb: Task(Of UpdateSubscriptionsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.UpdateSubscriptionsResponse
    name: UpdateSubscriptionsResponse
    href: LiveKit.Proto.UpdateSubscriptionsResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.UpdateSubscriptionsResponse
    name: UpdateSubscriptionsResponse
    href: LiveKit.Proto.UpdateSubscriptionsResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.SendDataAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.SendDataAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_SendDataAsync_LiveKit_Proto_SendDataRequest_System_Threading_CancellationToken_
  name: SendDataAsync
  nameWithType: LiveKitRoomService.SendDataAsync
  fullName: LiveKit.Services.LiveKitRoomService.SendDataAsync
- uid: LiveKit.Services.ILiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: SendDataAsync(SendDataRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.SendDataAsync(SendDataRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
    name: SendDataAsync
  - name: (
  - uid: LiveKit.Proto.SendDataRequest
    name: SendDataRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.SendDataAsync(LiveKit.Proto.SendDataRequest,System.Threading.CancellationToken)
    name: SendDataAsync
  - name: (
  - uid: LiveKit.Proto.SendDataRequest
    name: SendDataRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.SendDataRequest
  commentId: T:LiveKit.Proto.SendDataRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.SendDataRequest.html
  name: SendDataRequest
  nameWithType: SendDataRequest
  fullName: LiveKit.Proto.SendDataRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.SendDataResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.SendDataResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SendDataResponse>
  nameWithType: Task<SendDataResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.SendDataResponse>
  nameWithType.vb: Task(Of SendDataResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.SendDataResponse)
  name.vb: Task(Of SendDataResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.SendDataResponse
    name: SendDataResponse
    href: LiveKit.Proto.SendDataResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.SendDataResponse
    name: SendDataResponse
    href: LiveKit.Proto.SendDataResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_UpdateRoomMetadataAsync_LiveKit_Proto_UpdateRoomMetadataRequest_System_Threading_CancellationToken_
  name: UpdateRoomMetadataAsync
  nameWithType: LiveKitRoomService.UpdateRoomMetadataAsync
  fullName: LiveKit.Services.LiveKitRoomService.UpdateRoomMetadataAsync
- uid: LiveKit.Services.ILiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: UpdateRoomMetadataAsync(UpdateRoomMetadataRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.UpdateRoomMetadataAsync(UpdateRoomMetadataRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
    name: UpdateRoomMetadataAsync
  - name: (
  - uid: LiveKit.Proto.UpdateRoomMetadataRequest
    name: UpdateRoomMetadataRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.UpdateRoomMetadataAsync(LiveKit.Proto.UpdateRoomMetadataRequest,System.Threading.CancellationToken)
    name: UpdateRoomMetadataAsync
  - name: (
  - uid: LiveKit.Proto.UpdateRoomMetadataRequest
    name: UpdateRoomMetadataRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.UpdateRoomMetadataRequest
  commentId: T:LiveKit.Proto.UpdateRoomMetadataRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.UpdateRoomMetadataRequest.html
  name: UpdateRoomMetadataRequest
  nameWithType: UpdateRoomMetadataRequest
  fullName: LiveKit.Proto.UpdateRoomMetadataRequest
- uid: LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_ForwardParticipantAsync_LiveKit_Proto_ForwardParticipantRequest_System_Threading_CancellationToken_
  name: ForwardParticipantAsync
  nameWithType: LiveKitRoomService.ForwardParticipantAsync
  fullName: LiveKit.Services.LiveKitRoomService.ForwardParticipantAsync
- uid: LiveKit.Services.ILiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ForwardParticipantAsync(ForwardParticipantRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.ForwardParticipantAsync(ForwardParticipantRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
    name: ForwardParticipantAsync
  - name: (
  - uid: LiveKit.Proto.ForwardParticipantRequest
    name: ForwardParticipantRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.ForwardParticipantAsync(LiveKit.Proto.ForwardParticipantRequest,System.Threading.CancellationToken)
    name: ForwardParticipantAsync
  - name: (
  - uid: LiveKit.Proto.ForwardParticipantRequest
    name: ForwardParticipantRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.ForwardParticipantRequest
  commentId: T:LiveKit.Proto.ForwardParticipantRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.ForwardParticipantRequest.html
  name: ForwardParticipantRequest
  nameWithType: ForwardParticipantRequest
  fullName: LiveKit.Proto.ForwardParticipantRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.ForwardParticipantResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.ForwardParticipantResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ForwardParticipantResponse>
  nameWithType: Task<ForwardParticipantResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.ForwardParticipantResponse>
  nameWithType.vb: Task(Of ForwardParticipantResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.ForwardParticipantResponse)
  name.vb: Task(Of ForwardParticipantResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.ForwardParticipantResponse
    name: ForwardParticipantResponse
    href: LiveKit.Proto.ForwardParticipantResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.ForwardParticipantResponse
    name: ForwardParticipantResponse
    href: LiveKit.Proto.ForwardParticipantResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.MoveParticipantAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.MoveParticipantAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_MoveParticipantAsync_LiveKit_Proto_MoveParticipantRequest_System_Threading_CancellationToken_
  name: MoveParticipantAsync
  nameWithType: LiveKitRoomService.MoveParticipantAsync
  fullName: LiveKit.Services.LiveKitRoomService.MoveParticipantAsync
- uid: LiveKit.Services.ILiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: MoveParticipantAsync(MoveParticipantRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.MoveParticipantAsync(MoveParticipantRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
    name: MoveParticipantAsync
  - name: (
  - uid: LiveKit.Proto.MoveParticipantRequest
    name: MoveParticipantRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.MoveParticipantAsync(LiveKit.Proto.MoveParticipantRequest,System.Threading.CancellationToken)
    name: MoveParticipantAsync
  - name: (
  - uid: LiveKit.Proto.MoveParticipantRequest
    name: MoveParticipantRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.MoveParticipantRequest
  commentId: T:LiveKit.Proto.MoveParticipantRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.MoveParticipantRequest.html
  name: MoveParticipantRequest
  nameWithType: MoveParticipantRequest
  fullName: LiveKit.Proto.MoveParticipantRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.MoveParticipantResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.MoveParticipantResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MoveParticipantResponse>
  nameWithType: Task<MoveParticipantResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.MoveParticipantResponse>
  nameWithType.vb: Task(Of MoveParticipantResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.MoveParticipantResponse)
  name.vb: Task(Of MoveParticipantResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.MoveParticipantResponse
    name: MoveParticipantResponse
    href: LiveKit.Proto.MoveParticipantResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.MoveParticipantResponse
    name: MoveParticipantResponse
    href: LiveKit.Proto.MoveParticipantResponse.html
  - name: )
- uid: LiveKit.Services.LiveKitRoomService.PerformRpcAsync*
  commentId: Overload:LiveKit.Services.LiveKitRoomService.PerformRpcAsync
  href: LiveKit.Services.LiveKitRoomService.html#LiveKit_Services_LiveKitRoomService_PerformRpcAsync_LiveKit_Proto_PerformRpcRequest_System_Threading_CancellationToken_
  name: PerformRpcAsync
  nameWithType: LiveKitRoomService.PerformRpcAsync
  fullName: LiveKit.Services.LiveKitRoomService.PerformRpcAsync
- uid: LiveKit.Services.ILiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
  commentId: M:LiveKit.Services.ILiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
  parent: LiveKit.Services.ILiveKitRoomService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: PerformRpcAsync(PerformRpcRequest, CancellationToken)
  nameWithType: ILiveKitRoomService.PerformRpcAsync(PerformRpcRequest, CancellationToken)
  fullName: LiveKit.Services.ILiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: LiveKit.Services.ILiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
    name: PerformRpcAsync
  - name: (
  - uid: LiveKit.Proto.PerformRpcRequest
    name: PerformRpcRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: LiveKit.Services.ILiveKitRoomService.PerformRpcAsync(LiveKit.Proto.PerformRpcRequest,System.Threading.CancellationToken)
    name: PerformRpcAsync
  - name: (
  - uid: LiveKit.Proto.PerformRpcRequest
    name: PerformRpcRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveKit.Proto.PerformRpcRequest
  commentId: T:LiveKit.Proto.PerformRpcRequest
  parent: LiveKit.Proto
  href: LiveKit.Proto.PerformRpcRequest.html
  name: PerformRpcRequest
  nameWithType: PerformRpcRequest
  fullName: LiveKit.Proto.PerformRpcRequest
- uid: System.Threading.Tasks.Task{LiveKit.Proto.PerformRpcResponse}
  commentId: T:System.Threading.Tasks.Task{LiveKit.Proto.PerformRpcResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PerformRpcResponse>
  nameWithType: Task<PerformRpcResponse>
  fullName: System.Threading.Tasks.Task<LiveKit.Proto.PerformRpcResponse>
  nameWithType.vb: Task(Of PerformRpcResponse)
  fullName.vb: System.Threading.Tasks.Task(Of LiveKit.Proto.PerformRpcResponse)
  name.vb: Task(Of PerformRpcResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: LiveKit.Proto.PerformRpcResponse
    name: PerformRpcResponse
    href: LiveKit.Proto.PerformRpcResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.PerformRpcResponse
    name: PerformRpcResponse
    href: LiveKit.Proto.PerformRpcResponse.html
  - name: )
