### YamlMime:ManagedReference
items:
- uid: LiveKit.Proto.WebhookEvent
  commentId: T:LiveKit.Proto.WebhookEvent
  id: WebhookEvent
  parent: LiveKit.Proto
  children:
  - LiveKit.Proto.WebhookEvent.#ctor
  - LiveKit.Proto.WebhookEvent.#ctor(LiveKit.Proto.WebhookEvent)
  - LiveKit.Proto.WebhookEvent.CalculateSize
  - LiveKit.Proto.WebhookEvent.Clone
  - LiveKit.Proto.WebhookEvent.CreatedAt
  - LiveKit.Proto.WebhookEvent.CreatedAtFieldNumber
  - LiveKit.Proto.WebhookEvent.Descriptor
  - LiveKit.Proto.WebhookEvent.EgressInfo
  - LiveKit.Proto.WebhookEvent.EgressInfoFieldNumber
  - LiveKit.Proto.WebhookEvent.Equals(LiveKit.Proto.WebhookEvent)
  - LiveKit.Proto.WebhookEvent.Equals(System.Object)
  - LiveKit.Proto.WebhookEvent.Event
  - LiveKit.Proto.WebhookEvent.EventFieldNumber
  - LiveKit.Proto.WebhookEvent.GetHashCode
  - LiveKit.Proto.WebhookEvent.Id
  - LiveKit.Proto.WebhookEvent.IdFieldNumber
  - LiveKit.Proto.WebhookEvent.IngressInfo
  - LiveKit.Proto.WebhookEvent.IngressInfoFieldNumber
  - LiveKit.Proto.WebhookEvent.MergeFrom(Google.Protobuf.CodedInputStream)
  - LiveKit.Proto.WebhookEvent.MergeFrom(LiveKit.Proto.WebhookEvent)
  - LiveKit.Proto.WebhookEvent.NumDropped
  - LiveKit.Proto.WebhookEvent.NumDroppedFieldNumber
  - LiveKit.Proto.WebhookEvent.Parser
  - LiveKit.Proto.WebhookEvent.Participant
  - LiveKit.Proto.WebhookEvent.ParticipantFieldNumber
  - LiveKit.Proto.WebhookEvent.Room
  - LiveKit.Proto.WebhookEvent.RoomFieldNumber
  - LiveKit.Proto.WebhookEvent.ToString
  - LiveKit.Proto.WebhookEvent.Track
  - LiveKit.Proto.WebhookEvent.TrackFieldNumber
  - LiveKit.Proto.WebhookEvent.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: WebhookEvent
  nameWithType: WebhookEvent
  fullName: LiveKit.Proto.WebhookEvent
  type: Class
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WebhookEvent
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 47
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: 'public sealed class WebhookEvent : IMessage<WebhookEvent>, IEquatable<WebhookEvent>, IDeepCloneable<WebhookEvent>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class WebhookEvent Implements IMessage(Of WebhookEvent), IEquatable(Of WebhookEvent), IDeepCloneable(Of WebhookEvent), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}
  - System.IEquatable{LiveKit.Proto.WebhookEvent}
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LiveKit.Proto.WebhookEvent.Parser
  commentId: P:LiveKit.Proto.WebhookEvent.Parser
  id: Parser
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: WebhookEvent.Parser
  fullName: LiveKit.Proto.WebhookEvent.Parser
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Parser
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 55
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageParser<WebhookEvent> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{LiveKit.Proto.WebhookEvent}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of WebhookEvent)
  overload: LiveKit.Proto.WebhookEvent.Parser*
- uid: LiveKit.Proto.WebhookEvent.Descriptor
  commentId: P:LiveKit.Proto.WebhookEvent.Descriptor
  id: Descriptor
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: WebhookEvent.Descriptor
  fullName: LiveKit.Proto.WebhookEvent.Descriptor
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Descriptor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 59
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: LiveKit.Proto.WebhookEvent.Descriptor*
- uid: LiveKit.Proto.WebhookEvent.#ctor
  commentId: M:LiveKit.Proto.WebhookEvent.#ctor
  id: '#ctor'
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: WebhookEvent()
  nameWithType: WebhookEvent.WebhookEvent()
  fullName: LiveKit.Proto.WebhookEvent.WebhookEvent()
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 71
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public WebhookEvent()
    content.vb: Public Sub New()
  overload: LiveKit.Proto.WebhookEvent.#ctor*
  nameWithType.vb: WebhookEvent.New()
  fullName.vb: LiveKit.Proto.WebhookEvent.New()
  name.vb: New()
- uid: LiveKit.Proto.WebhookEvent.#ctor(LiveKit.Proto.WebhookEvent)
  commentId: M:LiveKit.Proto.WebhookEvent.#ctor(LiveKit.Proto.WebhookEvent)
  id: '#ctor(LiveKit.Proto.WebhookEvent)'
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: WebhookEvent(WebhookEvent)
  nameWithType: WebhookEvent.WebhookEvent(WebhookEvent)
  fullName: LiveKit.Proto.WebhookEvent.WebhookEvent(LiveKit.Proto.WebhookEvent)
  type: Constructor
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: .ctor
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 79
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public WebhookEvent(WebhookEvent other)
    parameters:
    - id: other
      type: LiveKit.Proto.WebhookEvent
    content.vb: Public Sub New(other As WebhookEvent)
  overload: LiveKit.Proto.WebhookEvent.#ctor*
  nameWithType.vb: WebhookEvent.New(WebhookEvent)
  fullName.vb: LiveKit.Proto.WebhookEvent.New(LiveKit.Proto.WebhookEvent)
  name.vb: New(WebhookEvent)
- uid: LiveKit.Proto.WebhookEvent.Clone
  commentId: M:LiveKit.Proto.WebhookEvent.Clone
  id: Clone
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: WebhookEvent.Clone()
  fullName: LiveKit.Proto.WebhookEvent.Clone()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Clone
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 94
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public WebhookEvent Clone()
    return:
      type: LiveKit.Proto.WebhookEvent
      description: A deep clone of this object.
    content.vb: Public Function Clone() As WebhookEvent
  overload: LiveKit.Proto.WebhookEvent.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}.Clone
- uid: LiveKit.Proto.WebhookEvent.EventFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.EventFieldNumber
  id: EventFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: EventFieldNumber
  nameWithType: WebhookEvent.EventFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.EventFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EventFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 101
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "event" field.
  example: []
  syntax:
    content: public const int EventFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const EventFieldNumber As Integer = 1
- uid: LiveKit.Proto.WebhookEvent.Event
  commentId: P:LiveKit.Proto.WebhookEvent.Event
  id: Event
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: WebhookEvent.Event
  fullName: LiveKit.Proto.WebhookEvent.Event
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Event
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 108
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: >-
    one of room_started, room_finished, participant_joined, participant_left, participant_connection_aborted,

    track_published, track_unpublished, egress_started, egress_updated, egress_ended,

    ingress_started, ingress_ended
  example: []
  syntax:
    content: public string Event { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property [Event] As String
  overload: LiveKit.Proto.WebhookEvent.Event*
- uid: LiveKit.Proto.WebhookEvent.RoomFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.RoomFieldNumber
  id: RoomFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: RoomFieldNumber
  nameWithType: WebhookEvent.RoomFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.RoomFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: RoomFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 118
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "room" field.
  example: []
  syntax:
    content: public const int RoomFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const RoomFieldNumber As Integer = 2
- uid: LiveKit.Proto.WebhookEvent.Room
  commentId: P:LiveKit.Proto.WebhookEvent.Room
  id: Room
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: WebhookEvent.Room
  fullName: LiveKit.Proto.WebhookEvent.Room
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Room
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 120
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: public Room Room { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.Room
    content.vb: Public Property Room As Room
  overload: LiveKit.Proto.WebhookEvent.Room*
- uid: LiveKit.Proto.WebhookEvent.ParticipantFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.ParticipantFieldNumber
  id: ParticipantFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: ParticipantFieldNumber
  nameWithType: WebhookEvent.ParticipantFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.ParticipantFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ParticipantFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 130
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "participant" field.
  example: []
  syntax:
    content: public const int ParticipantFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ParticipantFieldNumber As Integer = 3
- uid: LiveKit.Proto.WebhookEvent.Participant
  commentId: P:LiveKit.Proto.WebhookEvent.Participant
  id: Participant
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Participant
  nameWithType: WebhookEvent.Participant
  fullName: LiveKit.Proto.WebhookEvent.Participant
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Participant
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 135
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: set when event is participant_* or track_*
  example: []
  syntax:
    content: public ParticipantInfo Participant { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.ParticipantInfo
    content.vb: Public Property Participant As ParticipantInfo
  overload: LiveKit.Proto.WebhookEvent.Participant*
- uid: LiveKit.Proto.WebhookEvent.EgressInfoFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.EgressInfoFieldNumber
  id: EgressInfoFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: EgressInfoFieldNumber
  nameWithType: WebhookEvent.EgressInfoFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.EgressInfoFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EgressInfoFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 145
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "egress_info" field.
  example: []
  syntax:
    content: public const int EgressInfoFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const EgressInfoFieldNumber As Integer = 9
- uid: LiveKit.Proto.WebhookEvent.EgressInfo
  commentId: P:LiveKit.Proto.WebhookEvent.EgressInfo
  id: EgressInfo
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: EgressInfo
  nameWithType: WebhookEvent.EgressInfo
  fullName: LiveKit.Proto.WebhookEvent.EgressInfo
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: EgressInfo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 150
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: set when event is egress_*
  example: []
  syntax:
    content: public EgressInfo EgressInfo { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.EgressInfo
    content.vb: Public Property EgressInfo As EgressInfo
  overload: LiveKit.Proto.WebhookEvent.EgressInfo*
- uid: LiveKit.Proto.WebhookEvent.IngressInfoFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.IngressInfoFieldNumber
  id: IngressInfoFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: IngressInfoFieldNumber
  nameWithType: WebhookEvent.IngressInfoFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.IngressInfoFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IngressInfoFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 160
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "ingress_info" field.
  example: []
  syntax:
    content: public const int IngressInfoFieldNumber = 10
    return:
      type: System.Int32
    content.vb: Public Const IngressInfoFieldNumber As Integer = 10
- uid: LiveKit.Proto.WebhookEvent.IngressInfo
  commentId: P:LiveKit.Proto.WebhookEvent.IngressInfo
  id: IngressInfo
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: IngressInfo
  nameWithType: WebhookEvent.IngressInfo
  fullName: LiveKit.Proto.WebhookEvent.IngressInfo
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IngressInfo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 165
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: set when event is ingress_*
  example: []
  syntax:
    content: public IngressInfo IngressInfo { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.IngressInfo
    content.vb: Public Property IngressInfo As IngressInfo
  overload: LiveKit.Proto.WebhookEvent.IngressInfo*
- uid: LiveKit.Proto.WebhookEvent.TrackFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.TrackFieldNumber
  id: TrackFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: TrackFieldNumber
  nameWithType: WebhookEvent.TrackFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.TrackFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: TrackFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 175
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "track" field.
  example: []
  syntax:
    content: public const int TrackFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const TrackFieldNumber As Integer = 8
- uid: LiveKit.Proto.WebhookEvent.Track
  commentId: P:LiveKit.Proto.WebhookEvent.Track
  id: Track
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Track
  nameWithType: WebhookEvent.Track
  fullName: LiveKit.Proto.WebhookEvent.Track
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Track
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 180
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: set when event is track_*
  example: []
  syntax:
    content: public TrackInfo Track { get; set; }
    parameters: []
    return:
      type: LiveKit.Proto.TrackInfo
    content.vb: Public Property Track As TrackInfo
  overload: LiveKit.Proto.WebhookEvent.Track*
- uid: LiveKit.Proto.WebhookEvent.IdFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.IdFieldNumber
  id: IdFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: IdFieldNumber
  nameWithType: WebhookEvent.IdFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.IdFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: IdFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 190
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "id" field.
  example: []
  syntax:
    content: public const int IdFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const IdFieldNumber As Integer = 6
- uid: LiveKit.Proto.WebhookEvent.Id
  commentId: P:LiveKit.Proto.WebhookEvent.Id
  id: Id
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: WebhookEvent.Id
  fullName: LiveKit.Proto.WebhookEvent.Id
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Id
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 195
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: unique event uuid
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: LiveKit.Proto.WebhookEvent.Id*
- uid: LiveKit.Proto.WebhookEvent.CreatedAtFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.CreatedAtFieldNumber
  id: CreatedAtFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: CreatedAtFieldNumber
  nameWithType: WebhookEvent.CreatedAtFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.CreatedAtFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CreatedAtFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 205
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "created_at" field.
  example: []
  syntax:
    content: public const int CreatedAtFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const CreatedAtFieldNumber As Integer = 7
- uid: LiveKit.Proto.WebhookEvent.CreatedAt
  commentId: P:LiveKit.Proto.WebhookEvent.CreatedAt
  id: CreatedAt
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: WebhookEvent.CreatedAt
  fullName: LiveKit.Proto.WebhookEvent.CreatedAt
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CreatedAt
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 210
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: timestamp in seconds
  example: []
  syntax:
    content: public long CreatedAt { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CreatedAt As Long
  overload: LiveKit.Proto.WebhookEvent.CreatedAt*
- uid: LiveKit.Proto.WebhookEvent.NumDroppedFieldNumber
  commentId: F:LiveKit.Proto.WebhookEvent.NumDroppedFieldNumber
  id: NumDroppedFieldNumber
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: NumDroppedFieldNumber
  nameWithType: WebhookEvent.NumDroppedFieldNumber
  fullName: LiveKit.Proto.WebhookEvent.NumDroppedFieldNumber
  type: Field
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NumDroppedFieldNumber
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 220
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Field number for the "num_dropped" field.
  example: []
  syntax:
    content: public const int NumDroppedFieldNumber = 11
    return:
      type: System.Int32
    content.vb: Public Const NumDroppedFieldNumber As Integer = 11
- uid: LiveKit.Proto.WebhookEvent.NumDropped
  commentId: P:LiveKit.Proto.WebhookEvent.NumDropped
  id: NumDropped
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: NumDropped
  nameWithType: WebhookEvent.NumDropped
  fullName: LiveKit.Proto.WebhookEvent.NumDropped
  type: Property
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: NumDropped
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 222
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  syntax:
    content: >-
      [Obsolete]

      public int NumDropped { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Obsolete>

      Public Property NumDropped As Integer
  overload: LiveKit.Proto.WebhookEvent.NumDropped*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: LiveKit.Proto.WebhookEvent.Equals(System.Object)
  commentId: M:LiveKit.Proto.WebhookEvent.Equals(System.Object)
  id: Equals(System.Object)
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: WebhookEvent.Equals(object)
  fullName: LiveKit.Proto.WebhookEvent.Equals(object)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 232
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LiveKit.Proto.WebhookEvent.Equals*
  nameWithType.vb: WebhookEvent.Equals(Object)
  fullName.vb: LiveKit.Proto.WebhookEvent.Equals(Object)
  name.vb: Equals(Object)
- uid: LiveKit.Proto.WebhookEvent.Equals(LiveKit.Proto.WebhookEvent)
  commentId: M:LiveKit.Proto.WebhookEvent.Equals(LiveKit.Proto.WebhookEvent)
  id: Equals(LiveKit.Proto.WebhookEvent)
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: Equals(WebhookEvent)
  nameWithType: WebhookEvent.Equals(WebhookEvent)
  fullName: LiveKit.Proto.WebhookEvent.Equals(LiveKit.Proto.WebhookEvent)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: Equals
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 238
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public bool Equals(WebhookEvent other)
    parameters:
    - id: other
      type: LiveKit.Proto.WebhookEvent
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As WebhookEvent) As Boolean
  overload: LiveKit.Proto.WebhookEvent.Equals*
  implements:
  - System.IEquatable{LiveKit.Proto.WebhookEvent}.Equals(LiveKit.Proto.WebhookEvent)
- uid: LiveKit.Proto.WebhookEvent.GetHashCode
  commentId: M:LiveKit.Proto.WebhookEvent.GetHashCode
  id: GetHashCode
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: WebhookEvent.GetHashCode()
  fullName: LiveKit.Proto.WebhookEvent.GetHashCode()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: GetHashCode
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 259
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiveKit.Proto.WebhookEvent.GetHashCode*
- uid: LiveKit.Proto.WebhookEvent.ToString
  commentId: M:LiveKit.Proto.WebhookEvent.ToString
  id: ToString
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: WebhookEvent.ToString()
  fullName: LiveKit.Proto.WebhookEvent.ToString()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: ToString
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 278
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveKit.Proto.WebhookEvent.ToString*
- uid: LiveKit.Proto.WebhookEvent.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:LiveKit.Proto.WebhookEvent.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: WebhookEvent.WriteTo(CodedOutputStream)
  fullName: LiveKit.Proto.WebhookEvent.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: WriteTo
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 284
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: LiveKit.Proto.WebhookEvent.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: LiveKit.Proto.WebhookEvent.CalculateSize
  commentId: M:LiveKit.Proto.WebhookEvent.CalculateSize
  id: CalculateSize
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: WebhookEvent.CalculateSize()
  fullName: LiveKit.Proto.WebhookEvent.CalculateSize()
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: CalculateSize
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 378
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: LiveKit.Proto.WebhookEvent.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: LiveKit.Proto.WebhookEvent.MergeFrom(LiveKit.Proto.WebhookEvent)
  commentId: M:LiveKit.Proto.WebhookEvent.MergeFrom(LiveKit.Proto.WebhookEvent)
  id: MergeFrom(LiveKit.Proto.WebhookEvent)
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: MergeFrom(WebhookEvent)
  nameWithType: WebhookEvent.MergeFrom(WebhookEvent)
  fullName: LiveKit.Proto.WebhookEvent.MergeFrom(LiveKit.Proto.WebhookEvent)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 415
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(WebhookEvent other)
    parameters:
    - id: other
      type: LiveKit.Proto.WebhookEvent
    content.vb: Public Sub MergeFrom(other As WebhookEvent)
  overload: LiveKit.Proto.WebhookEvent.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}.MergeFrom(LiveKit.Proto.WebhookEvent)
- uid: LiveKit.Proto.WebhookEvent.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:LiveKit.Proto.WebhookEvent.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: LiveKit.Proto.WebhookEvent
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: WebhookEvent.MergeFrom(CodedInputStream)
  fullName: LiveKit.Proto.WebhookEvent.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
      branch: main
      repo: git@github.com:ahmedisam99/livekit-server-sdk-aspnetcore.git
    id: MergeFrom
    path: ../LiveKit.AspNetCore.ServerSdk.Abstractions/Proto/LivekitWebhook.cs
    startLine: 466
  assemblies:
  - LiveKit.AspNetCore.ServerSdk.Abstractions
  namespace: LiveKit.Proto
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: LiveKit.Proto.WebhookEvent.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: LiveKit.Proto
  commentId: N:LiveKit.Proto
  href: LiveKit.html
  name: LiveKit.Proto
  nameWithType: LiveKit.Proto
  fullName: LiveKit.Proto
  spec.csharp:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
  spec.vb:
  - uid: LiveKit
    name: LiveKit
    href: LiveKit.html
  - name: .
  - uid: LiveKit.Proto
    name: Proto
    href: LiveKit.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}
  commentId: T:Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: LiveKit.Proto.WebhookEvent.html
  name: IMessage<WebhookEvent>
  nameWithType: IMessage<WebhookEvent>
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.WebhookEvent>
  nameWithType.vb: IMessage(Of WebhookEvent)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.WebhookEvent)
  name.vb: IMessage(Of WebhookEvent)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
- uid: System.IEquatable{LiveKit.Proto.WebhookEvent}
  commentId: T:System.IEquatable{LiveKit.Proto.WebhookEvent}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<WebhookEvent>
  nameWithType: IEquatable<WebhookEvent>
  fullName: System.IEquatable<LiveKit.Proto.WebhookEvent>
  nameWithType.vb: IEquatable(Of WebhookEvent)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.WebhookEvent)
  name.vb: IEquatable(Of WebhookEvent)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}
  commentId: T:Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: LiveKit.Proto.WebhookEvent.html
  name: IDeepCloneable<WebhookEvent>
  nameWithType: IDeepCloneable<WebhookEvent>
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.WebhookEvent>
  nameWithType.vb: IDeepCloneable(Of WebhookEvent)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.WebhookEvent)
  name.vb: IDeepCloneable(Of WebhookEvent)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.WebhookEvent.Parser*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Parser
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Parser
  name: Parser
  nameWithType: WebhookEvent.Parser
  fullName: LiveKit.Proto.WebhookEvent.Parser
- uid: Google.Protobuf.MessageParser{LiveKit.Proto.WebhookEvent}
  commentId: T:Google.Protobuf.MessageParser{LiveKit.Proto.WebhookEvent}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: LiveKit.Proto.WebhookEvent.html
  name: MessageParser<WebhookEvent>
  nameWithType: MessageParser<WebhookEvent>
  fullName: Google.Protobuf.MessageParser<LiveKit.Proto.WebhookEvent>
  nameWithType.vb: MessageParser(Of WebhookEvent)
  fullName.vb: Google.Protobuf.MessageParser(Of LiveKit.Proto.WebhookEvent)
  name.vb: MessageParser(Of WebhookEvent)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiveKit.Proto.WebhookEvent.Descriptor*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Descriptor
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Descriptor
  name: Descriptor
  nameWithType: WebhookEvent.Descriptor
  fullName: LiveKit.Proto.WebhookEvent.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: LiveKit.Proto.WebhookEvent.#ctor*
  commentId: Overload:LiveKit.Proto.WebhookEvent.#ctor
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent__ctor
  name: WebhookEvent
  nameWithType: WebhookEvent.WebhookEvent
  fullName: LiveKit.Proto.WebhookEvent.WebhookEvent
  nameWithType.vb: WebhookEvent.New
  fullName.vb: LiveKit.Proto.WebhookEvent.New
  name.vb: New
- uid: LiveKit.Proto.WebhookEvent
  commentId: T:LiveKit.Proto.WebhookEvent
  parent: LiveKit.Proto
  href: LiveKit.Proto.WebhookEvent.html
  name: WebhookEvent
  nameWithType: WebhookEvent
  fullName: LiveKit.Proto.WebhookEvent
- uid: LiveKit.Proto.WebhookEvent.Clone*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Clone
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Clone
  name: Clone
  nameWithType: WebhookEvent.Clone
  fullName: LiveKit.Proto.WebhookEvent.Clone
- uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}.Clone
  parent: Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<WebhookEvent>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<LiveKit.Proto.WebhookEvent>.Clone()
  nameWithType.vb: IDeepCloneable(Of WebhookEvent).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of LiveKit.Proto.WebhookEvent).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{LiveKit.Proto.WebhookEvent}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LiveKit.Proto.WebhookEvent.Event*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Event
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Event
  name: Event
  nameWithType: WebhookEvent.Event
  fullName: LiveKit.Proto.WebhookEvent.Event
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LiveKit.Proto.WebhookEvent.Room*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Room
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Room
  name: Room
  nameWithType: WebhookEvent.Room
  fullName: LiveKit.Proto.WebhookEvent.Room
- uid: LiveKit.Proto.Room
  commentId: T:LiveKit.Proto.Room
  parent: LiveKit.Proto
  href: LiveKit.Proto.Room.html
  name: Room
  nameWithType: Room
  fullName: LiveKit.Proto.Room
- uid: LiveKit.Proto.WebhookEvent.Participant*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Participant
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Participant
  name: Participant
  nameWithType: WebhookEvent.Participant
  fullName: LiveKit.Proto.WebhookEvent.Participant
- uid: LiveKit.Proto.ParticipantInfo
  commentId: T:LiveKit.Proto.ParticipantInfo
  parent: LiveKit.Proto
  href: LiveKit.Proto.ParticipantInfo.html
  name: ParticipantInfo
  nameWithType: ParticipantInfo
  fullName: LiveKit.Proto.ParticipantInfo
- uid: LiveKit.Proto.WebhookEvent.EgressInfo*
  commentId: Overload:LiveKit.Proto.WebhookEvent.EgressInfo
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_EgressInfo
  name: EgressInfo
  nameWithType: WebhookEvent.EgressInfo
  fullName: LiveKit.Proto.WebhookEvent.EgressInfo
- uid: LiveKit.Proto.EgressInfo
  commentId: T:LiveKit.Proto.EgressInfo
  parent: LiveKit.Proto
  href: LiveKit.Proto.EgressInfo.html
  name: EgressInfo
  nameWithType: EgressInfo
  fullName: LiveKit.Proto.EgressInfo
- uid: LiveKit.Proto.WebhookEvent.IngressInfo*
  commentId: Overload:LiveKit.Proto.WebhookEvent.IngressInfo
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_IngressInfo
  name: IngressInfo
  nameWithType: WebhookEvent.IngressInfo
  fullName: LiveKit.Proto.WebhookEvent.IngressInfo
- uid: LiveKit.Proto.IngressInfo
  commentId: T:LiveKit.Proto.IngressInfo
  parent: LiveKit.Proto
  href: LiveKit.Proto.IngressInfo.html
  name: IngressInfo
  nameWithType: IngressInfo
  fullName: LiveKit.Proto.IngressInfo
- uid: LiveKit.Proto.WebhookEvent.Track*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Track
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Track
  name: Track
  nameWithType: WebhookEvent.Track
  fullName: LiveKit.Proto.WebhookEvent.Track
- uid: LiveKit.Proto.TrackInfo
  commentId: T:LiveKit.Proto.TrackInfo
  parent: LiveKit.Proto
  href: LiveKit.Proto.TrackInfo.html
  name: TrackInfo
  nameWithType: TrackInfo
  fullName: LiveKit.Proto.TrackInfo
- uid: LiveKit.Proto.WebhookEvent.Id*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Id
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Id
  name: Id
  nameWithType: WebhookEvent.Id
  fullName: LiveKit.Proto.WebhookEvent.Id
- uid: LiveKit.Proto.WebhookEvent.CreatedAt*
  commentId: Overload:LiveKit.Proto.WebhookEvent.CreatedAt
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_CreatedAt
  name: CreatedAt
  nameWithType: WebhookEvent.CreatedAt
  fullName: LiveKit.Proto.WebhookEvent.CreatedAt
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: LiveKit.Proto.WebhookEvent.NumDropped*
  commentId: Overload:LiveKit.Proto.WebhookEvent.NumDropped
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_NumDropped
  name: NumDropped
  nameWithType: WebhookEvent.NumDropped
  fullName: LiveKit.Proto.WebhookEvent.NumDropped
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveKit.Proto.WebhookEvent.Equals*
  commentId: Overload:LiveKit.Proto.WebhookEvent.Equals
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_Equals_System_Object_
  name: Equals
  nameWithType: WebhookEvent.Equals
  fullName: LiveKit.Proto.WebhookEvent.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{LiveKit.Proto.WebhookEvent}.Equals(LiveKit.Proto.WebhookEvent)
  commentId: M:System.IEquatable{LiveKit.Proto.WebhookEvent}.Equals(LiveKit.Proto.WebhookEvent)
  parent: System.IEquatable{LiveKit.Proto.WebhookEvent}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(WebhookEvent)
  nameWithType: IEquatable<WebhookEvent>.Equals(WebhookEvent)
  fullName: System.IEquatable<LiveKit.Proto.WebhookEvent>.Equals(LiveKit.Proto.WebhookEvent)
  nameWithType.vb: IEquatable(Of WebhookEvent).Equals(WebhookEvent)
  fullName.vb: System.IEquatable(Of LiveKit.Proto.WebhookEvent).Equals(LiveKit.Proto.WebhookEvent)
  spec.csharp:
  - uid: System.IEquatable{LiveKit.Proto.WebhookEvent}.Equals(LiveKit.Proto.WebhookEvent)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LiveKit.Proto.WebhookEvent}.Equals(LiveKit.Proto.WebhookEvent)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: LiveKit.Proto.WebhookEvent.GetHashCode*
  commentId: Overload:LiveKit.Proto.WebhookEvent.GetHashCode
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_GetHashCode
  name: GetHashCode
  nameWithType: WebhookEvent.GetHashCode
  fullName: LiveKit.Proto.WebhookEvent.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveKit.Proto.WebhookEvent.ToString*
  commentId: Overload:LiveKit.Proto.WebhookEvent.ToString
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_ToString
  name: ToString
  nameWithType: WebhookEvent.ToString
  fullName: LiveKit.Proto.WebhookEvent.ToString
- uid: LiveKit.Proto.WebhookEvent.WriteTo*
  commentId: Overload:LiveKit.Proto.WebhookEvent.WriteTo
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: WebhookEvent.WriteTo
  fullName: LiveKit.Proto.WebhookEvent.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: LiveKit.Proto.WebhookEvent.CalculateSize*
  commentId: Overload:LiveKit.Proto.WebhookEvent.CalculateSize
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_CalculateSize
  name: CalculateSize
  nameWithType: WebhookEvent.CalculateSize
  fullName: LiveKit.Proto.WebhookEvent.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: LiveKit.Proto.WebhookEvent.MergeFrom*
  commentId: Overload:LiveKit.Proto.WebhookEvent.MergeFrom
  href: LiveKit.Proto.WebhookEvent.html#LiveKit_Proto_WebhookEvent_MergeFrom_LiveKit_Proto_WebhookEvent_
  name: MergeFrom
  nameWithType: WebhookEvent.MergeFrom
  fullName: LiveKit.Proto.WebhookEvent.MergeFrom
- uid: Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}.MergeFrom(LiveKit.Proto.WebhookEvent)
  commentId: M:Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}.MergeFrom(LiveKit.Proto.WebhookEvent)
  parent: Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: LiveKit.Proto.WebhookEvent.html
  name: MergeFrom(WebhookEvent)
  nameWithType: IMessage<WebhookEvent>.MergeFrom(WebhookEvent)
  fullName: Google.Protobuf.IMessage<LiveKit.Proto.WebhookEvent>.MergeFrom(LiveKit.Proto.WebhookEvent)
  nameWithType.vb: IMessage(Of WebhookEvent).MergeFrom(WebhookEvent)
  fullName.vb: Google.Protobuf.IMessage(Of LiveKit.Proto.WebhookEvent).MergeFrom(LiveKit.Proto.WebhookEvent)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}.MergeFrom(LiveKit.Proto.WebhookEvent)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{LiveKit.Proto.WebhookEvent}.MergeFrom(LiveKit.Proto.WebhookEvent)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: LiveKit.Proto.WebhookEvent
    name: WebhookEvent
    href: LiveKit.Proto.WebhookEvent.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
